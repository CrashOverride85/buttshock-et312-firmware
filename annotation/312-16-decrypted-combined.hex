#include <stdio.h>

/* Disassembly of 312-16-decrypted-combined.bin (pseudocode) */

int  r0,  r1,  r2,  r3,  r4,  r5,  r6,  r7,  r8,  r9;
int r10, r11, r12, r13, r14, r15, r16, r17, r18, r19;
int r20, r21, r22, r23, r24, r25, r26, r27, r28, r29;
int r30, r31, r32;

int main(int argc, char **argv) {
.text
main:
IVT_RESET:
   0:   0c 94 53 0a     goto RESET;
IVT_IRQ0:
   4:   0c 94 33 07     goto IRQ0_Handler;
IVT_IRQ1:
   8:   0c 94 3e 07     goto IRQ1_Handler;
IVT_TIMER2_COMP:
   c:   0c 94 53 0a     goto RESET;
IVT_TIMER2_OVF:
  10:   0c 94 53 0a     goto RESET;
IVT_TIMER1_CAPT:
  14:   0c 94 53 0a     goto RESET;
IVT_TIMER1_COMPA:
  18:   0c 94 49 07     goto Timer1_CMP_A;
IVT_TIMER1_COMPB:
  1c:   0c 94 c5 07     goto Timer1_CMP_B;
IVT_TIMER1_OVF:
  20:   0c 94 53 0a     goto RESET;
IVT_TIMER0_OVF:
  24:   0c 94 2f 07     goto Timer0_Overflow;
IVT_SPISTC:
  28:   0c 94 7c 08     goto SPI_Transfer_Complete;
IVT_USART_RXC:
  2c:   0c 94 bc 08     goto USART_RX_Complete;
IVT_USART_UDR:
  30:   0c 94 53 0a     goto RESET;
IVT_USART_TXC:
  34:   0c 94 53 0a     goto RESET;
IVT_ADC:
  38:   0c 94 37 08     goto ADC_Conversion_Complete;
IVT_EERDY:
  3c:   0c 94 53 0a     goto RESET;
IVT_ANA_COMP:
  40:   0c 94 53 0a     goto RESET;
IVT_TWI:
  44:   0c 94 53 0a     goto RESET;
IVT_IRQ2:
  48:   0c 94 53 0a     goto RESET;
IVT_TIMER0_COMP:
  4c:   0c 94 53 0a     goto RESET;
IVT_SPMRDY:
  50:   0c 94 53 0a     goto RESET;

; Referenced from offset 0x9a by rjmp
; Referenced from offset 0x31a by rjmp
; Referenced from offset 0x468 by rjmp
; Referenced from offset 0x4ba by rjmp
; Referenced from offset 0x512 by rjmp
; Referenced from offset 0x584 by rjmp
; Referenced from offset 0x58e by rjmp
; Referenced from offset 0xb96 by rjmp
; Referenced from offset 0x1548 by jmp
; Referenced from offset 0x1998 by jmp
Main:
  54:   c0 e6           r28 = 96;                           ; 0x60
; Main: reset watchdog, send any serial commands queued, handle any serial received, update MA if needed, handle A&B audio inputs, handle timer0 trigerring, goto Main
  56:   a8 95           wdr
; is there anything in the com buffer to send? is so go and send it
  58:   a0 91 f1 01     r26 = counter_for_0x22C;            ; 0x01f1
  5c:   ac 32           cmp(r26, 0x2c);                     ; 44
  5e:   11 f0           if (c1 == c2) goto main_nothing_to_send;
  60:   0e 94 17 0d     send_com_buffer_to_USART();

; Referenced from offset 0x5e by breq
main_nothing_to_send:
  64:   15 fd           skipif (!bit(r17,5))
; if r17[bit5-received-serial-command] is set, call handle_received_serial_command()
  66:   0e 94 2c 0c     handle_received_serial_command();
; r4 is copy of [0x83] Output Control Flags - bit0-phase-control-0 (if set update MA value)
  6a:   40 fc           skipif (!bit(r4,0))
  6c:   97 d2           update_current_channel_multi_adjust_value();
; if r17[bit2-timer0-triggered] goto main_timer0_has_triggered
  6e:   12 fd           skipif (!bit(r17,2))
  70:   15 c0           goto main_timer0_has_triggered;
; is output A in an audio mode (r5[bit6-is-an-audio-mode] from 0x90)? yes then update the intensity_modulation_value
  72:   56 fe           skipif (bit(r5,6))
  74:   08 c0           goto main_not_audio_a_mode;
; (0x67-Audio Input Level A (Half wave) (ADC7))
  76:   af 81           r26 = Memory[[r28:r29]+7];
  78:   a6 95           r26 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
  7a:   a3 55           r26 -= 83;                          ; 0x53, no carry
  7c:   08 f0           if (Carry) goto Label_0x80;
  7e:   af ef           r26 = 0xff;                         ; 255

; Referenced from offset 0x7c by brcs
Label_0x80:
  80:   7a 2e           r7 = r26;
; r7 is a copy of [xA5] Channel A: Current Intensity Modulation Value
  82:   a0 93 a5 00     channel_a_current_intensity_modulation_value = r26; ; 0x00a5

; Referenced from offset 0x74 by rjmp
main_not_audio_a_mode:
  86:   a6 fe           skipif (bit(r10,6))
; is output B in an audio mode (r10[bit6-is-an-audio-mode] from 0x190)? yes then update the intensity_modulation_value
  88:   08 c0           goto main_not_audio_b_mode_loop_back_to_main;
; (0x66-$4066-Audio Input Level B (Half wave) (ADC6))
  8a:   ae 81           r26 = Memory[[r28:r29]+6];
  8c:   a6 95           r26 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
  8e:   a3 55           r26 -= 83;                          ; 0x53, no carry
  90:   08 f0           if (Carry) goto Label_0x94;
  92:   af ef           r26 = 0xff;                         ; 255

; Referenced from offset 0x90 by brcs
Label_0x94:
  94:   ca 2e           r12 = r26;
; r12 is a copy of [x1A5] Channel B: Current Intensity Modulation Value
  96:   a0 93 a5 01     channel_b_current_intensity_modulation_value = r26; ; 0x01a5

; Referenced from offset 0x88 by rjmp
main_not_audio_b_mode_loop_back_to_main:
  9a:   dc cf           goto Main;

; Referenced from offset 0x70 by rjmp
main_timer0_has_triggered:
  9c:   1b 7f           r17 &= 251;                         ; 0xfb
; above unsets r17[bit2-timer0-triggered]
  9e:   a8 e9           r26 = 152;                          ; 0x98
; Set UCSRB to RX-complete-interrupt-enable | RX-enable | TX-enable 
  a0:   aa b9           IO[UCSRB] = r26;
; increment counter (0x73-$4073-master-timer-lsb)
  a2:   2b 89           r18 = Memory[[r28:r29]+19];
  a4:   2f 5f           r18 -= 255;                         ; 0xff, no carry
  a6:   2b 8b           Memory[[r28:r29]+19] = r18;
  a8:   1b f4           if (Overflow == 0) goto Label_0xb0;
; if we rolled over then increment counter (0x6A-$406A-master-timer-msb)
  aa:   2a 84           r2 = Memory[[r28:r29]+10];
  ac:   23 94           r2++;
  ae:   2a 86           Memory[[r28:r29]+10] = r2;

; Referenced from offset 0xa8 by brvc
Label_0xb0:
  b0:   20 ff           skipif (bit(r18,0))
; do this every other time timer0 overflows
  b2:   8f c1           goto Label_0x3d2;
; r16[bit2-we-are-slave] is set if we're slave to another box, don't increment the routine timer etc
  b4:   02 fd           skipif (!bit(r16,2))
  b6:   f5 c0           goto main_notsurewhatthisdoes;
; This increments the routine timer (3 bytes)
  b8:   ff 27           r31 = 0x00;                         ; 0
  ba:   e0 e6           r30 = 96;                           ; 0x60
; (0x88-$4088-routine-timer-low)
  bc:   20 a5           r18 = Memory[[r30:r31]+40];
; (0x89-$4089-routine-timer-mid)
  be:   21 a4           r2 = Memory[[r30:r31]+41];
; (0x8A-$408A-routine-timer-high)
  c0:   02 a4           r0 = Memory[[r30:r31]+42];
  c2:   a1 e0           r26 = 1;                            ; 0x01
  c4:   2a 0f           r18 += r26;                         ; No carry
  c6:   20 a7           Memory[[r30:r31]+40] = r18;
  c8:   28 f4           if (!Carry) goto Label_0xd4;
  ca:   2a 0e           r2 += r26;                          ; No carry
  cc:   21 a6           Memory[[r30:r31]+41] = r2;
  ce:   10 f4           if (!Carry) goto Label_0xd4;
  d0:   03 94           r0++;
  d2:   02 a6           Memory[[r30:r31]+42] = r0;

; Referenced from offset 0xc8 by brcc
; Referenced from offset 0xce by brcc
Label_0xd4:
  d4:   a2 2f           r26 = r18;
; run a timer in 0x8b eight times slower than the routine timer in 0x88/9/a
  d6:   a7 70           r26 &= 7;                           ; 0x07
  d8:   a7 30           cmp(r26, 0x07);                     ; 7
  da:   19 f4           if (c1 != c2) goto main_is_it_time_to_go_to_next_module;
; (0x8B-$408b-routine-timer-slower)
  dc:   a3 a5           r26 = Memory[[r30:r31]+43];
  de:   a3 95           r26++;
  e0:   a3 a7           Memory[[r30:r31]+43] = r26;

; Referenced from offset 0xda by brne
; Referenced from offset 0x29c by rjmp
main_is_it_time_to_go_to_next_module:
  e2:   e0 e6           r30 = 96;                           ; 0x60
; (0x[01]96-$4096-next-module-flags)
  e4:   a6 a9           r26 = Memory[[r30:r31]+54];
  e6:   aa 23           (r26 == 0) || (r26 < 0);            ; test r26
  e8:   91 f0           if (c1 == c2) goto main_is_it_time_to_change_gate;
  ea:   18 d1           set_routine_timer();                ; Parameter r26:r27, returns r0, sets T flag
  ec:   86 f4           if (T == 0) goto main_is_it_time_to_change_gate;
; (0x[01]94-$4094-next-module-timer)
  ee:   a4 a9           r26 = Memory[[r30:r31]+52];
  f0:   ba 1b           r27 -= r26;                         ; No carry
; (0x[01]95-$4095-next-module-timer-max)
  f2:   a5 a9           r26 = Memory[[r30:r31]+53];
  f4:   ba 17           cmp(r27, r26);
  f6:   58 f0           if (Carry) goto main_is_it_time_to_change_gate;
  f8:   03 94           r0++;
; (0x[01]94-$4094-next-module-timer)
  fa:   04 aa           Memory[[r30:r31]+52] = r0;
; (0x[01]97-$4097-next-module)
  fc:   a7 a9           r26 = Memory[[r30:r31]+55];
  fe:   ff 23           (r31 == 0) || (r31 < 0);            ; test r31
 100:   29 f0           if (c1 == c2) goto main_activate_next_module;
 102:   f0 e0           r31 = 0;                            ; 0x00
; (0x[01]97-$4097-next-module)
 104:   b7 a9           r27 = Memory[[r30:r31]+55];
 106:   ab 17           cmp(r26, r27);
 108:   f1 e0           r31 = 1;                            ; 0x01
; if we're looking at B next module timer, see if we're the same mode as A and if so don't change the mode
 10a:   09 f0           if (c1 == c2) goto main_is_it_time_to_change_gate;

; Referenced from offset 0x100 by breq
main_activate_next_module:
 10c:   45 d5           CallTable_22_start_module();

; Referenced from offset 0xe8 by breq
; Referenced from offset 0xec by brtc
; Referenced from offset 0xf6 by brcs
; Referenced from offset 0x10a by breq
main_is_it_time_to_change_gate:
 10e:   a2 ad           r26 = Memory[[r30:r31]+58];
; 0x[0]19a a/b current gate select [bit0 is A, bit1?? is B??]
 110:   2a 2e           r2 = r26;
 112:   a3 70           r26 &= 3;                           ; 0x03
; gate select is a 0, so ignore
 114:   31 f1           if (c1 == c2) goto main_update_ramp_and_intensity_and_frequency_and_width;
; 0x[01]90 a/b current gate value, if bit 0 is 1 then look at the off time
 116:   a0 a9           r26 = Memory[[r30:r31]+48];
 118:   a0 fd           skipif (!bit(r26,0))
 11a:   0a c0           goto Label_0x130;
; 0x[01]99 a/b current gate off time
 11c:   21 ad           r18 = Memory[[r30:r31]+57];
 11e:   22 fc           skipif (!bit(r2,2))
; 0x[01]9a gate select [bit2-gateoff-use-tempo-parameter] is set? r18 = advanced parameter tempo
 120:   20 91 fb 01     r18 = advanced_parameter_tempo;     ; 0x01fb
 124:   23 fc           skipif (!bit(r2,3))
; 0x[01]9a gate select [bit3-gateoff-use-ma-value] is set? r18 = current_ma_value 
 126:   20 91 0d 02     r18 = current_multi_adjust_value;   ; 0x020d
 12a:   22 23           (r18 == 0) || (r18 < 0);            ; test r18
 12c:   b9 f0           if (c1 == c2) goto Label_0x15c;
 12e:   07 c0           goto Label_0x13e;

; Referenced from offset 0x11a by rjmp
Label_0x130:
 130:   20 ad           r18 = Memory[[r30:r31]+56];
; current gate was 0(off), so look at 0x[0]98 a/b current gate on time
 132:   25 fc           skipif (!bit(r2,5))
; 0x[01]9a a/b gate select [bit5-gateon-use-parameter-effect] is set? r18 = advanced parameter effect
 134:   20 91 fd 01     r18 = advanced_parameter_effect;    ; 0x01fd
 138:   26 fc           skipif (!bit(r2,6))
; 0x[01]9a a/b gate select [bit6-gateon-use-ma-value] is set? r18 = current_ma_value
 13a:   20 91 0d 02     r18 = current_multi_adjust_value;   ; 0x020d

; Referenced from offset 0x12e by rjmp
Label_0x13e:
 13e:   a2 2d           r26 = r2;
 140:   ed d0           set_routine_timer();                ; Parameter r26:r27, returns r0, sets T flag
 142:   7e f4           if (T == 0) goto main_update_ramp_and_intensity_and_frequency_and_width;
; 0x[01]9b a/b gate select
 144:   a3 ad           r26 = Memory[[r30:r31]+59];
 146:   ba 1b           r27 -= r26;                         ; No carry
 148:   b2 17           cmp(r27, r18);
 14a:   58 f0           if (Carry) goto main_update_ramp_and_intensity_and_frequency_and_width;
 14c:   03 94           r0++;
 14e:   03 ae           Memory[[r30:r31]+59] = r0;
; Toggle bit 0 of 0x[01]90 a/b current gate value
 150:   a0 a9           r26 = Memory[[r30:r31]+48];
 152:   a0 ff           skipif (bit(r26,0))
 154:   03 c0           goto Label_0x15c;
 156:   a0 a9           r26 = Memory[[r30:r31]+48];
 158:   ae 7f           r26 &= 254;                         ; 0xfe
 15a:   02 c0           goto Label_0x160;

; Referenced from offset 0x12c by breq
; Referenced from offset 0x154 by rjmp
Label_0x15c:
 15c:   a0 a9           r26 = Memory[[r30:r31]+48];
 15e:   a1 60           r26 |= 1;                           ; 0x01

; Referenced from offset 0x15a by rjmp
Label_0x160:
 160:   a0 ab           Memory[[r30:r31]+48] = r26;

; Referenced from offset 0x114 by breq
; Referenced from offset 0x142 by brtc
; Referenced from offset 0x14a by brcs
main_update_ramp_and_intensity_and_frequency_and_width:
 162:   e3 e9           r30 = 147;                          ; 0x93

; Referenced from offset 0x192 by brne
; Referenced from offset 0x19c by rjmp
; Referenced from offset 0x1ce by brtc
; Referenced from offset 0x1d6 by brcs
; Referenced from offset 0x22c by rjmp
; Referenced from offset 0x238 by rjmp
; Referenced from offset 0x242 by rjmp
; Referenced from offset 0x262 by rjmp
; Referenced from offset 0x27e by rjmp
; Referenced from offset 0x28a by rjmp
; Referenced from offset 0x294 by rjmp
next_block_to_update:
 164:   e7 5f           r30 -= 247;                         ; 0xf7, no carry
; r30 is 9c(ramp) a5(intensity) ae(frequency) b7(width)
 166:   eb 3b           cmp(r30, 0xbb);                     ; 187
 168:   08 f0           if (Carry) goto Label_0x16c;
 16a:   95 c0           goto Label_0x296;

; Referenced from offset 0x168 by brcs
Label_0x16c:
 16c:   a7 81           r26 = Memory[[r30:r31]+7];
; r26 is +7 "Select"
 16e:   2a 2e           r2 = r26;
 170:   a3 70           r26 &= 3;                           ; 0x03
 172:   a9 f4           if (c1 != c2) goto select_not_ending_00;
; "Select" is xxxx xx00
 174:   a2 2d           r26 = r2;
 176:   ac 70           r26 &= 12;                          ; 0x0c
 178:   ac 30           cmp(r26, 0x0c);                     ; 12
 17a:   29 f4           if (c1 != c2) goto Label_0x186;
; "Select" is xxxx 1100 (so set r18 to B value)
 17c:   b1 e0           r27 = 1;                            ; 0x01
 17e:   fb 27           r31 ^= r27;
 180:   20 81           r18 = Memory[r30:r31];
 182:   fb 27           r31 ^= r27;
 184:   08 c0           goto Label_0x196;

; Referenced from offset 0x17a by brne
Label_0x186:
 186:   a8 30           cmp(r26, 0x08);                     ; 8
 188:   19 f4           if (c1 != c2) goto Label_0x190;
; "Select" is xxxx 1000 (so set r18 to MA value from 0x20d)
 18a:   20 91 0d 02     r18 = current_multi_adjust_value;   ; 0x020d
 18e:   03 c0           goto Label_0x196;

; Referenced from offset 0x188 by brne
Label_0x190:
 190:   a4 30           cmp(r26, 0x04);                     ; 4
 192:   41 f7           if (c1 != c2) goto next_block_to_update;
; "Select" is xxxx 0100 (so set r18 to (1f8 or 1fa or 1fc or 1fe) (width))
 194:   fd d0           get_advanced_parameters();          ; Parameter: r30:r31 (Z), returns r18, r0

; Referenced from offset 0x184 by rjmp
; Referenced from offset 0x18e by rjmp
Label_0x196:
 196:   24 fc           skipif (!bit(r2,4))
 198:   07 d1           dosomethingstrangewithr18advancedparameter(); ; Parameter r18, return value r18
; set "Value" based on r18 TBD
 19a:   20 83           Memory[r30:r31] = r18;
 19c:   e3 cf           goto next_block_to_update;

; Referenced from offset 0x172 by brne
select_not_ending_00:
 19e:   a2 2d           r26 = r2;
 1a0:   a0 76           r26 &= 96;                          ; 0x60
 1a2:   a0 36           cmp(r26, 0x60);                     ; 96
 1a4:   29 f4           if (c1 != c2) goto Label_0x1b0;
; "select" is x 1 1 x x x (!00)
 1a6:   b1 e0           r27 = 1;                            ; 0x01
 1a8:   fb 27           r31 ^= r27;
; r18 is "rate" of other channel
 1aa:   23 81           r18 = Memory[[r30:r31]+3];
 1ac:   fb 27           r31 ^= r27;
 1ae:   0b c0           goto Label_0x1c6;

; Referenced from offset 0x1a4 by brne
Label_0x1b0:
 1b0:   a0 34           cmp(r26, 0x40);                     ; 64
 1b2:   19 f4           if (c1 != c2) goto Label_0x1ba;
; "select" is x 1 0 x x x (!00)
 1b4:   20 91 0d 02     r18 = current_multi_adjust_value;   ; 0x020d
 1b8:   06 c0           goto Label_0x1c6;

; Referenced from offset 0x1b2 by brne
Label_0x1ba:
 1ba:   a0 32           cmp(r26, 0x20);                     ; 32
 1bc:   19 f4           if (c1 != c2) goto r18_is_rate;
; "select" is x 0 1 x x x (!00)
 1be:   e8 d0           get_advanced_parameters();          ; Parameter: r30:r31 (Z), returns r18, r0
 1c0:   20 2d           r18 = r0;
 1c2:   01 c0           goto Label_0x1c6;

; Referenced from offset 0x1bc by brne
r18_is_rate:
 1c4:   23 81           r18 = Memory[[r30:r31]+3];

; Referenced from offset 0x1ae by rjmp
; Referenced from offset 0x1b8 by rjmp
; Referenced from offset 0x1c2 by rjmp
Label_0x1c6:
 1c6:   27 fc           skipif (!bit(r2,7))
 1c8:   ef d0           dosomethingstrangewithr18advancedparameter(); ; Parameter r18, return value r18
 1ca:   a2 2d           r26 = r2;
 1cc:   a7 d0           set_routine_timer();                ; Parameter r26:r27, returns r0, sets T flag
 1ce:   56 f6           if (T == 0) goto next_block_to_update;
; r26 is "timer"
 1d0:   a0 85           r26 = Memory[[r30:r31]+8];
 1d2:   ba 1b           r27 -= r26;                         ; No carry
 1d4:   b2 17           cmp(r27, r18);
 1d6:   30 f2           if (Carry) goto next_block_to_update;
 1d8:   03 94           r0++;
 1da:   00 86           Memory[[r30:r31]+8] = r0;
; r26 is "Select" &12
 1dc:   a2 2d           r26 = r2;
 1de:   ac 70           r26 &= 12;                          ; 0x0c
 1e0:   ac 30           cmp(r26, 0x0c);                     ; 12
 1e2:   29 f4           if (c1 != c2) goto Label_0x1ee;
; "Select" is x x x x 1 1 (!00)
 1e4:   b1 e0           r27 = 1;                            ; 0x01
 1e6:   fb 27           r31 ^= r27;
; r18 is "min" of other channel
 1e8:   21 81           r18 = Memory[[r30:r31]+1];
 1ea:   fb 27           r31 ^= r27;
 1ec:   0a c0           goto Label_0x202;

; Referenced from offset 0x1e2 by brne
Label_0x1ee:
 1ee:   a8 30           cmp(r26, 0x08);                     ; 8
 1f0:   19 f4           if (c1 != c2) goto Label_0x1f8;
; "Select" is x x x x 1 0 (!00)
 1f2:   20 91 0d 02     r18 = current_multi_adjust_value;   ; 0x020d
 1f6:   05 c0           goto Label_0x202;

; Referenced from offset 0x1f0 by brne
Label_0x1f8:
 1f8:   a4 30           cmp(r26, 0x04);                     ; 4
 1fa:   11 f4           if (c1 != c2) goto Label_0x200;
; "Select" is x x x x 0 1 (!00)
 1fc:   c9 d0           get_advanced_parameters();          ; Parameter: r30:r31 (Z), returns r18, r0
 1fe:   01 c0           goto Label_0x202;

; Referenced from offset 0x1fa by brne
Label_0x200:
 200:   21 81           r18 = Memory[[r30:r31]+1];

; Referenced from offset 0x1ec by rjmp
; Referenced from offset 0x1f6 by rjmp
; Referenced from offset 0x1fe by rjmp
Label_0x202:
 202:   24 fc           skipif (!bit(r2,4))
 204:   d1 d0           dosomethingstrangewithr18advancedparameter(); ; Parameter r18, return value r18
; set "min"
 206:   21 83           Memory[[r30:r31]+1] = r18;
; r26 is "value"
 208:   a0 81           r26 = Memory[r30:r31];
; r28 is "increment"
 20a:   c4 81           r28 = Memory[[r30:r31]+4];
 20c:   c0 38           cmp(r28, 0x80);                     ; 128
 20e:   18 f4           if (!Carry) goto Label_0x216;
 210:   ac 0f           r26 += r28;                         ; No carry
 212:   b0 f1           if (Carry) goto value_has_reached_max;
 214:   02 c0           goto Label_0x21a;

; Referenced from offset 0x20e by brcc
Label_0x216:
 216:   ac 0f           r26 += r28;                         ; No carry
 218:   50 f4           if (!Carry) goto value_has_reached_min;

; Referenced from offset 0x214 by rjmp
Label_0x21a:
 21a:   c0 38           cmp(r28, 0x80);                     ; 128
 21c:   18 f0           if (Carry) goto Label_0x224;
; r28 is "min"
 21e:   c1 81           r28 = Memory[[r30:r31]+1];
 220:   ac 17           cmp(r26, r28);
 222:   28 f0           if (Carry) goto value_has_reached_min;

; Referenced from offset 0x21c by brcs
Label_0x224:
 224:   c2 81           r28 = Memory[[r30:r31]+2];
; r28 is "max"
 226:   ac 17           cmp(r26, r28);
 228:   58 f5           if (!Carry) goto value_has_reached_max;
 22a:   a0 83           Memory[r30:r31] = r26;
 22c:   9b cf           goto next_block_to_update;

; Referenced from offset 0x218 by brcc
; Referenced from offset 0x222 by brcs
value_has_reached_min:
 22e:   a1 81           r26 = Memory[[r30:r31]+1];
; set "value" to "min" (because "action at min" is 0xfc (stop) done
 230:   a0 83           Memory[r30:r31] = r26;
; r26 is "action at min"
 232:   a5 81           r26 = Memory[[r30:r31]+5];
 234:   ac 3f           cmp(r26, 0xfc);                     ; 252
 236:   09 f4           if (c1 != c2) goto Label_0x23a;
 238:   95 cf           goto next_block_to_update;

; Referenced from offset 0x236 by brne
Label_0x23a:
 23a:   ad 3f           cmp(r26, 0xfd);                     ; 253
 23c:   19 f4           if (c1 != c2) goto Label_0x244;
; set "value" to "max" (because "action at min" is 0xfd (goto-max) done
 23e:   a2 81           r26 = Memory[[r30:r31]+2];
 240:   a0 83           Memory[r30:r31] = r26;
 242:   90 cf           goto next_block_to_update;

; Referenced from offset 0x23c by brne
; Referenced from offset 0x28e by brne
Label_0x244:
 244:   ae 3f           cmp(r26, 0xfe);                     ; 254
 246:   41 f4           if (c1 != c2) goto Label_0x258;
; because "action at min/max" is 0xfe xor [gate value] with 6 and negate "increment" done
 248:   ef 93           push    r30
 24a:   e0 e9           r30 = 144;                          ; 0x90
 24c:   a0 81           r26 = Memory[r30:r31];
 24e:   b6 e0           r27 = 6;                            ; 0x06
 250:   ab 27           r26 ^= r27;
 252:   a0 83           Memory[r30:r31] = r26;
 254:   ef 91           pop     r30
 256:   02 c0           goto negate_increment_done;

; Referenced from offset 0x246 by brne
Label_0x258:
 258:   af 3f           cmp(r26, 0xff);                     ; 255
 25a:   21 f4           if (c1 != c2) goto Label_0x264;

; Referenced from offset 0x256 by rjmp
negate_increment_done:
 25c:   a4 81           r26 = Memory[[r30:r31]+4];
; because "action at min/max" is 0xff negate "increment" done
 25e:   a1 95           neg     r26
 260:   a4 83           Memory[[r30:r31]+4] = r26;
 262:   80 cf           goto next_block_to_update;

; Referenced from offset 0x25a by brne
Label_0x264:
 264:   ff 23           (r31 == 0) || (r31 < 0);            ; test r31
 266:   51 f0           if (c1 == c2) goto Label_0x27c;
 268:   f0 e0           r31 = 0;                            ; 0x00
; r26 is from "action at min"(hit min) or "action at max"(hit max)
 26a:   b5 81           r27 = Memory[[r30:r31]+5];
 26c:   ab 17           cmp(r26, r27);
 26e:   f1 e0           r31 = 1;                            ; 0x01
 270:   31 f0           if (c1 == c2) goto Label_0x27e;
 272:   f0 e0           r31 = 0;                            ; 0x00
; "action at max"
 274:   b6 81           r27 = Memory[[r30:r31]+6];
 276:   ab 17           cmp(r26, r27);
 278:   f1 e0           r31 = 1;                            ; 0x01
 27a:   09 f0           if (c1 == c2) goto Label_0x27e;

; Referenced from offset 0x266 by breq
Label_0x27c:
 27c:   8d d4           CallTable_22_start_module();

; Referenced from offset 0x270 by breq
; Referenced from offset 0x27a by breq
Label_0x27e:
 27e:   72 cf           goto next_block_to_update;

; Referenced from offset 0x212 by brcs
; Referenced from offset 0x228 by brcc
value_has_reached_max:
 280:   a2 81           r26 = Memory[[r30:r31]+2];
; set "value" to "max" and as long as "action at max" is 0xfc (at-max-stop) done
 282:   a0 83           Memory[r30:r31] = r26;
 284:   a6 81           r26 = Memory[[r30:r31]+6];
 286:   ac 3f           cmp(r26, 0xfc);                     ; 252
 288:   09 f4           if (c1 != c2) goto Label_0x28c;
 28a:   6c cf           goto next_block_to_update;

; Referenced from offset 0x288 by brne
Label_0x28c:
 28c:   ad 3f           cmp(r26, 0xfd);                     ; 253
 28e:   d1 f6           if (c1 != c2) goto Label_0x244;
 290:   a1 81           r26 = Memory[[r30:r31]+1];
; set "value" to "min" (because "action at max" is 0xfd (at-max-goto-min) done
 292:   a0 83           Memory[r30:r31] = r26;
 294:   67 cf           goto next_block_to_update;

; Referenced from offset 0x16a by rjmp
Label_0x296:
 296:   ff 23           (r31 == 0) || (r31 < 0);            ; test r31
 298:   11 f4           if (c1 != c2) goto Label_0x29e;
; now do it all again for Channel B instead of A
 29a:   f1 e0           r31 = 1;                            ; 0x01
 29c:   22 cf           goto main_is_it_time_to_go_to_next_module;

; Referenced from offset 0x298 by brne
Label_0x29e:
 29e:   c0 e6           r28 = 96;                           ; 0x60
 2a0:   58 d0           CallTable_29_set_up_r4-14_with_a_and_b_values(); ; Parameter r28:r29

; Referenced from offset 0xb6 by rjmp
main_notsurewhatthisdoes:
 2a2:   a9 a9           r26 = Memory[[r28:r29]+49];
; r26=0x91-unknown. Look at bits 3,2,1 and it it matches r5 (from 0x90) then nothing to do
 2a4:   b5 2d           r27 = r5;
 2a6:   be 70           r27 &= 14;                          ; 0x0e
 2a8:   ab 17           cmp(r26, r27);
 2aa:   79 f0           if (c1 == c2) goto Label_0x2ca;
; r5 is [x90] Channel A: Current Gate Value (bit3) is set then r26=1 otherwise r26=(r5 & 0x6)/2
 2ac:   53 fe           skipif (bit(r5,3))
 2ae:   02 c0           goto Label_0x2b4;
 2b0:   a1 e0           r26 = 1;                            ; 0x01
 2b2:   03 c0           goto Label_0x2ba;

; Referenced from offset 0x2ae by rjmp
Label_0x2b4:
 2b4:   ab 2f           r26 = r27;
 2b6:   a6 70           r26 &= 6;                           ; 0x06
 2b8:   a6 95           r26 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)

; Referenced from offset 0x2b2 by rjmp
Label_0x2ba:
 2ba:   f8 94           Disable_Interrupts();
; look at state of q5,6,7,8 outputs
 2bc:   e8 b3           r30 = IO[PORTB];
 2be:   ef 70           r30 &= 15;                          ; 0x0f
 2c0:   19 f4           if (c1 != c2) goto Label_0x2c8;
; 0x91=$4091-unknown-last-bits-123-of-r5
 2c2:   b9 ab           Memory[[r28:r29]+49] = r27;
; set r16[bit0-unknown] r16[bit1-unknown] to last 2 bits of r5
 2c4:   0c 7f           r16 &= 252;                         ; 0xfc
 2c6:   0a 2b           r16 |= r26;

; Referenced from offset 0x2c0 by brne
Label_0x2c8:
 2c8:   78 94           Enable_Interrupts();

; Referenced from offset 0x2aa by breq
Label_0x2ca:
 2ca:   aa a9           r26 = Memory[[r28:r29]+50];
; line above is 0x92=$4092-unknown-last-bits-123-of-r10
 2cc:   ba 2d           r27 = r10;
 2ce:   be 70           r27 &= 14;                          ; 0x0e
 2d0:   ab 17           cmp(r26, r27);
 2d2:   09 f4           if (c1 != c2) goto Label_0x2d6;
 2d4:   10 c0           goto audio_might_trigger_module_jump;

; Referenced from offset 0x2d2 by brne
Label_0x2d6:
 2d6:   a3 fe           skipif (bit(r10,3))
 2d8:   02 c0           goto Label_0x2de;
 2da:   a1 e0           r26 = 1;                            ; 0x01
 2dc:   03 c0           goto Label_0x2e4;

; Referenced from offset 0x2d8 by rjmp
Label_0x2de:
 2de:   ab 2f           r26 = r27;
 2e0:   a6 70           r26 &= 6;                           ; 0x06
 2e2:   a6 95           r26 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)

; Referenced from offset 0x2dc by rjmp
Label_0x2e4:
 2e4:   a2 95           r26 = ((r26 & 0xf0) >> 4) | ((r26 & 0x0f) << 4); ; swap nibbles
 2e6:   f8 94           Disable_Interrupts();
; look at state of q5,6,7,8 outputs
 2e8:   e8 b3           r30 = IO[PORTB];
 2ea:   ef 70           r30 &= 15;                          ; 0x0f
 2ec:   19 f4           if (c1 != c2) goto Label_0x2f4;
; 0x92=$4092-unknown-last-bits-123-of-r10
 2ee:   ba ab           Memory[[r28:r29]+50] = r27;
; set r16[bit4-unknown] r16[bit5-unknown] to last 2 bits of r10
 2f0:   0f 7c           r16 &= 207;                         ; 0xcf
 2f2:   0a 2b           r16 |= r26;

; Referenced from offset 0x2ec by brne
Label_0x2f4:
 2f4:   78 94           Enable_Interrupts();

; Referenced from offset 0x2d4 by rjmp
audio_might_trigger_module_jump:
 2f6:   41 fe           skipif (bit(r4,1))
; r4 is copy of [0x83] Output Control Flags - bit1-wait-for-audio-trigger if set then let audio A trigger it off
 2f8:   0a c0           goto Label_0x30e;
; (0x0066-$4066-Audio Input Level A (Half wave) (ADC6))
 2fa:   ae 81           r26 = Memory[[r28:r29]+6];
 2fc:   ae 31           cmp(r26, 0x1e);                     ; 30
 2fe:   38 f0           if (Carry) goto Label_0x30e;
 300:   ad ef           r26 = 253;                          ; 0xfd
; r4 is copy of [0x83] Output Control Flags - disable bit1-wait-for-audio-trigger
 302:   4a 22           r4 &= r26;
; 0x83=$4083 Output Control Flags - unset bit1-wait-for-audio-trigger
 304:   ab a1           r26 = Memory[[r28:r29]+35];
 306:   ad 7f           r26 &= 253;                         ; 0xfd
 308:   ab a3           Memory[[r28:r29]+35] = r26;
; 0x8F=$408F module to go to on audio trigger
 30a:   af a5           r26 = Memory[[r28:r29]+47];
 30c:   45 d4           CallTable_22_start_module();

; Referenced from offset 0x2f8 by rjmp
; Referenced from offset 0x2fe by brcs
Label_0x30e:
 30e:   0e 94 3e 0d     setup_mark_space_based_on_modulation(); ; Parameters r9,r8,r7
 312:   0e 94 fe 0a     setup_ma_value_in_0x20d_from_knob_after_averaging_and_scaling();
 316:   0e 94 dc 0a     setup_dac_levels_0x205_x206_based_on_pot_and_ramp_and_levels();
 31a:   9c ce           goto Main;

; Referenced from offset 0xea by rcall
; Referenced from offset 0x140 by rcall
; Referenced from offset 0x1cc by rcall
set_routine_timer:     ; Parameter r26:r27, returns r0, sets T flag
 31c:   a3 70           r26 &= 3;                           ; 0x03
 31e:   a1 30           cmp(r26, 0x01);                     ; 1
 320:   19 f4           if (c1 != c2) goto Label_0x328;
 322:   b0 91 88 00     r27 = routine_timer_low;            ; 0x0088
 326:   10 c0           goto Label_0x348;

; Referenced from offset 0x320 by brne
Label_0x328:
 328:   a2 30           cmp(r26, 0x02);                     ; 2
 32a:   41 f4           if (c1 != c2) goto Label_0x33c;
 32c:   b0 91 88 00     r27 = routine_timer_low;            ; 0x0088
 330:   b7 70           r27 &= 7;                           ; 0x07
 332:   b7 30           cmp(r27, 0x07);                     ; 7
 334:   61 f4           if (c1 != c2) goto Label_0x34e;
 336:   b0 91 8b 00     r27 = routine_timer2;               ; 0x008b
 33a:   06 c0           goto Label_0x348;

; Referenced from offset 0x32a by brne
Label_0x33c:
 33c:   b0 91 88 00     r27 = routine_timer_low;            ; 0x0088
 340:   bb 23           (r27 == 0) || (r27 < 0);            ; test r27
 342:   29 f4           if (c1 != c2) goto Label_0x34e;
 344:   b0 91 89 00     r27 = routine_timer_mid;            ; 0x0089

; Referenced from offset 0x326 by rjmp
; Referenced from offset 0x33a by rjmp
Label_0x348:
 348:   68 94           set
 34a:   0b 2e           r0 = r27;
 34c:   08 95           return;


; Referenced from offset 0x334 by brne
; Referenced from offset 0x342 by brne
Label_0x34e:
 34e:   e8 94           clt
 350:   08 95           return;


; Referenced from offset 0x2a0 by rcall
; Referenced from offset 0x778 by rcall
; Referenced from offset 0x1574 by call
CallTable_29_set_up_r4-14_with_a_and_b_values:     ; Parameter r28:r29
 352:   4b a0           r4 = Memory[[r28:r29]+35];
; above line copy r4 from [0x83] Output Control Flags
 354:   ff 27           r31 = 0x00;                         ; 0
 356:   e0 e8           r30 = 128;                          ; 0x80
; r5 is a copy of [x90] Channel A: Current Gate Value
 358:   50 88           r5 = Memory[[r30:r31]+16];
; r6 is a copy of [x9C] Channel A: Mode Switch Ramp Value Counter
 35a:   64 8c           r6 = Memory[[r30:r31]+28];
; r7 is a copy of [xA5] Channel A: Current Intensity Modulation Value
 35c:   75 a0           r7 = Memory[[r30:r31]+37];
; r8 is min(9,[xAE] Channel A: Current Frequency Modulation Value)
 35e:   26 a5           r18 = Memory[[r30:r31]+46];
 360:   29 30           cmp(r18, 0x09);                     ; 9
 362:   08 f4           if (!Carry) goto Label_0x366;
 364:   29 e0           r18 = 9;                            ; 0x09

; Referenced from offset 0x362 by brcc
Label_0x366:
 366:   82 2e           r8 = r18;
; r9 is min(50,[xB7] Channel A: Current Width Modulation Value)
 368:   27 a9           r18 = Memory[[r30:r31]+55];
 36a:   22 33           cmp(r18, 0x32);                     ; 50
 36c:   08 f4           if (!Carry) goto Label_0x370;
 36e:   22 e3           r18 = 50;                           ; 0x32

; Referenced from offset 0x36c by brcc
Label_0x370:
 370:   92 2e           r9 = r18;
 372:   f3 95           r31++;
; r10 is a copy of [x190] Channel B: Current Gate Value
 374:   a0 88           r10 = Memory[[r30:r31]+16];
; r11 is a copy of [x19C] Channel B: Mode Switch Ramp Value Counter
 376:   b4 8c           r11 = Memory[[r30:r31]+28];
; r12 is a copy of [x1A5] Channel B: Current Intensity Modulation Value
 378:   c5 a0           r12 = Memory[[r30:r31]+37];
; r13 is min(9,[x1AE]) Channel B: Current Frequency Modulation Value
 37a:   26 a5           r18 = Memory[[r30:r31]+46];
 37c:   29 30           cmp(r18, 0x09);                     ; 9
 37e:   08 f4           if (!Carry) goto Label_0x382;
 380:   29 e0           r18 = 9;                            ; 0x09

; Referenced from offset 0x37e by brcc
Label_0x382:
 382:   d2 2e           r13 = r18;
; r14 is min(50,[x1B7]) Channel B: Current Width Modulation Value)
 384:   27 a9           r18 = Memory[[r30:r31]+55];
 386:   22 33           cmp(r18, 0x32);                     ; 50
 388:   08 f4           if (!Carry) goto Label_0x38c;
 38a:   22 e3           r18 = 50;                           ; 0x32

; Referenced from offset 0x388 by brcc
Label_0x38c:
 38c:   e2 2e           r14 = r18;
 38e:   08 95           return;


; Referenced from offset 0x194 by rcall
; Referenced from offset 0x1be by rcall
; Referenced from offset 0x1fc by rcall
get_advanced_parameters:     ; Parameter: r30:r31 (Z), returns r18, r0
 390:   ff 93           push    r31
 392:   ef 93           push    r30
; r30 is 9c(ramp) a5(intensity) ae(frequency) b7(width)
 394:   ec 59           r30 -= 156;                         ; 0x9c, no carry
; r30 is 0(ramp) 9(intensity) 12(frequency) 1b(width)
 396:   e6 95           r30 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
; r30 is 0(ramp) 2(intensity) 4(frequency) 6(width)
 398:   e6 95           r30 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 39a:   f1 e0           r31 = 1;                            ; 0x01
 39c:   e8 50           r30 -= 8;                           ; 0x08, no carry
; r30r31 is 1f8(ramp) 1fa(intensity) 1fc(frequency) 1fe(width)
 39e:   21 91           r18 = Memory[[r30:r31]++];
 3a0:   00 80           r0 = Memory[r30:r31];
 3a2:   ef 91           pop     r30
 3a4:   ff 91           pop     r31
 3a6:   08 95           return;


; Referenced from offset 0x198 by rcall
; Referenced from offset 0x1c8 by rcall
; Referenced from offset 0x204 by rcall
dosomethingstrangewithr18advancedparameter:     ; Parameter r18, return value r18
 3a8:   ff 93           push    r31
; r30 is 9c(ramp) a5(intensity) ae(frequency) b7(width)
 3aa:   ef 93           push    r30
; r30 is 0(ramp) 9(intensity) 12(frequency) 1b(width)
 3ac:   ec 59           r30 -= 156;                         ; 0x9c, no carry
; r30 is 0(ramp) 4(intensity) 9(frequency) d(width)
 3ae:   e6 95           r30 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 3b0:   e5 30           cmp(r30, 0x05);                     ; 5
 3b2:   08 f0           if (Carry) goto Label_0x3b6;
 3b4:   ea 95           r30--;

; Referenced from offset 0x3b2 by brcs
Label_0x3b6:
 3b6:   be 2f           r27 = r30;
; r30 is 0(ramp) 4(intensity) 8(frequency) c(width)
 3b8:   ec ee           r30 = 236;                          ; 0xec
 3ba:   ff e1           r31 = 31;                           ; 0x1f
 3bc:   eb 0f           r30 += r27;                         ; No carry
; look at 0x1fec(ramp 205-r18-1) 0x1ff0(intensity 165-r18-1) 0x1ff4 (frequency 15-r18+6) 0x1ff8(width 70-r18+6)
 3be:   c8 95           r0 = Flash[r30:r31];
 3c0:   b0 2d           r27 = r0;
 3c2:   31 96           [r31:r30]++;
 3c4:   c8 95           r0 = Flash[r30:r31];
; r18 = (2nd byte - r18) + first byte
 3c6:   02 1a           r0 -= r18;                          ; No carry
 3c8:   0b 0e           r0 += r27;                          ; No carry
 3ca:   20 2d           r18 = r0;
 3cc:   ef 91           pop     r30
 3ce:   ff 91           pop     r31
 3d0:   08 95           return;


; Referenced from offset 0xb2 by rjmp
Label_0x3d2:
 3d2:   ab 89           r26 = Memory[[r28:r29]+19];
; above is x73-$4073-master-timer-lsb, so run this at 244Hz
 3d4:   a1 ff           skipif (bit(r26,1))
 3d6:   42 c0           goto Label_0x45c;
; if r17[bit7-we-are-master] is set we're a linked master
 3d8:   17 ff           skipif (bit(r17,7))
 3da:   2e c0           goto Label_0x438;
; we're a linked master, so if we got a 06 back from the box, send some more registers
 3dc:   a0 91 20 02     r26 = com_input_buffer[0];          ; 0x0220
 3e0:   a6 30           cmp(r26, 0x06);                     ; 6
 3e2:   41 f0           if (c1 == c2) goto Label_0x3f4;
; $4082-retry-counter.  If we didn't get a 06 back we're meant to retry 4 times then error out
 3e4:   aa a1           r26 = Memory[[r28:r29]+34];
 3e6:   a4 30           cmp(r26, 0x04);                     ; 4
 3e8:   10 f0           if (Carry) goto Label_0x3ee;
 3ea:   0c 94 3b 0b     goto error_handler;

; Referenced from offset 0x3e8 by brcs
Label_0x3ee:
 3ee:   a3 95           r26++;
 3f0:   aa a3           Memory[[r28:r29]+34] = r26;
 3f2:   22 c0           goto Label_0x438;

; Referenced from offset 0x3e2 by breq
Label_0x3f4:
 3f4:   da a3           Memory[[r28:r29]+34] = r29;
 3f6:   d0 93 20 02     com_input_buffer[0] = r29;          ; 0x0220
 3fa:   d0 93 14 02     com_buffer_incrementer = r29;       ; 0x0214
; write 6 bytes to $4004 (r4-r9) (or if r16[bit6-which-register-set] isn't set, $400a r10-r14)
 3fe:   ad e9           r26 = 157;                          ; 0x9d
 400:   0e 94 03 0d     write_r26_to_com_buffer();          ; Parameters r26
 404:   a0 e4           r26 = 64;                           ; 0x40
 406:   0e 94 03 0d     write_r26_to_com_buffer();          ; Parameters r26
 40a:   a4 e0           r26 = 4;                            ; 0x04
 40c:   06 fd           skipif (!bit(r16,6))
 40e:   aa e0           r26 = 10;                           ; 0x0a
 410:   2a 2e           r2 = r26;
 412:   2a 2f           r18 = r26;
 414:   2a 5f           r18 -= 250;                         ; 0xfa, no carry
 416:   0e 94 03 0d     write_r26_to_com_buffer();          ; Parameters r26
 41a:   e2 2d           r30 = r2;
 41c:   f0 e0           r31 = 0;                            ; 0x00

; Referenced from offset 0x42a by brcs
Label_0x41e:
 41e:   a1 91           r26 = Memory[[r30:r31]++];
 420:   f2 fc           skipif (!bit(r15,2))
 422:   aa 27           r26 = 0x00;                         ; 0
; write our registers (r4-9 or r10-r14) to the serial port (or 0's if r15[bit2-notforslave] is set)
 424:   0e 94 03 0d     write_r26_to_com_buffer();          ; Parameters r26
 428:   e2 17           cmp(r30, r18);
 42a:   c8 f3           if (Carry) goto Label_0x41e;
 42c:   a0 91 14 02     r26 = com_buffer_incrementer;       ; 0x0214
 430:   0e 94 03 0d     write_r26_to_com_buffer();          ; Parameters r26
 434:   a0 e4           r26 = 64;                           ; 0x40
; toggle bit r16[bit6-which-register-set] so next time we send the other register set
 436:   0a 27           r16 ^= r26;

; Referenced from offset 0x3da by rjmp
; Referenced from offset 0x3f2 by rjmp
Label_0x438:
 438:   e8 89           r30 = Memory[[r28:r29]+16];
; look if we need to run a command (0x70-$4070-execute_command)
 43a:   e8 32           cmp(r30, 0x28);                     ; 40
 43c:   18 f4           if (!Carry) goto Label_0x444;
 43e:   ff ef           r31 = 0xff;                         ; 255
 440:   f8 8b           Memory[[r28:r29]+16] = r31;
 442:   a6 d1           run_call_table();                   ; Parameter r30 (0-39) CallTable_31

; Referenced from offset 0x43c by brcc
Label_0x444:
 444:   e9 89           r30 = Memory[[r28:r29]+17];
; look if we need to run a command (0x71-$4071-execute_command-2)
 446:   e8 32           cmp(r30, 0x28);                     ; 40
 448:   18 f4           if (!Carry) goto has_module_asked_us_to_jump_to_new_module;
 44a:   ff ef           r31 = 0xff;                         ; 255
 44c:   f9 8b           Memory[[r28:r29]+17] = r31;
 44e:   a0 d1           run_call_table();                   ; Parameter r30 (0-39) CallTable_31

; Referenced from offset 0x448 by brcc
has_module_asked_us_to_jump_to_new_module:
 450:   f1 fe           skipif (bit(r15,1))
 452:   04 c0           goto Label_0x45c;
; 0x0f-$400f if r15[bit1-start-new-module-form-0084] is set, unset it, and calltable_22 (start new module) with [0x4084]
 454:   ad ef           r26 = 253;                          ; 0xfd
 456:   fa 22           r15 &= r26;
; x84-0x4084-unknown
 458:   ac a1           r26 = Memory[[r28:r29]+36];
 45a:   9e d3           CallTable_22_start_module();

; Referenced from offset 0x3d6 by rjmp
; Referenced from offset 0x452 by rjmp
Label_0x45c:
 45c:   ab 89           r26 = Memory[[r28:r29]+19];
; 61Hz (0x73-$4073-master-timer-lsb) time display status screen (A/B knobs etc) then goto Main
 45e:   ae 70           r26 &= 14;                          ; 0x0e
 460:   a4 30           cmp(r26, 0x04);                     ; 4
 462:   19 f4           if (c1 != c2) goto Label_0x46a;
; 0x6d-$406d-menu_state in r30, calltable 2 -- display status screen or 1 -- do nothing)
 464:   ed 85           r30 = Memory[[r28:r29]+13];
 466:   94 d1           run_call_table();                   ; Parameter r30 (0-39) CallTable_31
 468:   f5 cd           goto Main;

; Referenced from offset 0x462 by brne
Label_0x46a:
 46a:   ab 89           r26 = Memory[[r28:r29]+19];
; 61Hz (0x73-$4073-master-timer-lsb) time run the code at 0x474  (random1 mode stuff)
 46c:   ae 70           r26 &= 14;                          ; 0x0e
 46e:   a6 30           cmp(r26, 0x06);                     ; 6
 470:   09 f0           if (c1 == c2) goto Label_0x474;
 472:   4b c0           goto Label_0x50a;

; Referenced from offset 0x470 by breq
Label_0x474:
 474:   ac 89           r26 = Memory[[r28:r29]+20];
; (0x74-$4074-random1-mode)
 476:   aa 23           (r26 == 0) || (r26 < 0);            ; test r26
 478:   f9 f0           if (c1 == c2) goto Label_0x4b8;
 47a:   a1 30           cmp(r26, 0x01);                     ; 1
; If 0x74-$4074 is a 1 then we want to start Random1 mode (if it's 0 we're not in Random1 mode)
 47c:   21 f0           if (c1 == c2) goto Label_0x486;
; (0x6A-$406A-master-timer-msb)
 47e:   2a 84           r2 = Memory[[r28:r29]+10];
; (0x75-$4075-random1-time-to-change-mode) did we reach time to change mode?
 480:   ad 89           r26 = Memory[[r28:r29]+21];
 482:   a2 15           cmp(r26, r2);
 484:   c9 f4           if (c1 != c2) goto Label_0x4b8;

; Referenced from offset 0x47c by breq
Label_0x486:
 486:   26 e7           r18 = 118;                          ; 0x76
; (0x8D-$408D-random-min)=0x76
 488:   2d a7           Memory[[r28:r29]+45] = r18;
 48a:   2b e7           r18 = 123;                          ; 0x7b
; (0x8E-$408E-random-max)=0x7B
 48c:   2e a7           Memory[[r28:r29]+46] = r18;
 48e:   64 d3           r26_is_random_between_mem0x8D_and_mem0x8E();
; (0x74-$4074-random1-mode) is random number between "0x76" and "0x7b"
 490:   ac 8b           Memory[[r28:r29]+20] = r26;
 492:   24 e1           r18 = 20;                           ; 0x14
; (0x8D-$408D-random-min)=0x14
 494:   2d a7           Memory[[r28:r29]+45] = r18;
 496:   28 e7           r18 = 120;                          ; 0x78
; (0x8E-$408E-random-max)=0x78
 498:   2e a7           Memory[[r28:r29]+46] = r18;
 49a:   5e d3           r26_is_random_between_mem0x8D_and_mem0x8E();
 49c:   2a 84           r2 = Memory[[r28:r29]+10];
 49e:   2a 0e           r2 += r26;                          ; No carry
; 0x4075-random1-time-to-change-mode is (0x406A-master-timer-msb)+number between 20 and 120
 4a0:   2d 8a           Memory[[r28:r29]+21] = r2;
 4a2:   2c e8           r18 = 140;                          ; 0x8c
 4a4:   2d a7           Memory[[r28:r29]+45] = r18;
 4a6:   28 eb           r18 = 184;                          ; 0xb8
 4a8:   2e a7           Memory[[r28:r29]+46] = r18;
 4aa:   56 d3           r26_is_random_between_mem0x8D_and_mem0x8E();
; 0x4184 is random number beween 140 and 184
 4ac:   a0 93 84 01     Memory[0x0184] = r26;               ; 388
 4b0:   a8 8d           r26 = Memory[[r28:r29]+24];
 4b2:   a0 38           cmp(r26, 0x80);                     ; 128
 4b4:   09 f4           if (c1 != c2) goto Label_0x4b8;
 4b6:   a6 d0           Calltable_18_select_new_mode_from_r26(); ; Parameter r26

; Referenced from offset 0x478 by breq
; Referenced from offset 0x484 by brne
; Referenced from offset 0x4b4 by brne
Label_0x4b8:     ;      look to see if any buttons are pushed
 4b8:   45 fc           skipif (!bit(r4,5))
; r4 is copy of [0x83] Output Control Flags - bit5-disable-frontpanel-switches
 4ba:   cc cd           goto Main;
; Read hardware 4 buttons, depending on what is pressed do calltable based on r19 (down 0x40) ,r20 (up 0x10),r21 (menu 0x80) ,r22 (ok 0x20)
 4bc:   a1 ef           r26 = 241;                          ; 0xf1
 4be:   a5 bb           IO[PORTC] = r26;
 4c0:   af e0           r26 = 15;                           ; 0x0f
 4c2:   a4 bb           IO[DDRC] = r26;
 4c4:   00 00           nop
 4c6:   00 00           nop
 4c8:   a3 b3           r26 = IO[PINC];
 4ca:   af 60           r26 |= 15;                          ; 0x0f
 4cc:   a0 95           com     r26
 4ce:   39 f0           if (c1 == c2) goto Label_0x4de;
 4d0:   b9 85           r27 = Memory[[r28:r29]+9];
 4d2:   ba 27           r27 ^= r26;
 4d4:   bb 23           (r27 == 0) || (r27 < 0);            ; test r27
 4d6:   19 f0           if (c1 == c2) goto Label_0x4de;
; 0x68-0x4068-unknown-something-related-to-buttons
 4d8:   b8 85           r27 = Memory[[r28:r29]+8];
 4da:   ba 2b           r27 |= r26;
 4dc:   b8 87           Memory[[r28:r29]+8] = r27;

; Referenced from offset 0x4ce by breq
; Referenced from offset 0x4d6 by breq
Label_0x4de:
 4de:   a9 87           Memory[[r28:r29]+9] = r26;
 4e0:   d5 bb           IO[PORTC] = r29;
 4e2:   af ef           r26 = 0xff;                         ; 255
 4e4:   a4 bb           IO[DDRC] = r26;
; Grab [0x68-0x4068-unknown-something-related-to-buttons] and clear it
 4e6:   a8 85           r26 = Memory[[r28:r29]+8];
 4e8:   d8 87           Memory[[r28:r29]+8] = r29;
 4ea:   a0 31           cmp(r26, 0x10);                     ; 16
 4ec:   11 f4           if (c1 != c2) goto Label_0x4f2;
 4ee:   e4 2f           r30 = r20;
 4f0:   4f d1           run_call_table();                   ; Parameter r30 (0-39) CallTable_31

; Referenced from offset 0x4ec by brne
Label_0x4f2:
 4f2:   a0 32           cmp(r26, 0x20);                     ; 32
 4f4:   11 f4           if (c1 != c2) goto Label_0x4fa;
 4f6:   e6 2f           r30 = r22;
 4f8:   4b d1           run_call_table();                   ; Parameter r30 (0-39) CallTable_31

; Referenced from offset 0x4f4 by brne
Label_0x4fa:
 4fa:   a0 34           cmp(r26, 0x40);                     ; 64
 4fc:   11 f4           if (c1 != c2) goto Label_0x502;
 4fe:   e3 2f           r30 = r19;
 500:   47 d1           run_call_table();                   ; Parameter r30 (0-39) CallTable_31

; Referenced from offset 0x4fc by brne
Label_0x502:
 502:   a0 38           cmp(r26, 0x80);                     ; 128
 504:   11 f4           if (c1 != c2) goto Label_0x50a;
 506:   e5 2f           r30 = r21;
 508:   43 d1           run_call_table();                   ; Parameter r30 (0-39) CallTable_31

; Referenced from offset 0x472 by rjmp
; Referenced from offset 0x504 by brne
Label_0x50a:
 50a:   ab 89           r26 = Memory[[r28:r29]+19];
 50c:   ae 73           r26 &= 62;                          ; 0x3e
 50e:   a6 32           cmp(r26, 0x26);                     ; 38
 510:   09 f0           if (c1 == c2) goto Label_0x514;
 512:   a0 cd           goto Main;

; Referenced from offset 0x510 by breq
Label_0x514:
 514:   02 ff           skipif (bit(r16,2))
; r16[bit2-we-are-slave] is set if we're slave to another box, in which case all the hardware buttons do nothing
 516:   04 c0           goto Label_0x520;
 518:   31 e0           r19 = 1;                            ; 0x01
 51a:   41 e0           r20 = 1;                            ; 0x01
 51c:   61 e0           r22 = 1;                            ; 0x01
 51e:   51 e0           r21 = 1;                            ; 0x01

; Referenced from offset 0x516 by rjmp
Label_0x520:
 520:   ab 81           r26 = Memory[[r28:r29]+3];
 522:   a5 38           cmp(r26, 0x85);                     ; 133
 524:   08 f4           if (!Carry) goto Label_0x528;
 526:   34 c0           goto display_battery_low;

; Referenced from offset 0x524 by brcc
Label_0x528:
 528:   e9 2d           r30 = r9;
; above r9 is min(50,[xB7] Channel A: Current Width Modulation Value)
 52a:   f0 91 05 02     r31 = channel_a_dac_level;          ; 0x0205
 52e:   ab 85           r26 = Memory[[r28:r29]+11];
 530:   fa 1b           r31 -= r26;                         ; No carry
 532:   08 f4           if (!Carry) goto Label_0x536;
 534:   ff 27           r31 = 0x00;                         ; 0

; Referenced from offset 0x532 by brcc
Label_0x536:
 536:   15 d7           multiplyr30r31();                   ; Parameter r30:r31,returns r30:31 = r30 * r31
 538:   a4 e0           r26 = 4;                            ; 0x04
; r5 is [x90] Channel A: Current Gate Value (look at bits 0 1 2)
 53a:   b5 2d           r27 = r5;
 53c:   b7 70           r27 &= 7;                           ; 0x07
 53e:   b7 30           cmp(r27, 0x07);                     ; 7
 540:   09 f0           if (c1 == c2) goto Label_0x544;
 542:   aa 0f           r26 *= 2;

; Referenced from offset 0x540 by breq
Label_0x544:
 544:   b0 e0           r27 = 0;                            ; 0x00
 546:   3a d7           divide_word();                      ; Parameter r26:r27 r30:r31: r30:r31 /= r26:r27, r26:r27 = r30:r31 % r26:r27
 548:   00 24           r0 = 0x00;                          ; 0
; r8 is min(9,[xAE] Channel A: Current Frequency Modulation Value)
 54a:   b8 2d           r27 = r8;
 54c:   fb 1b           r31 -= r27;                         ; No carry
 54e:   08 f0           if (Carry) goto Label_0x552;
 550:   0f 2e           r0 = r31;

; Referenced from offset 0x54e by brcs
Label_0x552:
 552:   ee 2d           r30 = r14;
 554:   f0 91 06 02     r31 = channel_b_dac_level;          ; 0x0206
; 0x6c-0x406c-channelb-fet-calibration
 558:   ac 85           r26 = Memory[[r28:r29]+12];
 55a:   fa 1b           r31 -= r26;                         ; No carry
 55c:   08 f4           if (!Carry) goto Label_0x560;
 55e:   ff 27           r31 = 0x00;                         ; 0

; Referenced from offset 0x55c by brcc
Label_0x560:
 560:   00 d7           multiplyr30r31();                   ; Parameter r30:r31,returns r30:31 = r30 * r31
 562:   a4 e0           r26 = 4;                            ; 0x04
 564:   ba 2d           r27 = r10;
 566:   b7 70           r27 &= 7;                           ; 0x07
 568:   b7 30           cmp(r27, 0x07);                     ; 7
 56a:   09 f0           if (c1 == c2) goto Label_0x56e;
 56c:   aa 0f           r26 *= 2;

; Referenced from offset 0x56a by breq
Label_0x56e:
 56e:   b0 e0           r27 = 0;                            ; 0x00
 570:   25 d7           divide_word();                      ; Parameter r26:r27 r30:r31: r30:r31 /= r26:r27, r26:r27 = r30:r31 % r26:r27
; r8 is min(9,[xAE] Channel A: Current Frequency Modulation Value)
 572:   b8 2d           r27 = r8;
 574:   fb 1b           r31 -= r27;                         ; No carry
 576:   08 f0           if (Carry) goto Label_0x57a;
 578:   0f 0e           r0 += r31;                          ; No carry

; Referenced from offset 0x576 by brcs
Label_0x57a:
 57a:   f8 94           Disable_Interrupts();
 57c:   00 92 04 02     pwm_frequency = r0;                 ; 0x0204
 580:   78 94           Enable_Interrupts();
; r17[bit3-adc-running]
 582:   13 fd           skipif (!bit(r17,3))
 584:   67 cd           goto Main;
; look at state of q5,6,7,8 outputs
 586:   a8 b3           r26 = IO[PORTB];
 588:   af 70           r26 &= 15;                          ; 0x0f
 58a:   09 f4           if (c1 != c2) goto Label_0x58e;
 58c:   c8 d2           enable_ADC_and_set_r17[3]();        ; CallTable_34

; Referenced from offset 0x58a by brne
Label_0x58e:
 58e:   62 cd           goto Main;

; Referenced from offset 0x526 by rjmp
; Referenced from offset 0x16d8 by jmp
; Referenced from offset 0x16f8 by jmp
display_battery_low:
 590:   aa ec           r26 = 202;                          ; 0xca
; display "Battery Low"
 592:   ac d6           show_Text_on_Display();             ; Parameter r26
 594:   ab e6           r26 = 107;                          ; 0x6b
 596:   aa d6           show_Text_on_Display();             ; Parameter r26
 598:   0c 94 43 0b     goto display_shut_off_power_and_halt;

; Referenced from offset 0x6c by rcall
update_current_channel_multi_adjust_value:
 59c:   ac 8d           r26 = Memory[[r28:r29]+28];
 59e:   bd 8d           r27 = Memory[[r28:r29]+29];
 5a0:   ee 8d           r30 = Memory[[r28:r29]+30];
 5a2:   ff 8d           r31 = Memory[[r28:r29]+31];
; r17[bit4-something-to-do-with-MA]
 5a4:   14 fd           skipif (!bit(r17,4))
 5a6:   04 c0           goto Label_0x5b0;
 5a8:   ae 1b           r26 -= r30;                         ; No carry
 5aa:   bf 0b           r27 += r31;                         ; With carry
 5ac:   fb 2f           r31 = r27;
 5ae:   02 c0           goto Label_0x5b4;

; Referenced from offset 0x5a6 by rjmp
Label_0x5b0:
 5b0:   ea 1b           r30 -= r26;                         ; No carry
 5b2:   fb 0b           r31 += r27;                         ; With carry

; Referenced from offset 0x5ae by rjmp
Label_0x5b4:
 5b4:   f2 30           cmp(r31, 0x02);                     ; 2
 5b6:   08 f4           if (!Carry) goto Label_0x5ba;
 5b8:   08 95           return;


; Referenced from offset 0x5b6 by brcc
Label_0x5ba:
 5ba:   f6 30           cmp(r31, 0x06);                     ; 6
 5bc:   08 f0           if (Carry) goto Label_0x5c0;
 5be:   08 95           return;


; Referenced from offset 0x5bc by brcs
Label_0x5c0:
 5c0:   a0 e1           r26 = 16;                           ; 0x10
; toggle r17[bit4-something-to-do-with-MA]
 5c2:   1a 27           r17 ^= r26;
 5c4:   a6 e9           r26 = 150;                          ; 0x96
 5c6:   b0 91 0d 02     r27 = current_multi_adjust_value;   ; 0x020d
 5ca:   ba 0f           r27 += r26;                         ; No carry
; r9 is min(50,[xB7] Channel A: Current Width Modulation Value)
 5cc:   9e 14           cmp(r9, r14);
 5ce:   18 f0           if (Carry) goto Label_0x5d6;
 5d0:   9a 2e           r9 = r26;
 5d2:   eb 2e           r14 = r27;
 5d4:   02 c0           goto Label_0x5da;

; Referenced from offset 0x5ce by brcs
Label_0x5d6:
 5d6:   9b 2e           r9 = r27;
; r14 is min(50,[x1B7]) Channel B: Current Width Modulation Value)
 5d8:   ea 2e           r14 = r26;

; Referenced from offset 0x5d4 by rjmp
Label_0x5da:
 5da:   90 92 b7 00     channel_a_current_width_modulation_value = r9; ; 0x00b7
 5de:   e0 92 b7 01     channel_b_current_width_modulation_value = r14; ; 0x01b7
 5e2:   08 95           return;


; Referenced from offset 0x5e4 by rjmp
Label_0x5e4:
 5e4:   ff cf           goto Label_0x5e4;

; Referenced from offset 0x60e by rcall
; Referenced from offset 0x904 by rcall
; Referenced from offset 0x11d6 by rcall
; Referenced from offset 0x11e8 by rcall
; Referenced from offset 0x141c by rcall
; Referenced from offset 0x1426 by rcall
; Referenced from offset 0x1430 by rcall
; Referenced from offset 0x1438 by rcall
; Referenced from offset 0x144a by rcall
; Referenced from offset 0x148e by rcall
sleep:     ; Parameter r26
 5e6:   bf 93           push    r27
 5e8:   b0 e8           r27 = 128;                          ; 0x80
 5ea:   b8 bf           IO[TIFR] = r27;
 5ec:   b4 b5           r27 = IO[TCNT2];
 5ee:   ba 0f           r27 += r26;                         ; No carry
 5f0:   b3 95           r27++;
 5f2:   b3 bd           IO[OCR2] = r27;

; Referenced from offset 0x5f8 by breq
Label_0x5f4:
 5f4:   b8 b7           r27 = IO[TIFR];
 5f6:   b0 78           r27 &= 128;                         ; 0x80
 5f8:   e9 f3           if (c1 == c2) goto Label_0x5f4;
 5fa:   bf 91           pop     r27
 5fc:   08 95           return;


; Referenced from offset 0x7d4 by rcall
; Referenced from offset 0x874 by rcall
; Referenced from offset 0x88a by rcall
; Referenced from offset 0x994 by rcall
CallTable_18_select_new_mode:     ; Parameter r28:r29
 5fe:   dc 8b           Memory[[r28:r29]+20] = r29;
 600:   a8 8d           r26 = Memory[[r28:r29]+24];
 602:   ab 8f           Memory[[r28:r29]+27] = r26;

; Referenced from offset 0x4b6 by rcall
Calltable_18_select_new_mode_from_r26:     ; Parameter r26
 604:   0c 7c           r16 &= 204;                         ; 0xcc
; unset r16[bit0-unknown] r16[bit1-unknown] r16[bit4-unknown] r16[bit5-unknown]
 606:   a2 d7           set_initial_module_parameters_and_setup_r4-14_with_a_and_b_values(); ; CallTable_24
 608:   d7 d7           setup_dac_levels_0x205_x206_based_on_pot_and_ramp_and_levels();
 60a:   45 d7           send_data_to_spdr();
 60c:   a2 e0           r26 = 2;                            ; 0x02
 60e:   eb df           sleep();                            ; Parameter r26
 610:   a3 e0           r26 = 3;                            ; 0x03
; set r17[bit0] , set r17[bit1-is-splitmode]
 612:   1a 2b           r17 |= r26;
 614:   a1 e0           r26 = 1;                            ; 0x01
 616:   c0 d2           CallTable_22_start_module();
; (0x74-$4074-random1-mode)
 618:   bc 89           r27 = Memory[[r28:r29]+20];
 61a:   bb 23           (r27 == 0) || (r27 < 0);            ; test r27
 61c:   11 f0           if (c1 == c2) goto Label_0x622;
 61e:   ab 2f           r26 = r27;
 620:   0d c0           goto Label_0x63c;

; Referenced from offset 0x61c by breq
Label_0x622:
 622:   a8 8d           r26 = Memory[[r28:r29]+24];
; unset r17[bit1-is-splitmode],  set r17[bit0]
 624:   11 60           r17 |= 1;                           ; 0x01
 626:   1d 7f           r17 &= 253;                         ; 0xfd
; r26 is 0x78 $4078 (current displayed menu item)
 628:   af 37           cmp(r26, 0x7f);                     ; 127
 62a:   19 f0           if (c1 == c2) goto Label_0x632;
; menu item mode is not Split
 62c:   bf ee           r27 = 239;                          ; 0xef
; r4 is copy of [0x83] Output Control Flags - unset bit4-unknown-maybe-split
 62e:   4b 22           r4 &= r27;
 630:   05 c0           goto Label_0x63c;

; Referenced from offset 0x62a by breq
Label_0x632:
 632:   b0 e1           r27 = 16;                           ; 0x10
; r4 is copy of [0x83] Output Control Flags - set bit4-unknown-maybe-split
 634:   4b 2a           r4 |= r27;
 636:   a0 91 f5 01     r26 = split_mode_number_a;          ; 0x01f5
; unset r17[bit1-is-splitmode]
 63a:   1d 7f           r17 &= 253;                         ; 0xfd

; Referenced from offset 0x620 by rjmp
; Referenced from offset 0x630 by rjmp
; Referenced from offset 0x770 by rjmp
Label_0x63c:
 63c:   2b ef           r18 = 251;                          ; 0xfb
; 0x0f-$400f unset r15[bit2-notforslave]
 63e:   f2 22           r15 &= r18;
 640:   b1 2f           r27 = r17;
 642:   b3 70           r27 &= 3;                           ; 0x03
; 0x85-0x4085-unknown (set to r17 bits 1 and bits 0)
 644:   bd a3           Memory[[r28:r29]+37] = r27;
 646:   bb 27           r27 = 0x00;                         ; 0
 648:   a6 37           cmp(r26, 0x76);                     ; 118
 64a:   39 f4           if (c1 != c2) goto Label_0x65a;
; Mode: Waves (blocks 11/12)
 64c:   ab e0           r26 = 11;                           ; 0x0b
 64e:   a4 d2           CallTable_22_start_module();
 650:   11 ff           skipif (bit(r17,1))
 652:   02 c0           goto Label_0x658;
 654:   ac e0           r26 = 12;                           ; 0x0c
 656:   a0 d2           CallTable_22_start_module();

; Referenced from offset 0x652 by rjmp
Label_0x658:
 658:   83 c0           goto Label_0x760;

; Referenced from offset 0x64a by brne
Label_0x65a:
 65a:   a7 37           cmp(r26, 0x77);                     ; 119
 65c:   39 f4           if (c1 != c2) goto Label_0x66c;
; Mode: Stroke (blocks 3/4)
 65e:   a3 e0           r26 = 3;                            ; 0x03
 660:   9b d2           CallTable_22_start_module();
 662:   11 ff           skipif (bit(r17,1))
 664:   02 c0           goto Label_0x66a;
 666:   a4 e0           r26 = 4;                            ; 0x04
 668:   97 d2           CallTable_22_start_module();

; Referenced from offset 0x664 by rjmp
Label_0x66a:
 66a:   7a c0           goto Label_0x760;

; Referenced from offset 0x65c by brne
Label_0x66c:
 66c:   a8 37           cmp(r26, 0x78);                     ; 120
 66e:   39 f4           if (c1 != c2) goto Label_0x67e;
; Mode: Climb (blocks 5/8)
 670:   a5 e0           r26 = 5;                            ; 0x05
 672:   92 d2           CallTable_22_start_module();
 674:   11 ff           skipif (bit(r17,1))
 676:   02 c0           goto Label_0x67c;
 678:   a8 e0           r26 = 8;                            ; 0x08
 67a:   8e d2           CallTable_22_start_module();

; Referenced from offset 0x676 by rjmp
Label_0x67c:
 67c:   71 c0           goto Label_0x760;

; Referenced from offset 0x66e by brne
Label_0x67e:
 67e:   a9 37           cmp(r26, 0x79);                     ; 121
 680:   39 f4           if (c1 != c2) goto Label_0x690;
; Mode: Combo (blocks 13/33)
 682:   ad e0           r26 = 13;                           ; 0x0d
 684:   89 d2           CallTable_22_start_module();
 686:   11 ff           skipif (bit(r17,1))
 688:   02 c0           goto Label_0x68e;
 68a:   a1 e2           r26 = 33;                           ; 0x21
 68c:   85 d2           CallTable_22_start_module();

; Referenced from offset 0x688 by rjmp
Label_0x68e:
 68e:   68 c0           goto Label_0x760;

; Referenced from offset 0x680 by brne
Label_0x690:
 690:   aa 37           cmp(r26, 0x7a);                     ; 122
 692:   39 f4           if (c1 != c2) goto Label_0x6a2;
; Mode: Intense (blocks 14/2)
 694:   ae e0           r26 = 14;                           ; 0x0e
 696:   80 d2           CallTable_22_start_module();
 698:   11 ff           skipif (bit(r17,1))
 69a:   02 c0           goto Label_0x6a0;
 69c:   a2 e0           r26 = 2;                            ; 0x02
 69e:   7c d2           CallTable_22_start_module();

; Referenced from offset 0x69a by rjmp
Label_0x6a0:
 6a0:   5f c0           goto Label_0x760;

; Referenced from offset 0x692 by brne
Label_0x6a2:
 6a2:   24 e0           r18 = 4;                            ; 0x04
; 0x0f-$400f set r15[bit2-notforslave] (mode Rhythm, Audio1/2/3)
 6a4:   f2 2a           r15 |= r18;
 6a6:   ab 37           cmp(r26, 0x7b);                     ; 123
 6a8:   19 f4           if (c1 != c2) goto Label_0x6b0;
; Mode: Rhythm (blocks 15)
 6aa:   af e0           r26 = 15;                           ; 0x0f
 6ac:   75 d2           CallTable_22_start_module();
 6ae:   58 c0           goto Label_0x760;

; Referenced from offset 0x6a8 by brne
Label_0x6b0:
 6b0:   ac 37           cmp(r26, 0x7c);                     ; 124
 6b2:   59 f4           if (c1 != c2) goto Label_0x6ca;
; Mode: Audio1 (blocks 23)
 6b4:   a0 e4           r26 = 64;                           ; 0x40
 6b6:   ab a3           Memory[[r28:r29]+35] = r26;

; Referenced from offset 0x6ce by rjmp
Label_0x6b8:
 6b8:   a7 e4           r26 = 71;                           ; 0x47
; if r17[bit0] is set, 0x4190 (B: current gate value) is set to 0 1 0 0 1 1 1 1 audio1
 6ba:   10 fd           skipif (!bit(r17,0))
 6bc:   a8 ab           Memory[[r28:r29]+48] = r26;
; if r17[bit1] is set, 0x4090 (A: current gate value) is set to 0 1 0 0 1 1 1 1 audio1
 6be:   11 fd           skipif (!bit(r17,1))
 6c0:   a0 93 90 01     channel_b_current_gate_value = r26; ; 0x0190
 6c4:   a7 e1           r26 = 23;                           ; 0x17
 6c6:   68 d2           CallTable_22_start_module();
 6c8:   4b c0           goto Label_0x760;

; Referenced from offset 0x6b2 by brne
Label_0x6ca:
 6ca:   ad 37           cmp(r26, 0x7d);                     ; 125
 6cc:   09 f4           if (c1 != c2) goto Label_0x6d0;
; Mode: Audio2 (blocks 23)
 6ce:   f4 cf           goto Label_0x6b8;

; Referenced from offset 0x6cc by brne
Label_0x6d0:
 6d0:   ae 37           cmp(r26, 0x7e);                     ; 126
 6d2:   59 f4           if (c1 != c2) goto Label_0x6ea;
; Mode: Audio3 (blocks 34)
 6d4:   a7 e6           r26 = 103;                          ; 0x67
; if r17[bit0] is set, 0x4090 (A: current gate value) is set to 0 1 1 0 1 1 1 1 audio3
 6d6:   10 fd           skipif (!bit(r17,0))
 6d8:   a8 ab           Memory[[r28:r29]+48] = r26;
 6da:   11 fd           skipif (!bit(r17,1))
 6dc:   a0 93 90 01     channel_b_current_gate_value = r26; ; 0x0190
 6e0:   a2 e2           r26 = 34;                           ; 0x22
 6e2:   5a d2           CallTable_22_start_module();
 6e4:   a4 e0           r26 = 4;                            ; 0x04
; set 0x83=$4083 Output Control Flags all off except bit2-phase-control-3 (audio3 mode)
 6e6:   ab a3           Memory[[r28:r29]+35] = r26;
 6e8:   3b c0           goto Label_0x760;

; Referenced from offset 0x6d2 by brne
Label_0x6ea:
 6ea:   2b ef           r18 = 251;                          ; 0xfb
; 0x0f-$400f unset r15[bit2-notforslave]
 6ec:   f2 22           r15 &= r18;
 6ee:   a0 38           cmp(r26, 0x80);                     ; 128
 6f0:   19 f4           if (c1 != c2) goto Label_0x6f8;
; Mode: Random1 (sets 0x74 $4074 random1mode to 1)
 6f2:   a1 e0           r26 = 1;                            ; 0x01
 6f4:   ac 8b           Memory[[r28:r29]+20] = r26;
 6f6:   49 c0           goto Label_0x78a;

; Referenced from offset 0x6f0 by brne
Label_0x6f8:
 6f8:   a1 38           cmp(r26, 0x81);                     ; 129
 6fa:   19 f4           if (c1 != c2) goto Label_0x702;
; Mode: Random2 (blocks 32)
 6fc:   a0 e2           r26 = 32;                           ; 0x20
 6fe:   4c d2           CallTable_22_start_module();
 700:   2f c0           goto Label_0x760;

; Referenced from offset 0x6fa by brne
Label_0x702:
 702:   a2 38           cmp(r26, 0x82);                     ; 130
 704:   19 f4           if (c1 != c2) goto Label_0x70c;
; Mode: Toggle (blocks 18)
 706:   a2 e1           r26 = 18;                           ; 0x12
 708:   47 d2           CallTable_22_start_module();
 70a:   2a c0           goto Label_0x760;

; Referenced from offset 0x704 by brne
Label_0x70c:
 70c:   a3 38           cmp(r26, 0x83);                     ; 131
 70e:   19 f4           if (c1 != c2) goto Label_0x716;
; Mode: Orgasm (blocks 24)
 710:   a8 e1           r26 = 24;                           ; 0x18
 712:   42 d2           CallTable_22_start_module();
 714:   25 c0           goto Label_0x760;

; Referenced from offset 0x70e by brne
Label_0x716:
 716:   a4 38           cmp(r26, 0x84);                     ; 132
 718:   19 f4           if (c1 != c2) goto Label_0x720;
; Mode: Torment (blocks 28)
 71a:   ac e1           r26 = 28;                           ; 0x1c
 71c:   3d d2           CallTable_22_start_module();
 71e:   20 c0           goto Label_0x760;

; Referenced from offset 0x718 by brne
Label_0x720:
 720:   24 e0           r18 = 4;                            ; 0x04
; 0x0f-$400f set r15[bit2-notforslave] (mode Phase1/2/3, User1-7)
 722:   f2 2a           r15 |= r18;
 724:   a7 38           cmp(r26, 0x87);                     ; 135
 726:   78 f4           if (!Carry) goto Label_0x746;
; Mode: Phase1/2 (blocks 20/21/35)
 728:   a5 e0           r26 = 5;                            ; 0x05
; r4 is copy of [0x83] Output Control Flags - set all off except bit2-phase-control2, bit0-phase-control0
 72a:   4a 2e           r4 = r26;
; set 0x83=$4083 Output Control Flags all off except bit0-phase-control-0 and bit2-phase-control-2 (phase mode)
 72c:   ab a3           Memory[[r28:r29]+35] = r26;
 72e:   a4 e1           r26 = 20;                           ; 0x14
 730:   33 d2           CallTable_22_start_module();
 732:   11 ff           skipif (bit(r17,1))
 734:   02 c0           goto Label_0x73a;
 736:   a5 e1           r26 = 21;                           ; 0x15
 738:   2f d2           CallTable_22_start_module();

; Referenced from offset 0x734 by rjmp
Label_0x73a:
 73a:   a8 8d           r26 = Memory[[r28:r29]+24];
 73c:   a5 38           cmp(r26, 0x85);                     ; 133
 73e:   81 f0           if (c1 == c2) goto Label_0x760;
 740:   a3 e2           r26 = 35;                           ; 0x23
 742:   2a d2           CallTable_22_start_module();
 744:   0d c0           goto Label_0x760;

; Referenced from offset 0x726 by brcc
Label_0x746:
 746:   a7 38           cmp(r26, 0x87);                     ; 135
 748:   19 f4           if (c1 != c2) goto Label_0x750;
; Mode: Phase3 (blocks 22)
 74a:   a6 e1           r26 = 22;                           ; 0x16
 74c:   25 d2           CallTable_22_start_module();
 74e:   08 c0           goto Label_0x760;

; Referenced from offset 0x748 by brne
Label_0x750:
 750:   a0 57           r26 -= 112;                         ; 0x70, no carry
 752:   ae 31           cmp(r26, 0x1e);                     ; 30
 754:   20 f4           if (!Carry) goto Label_0x75e;
; Mode: User1-7 read blocks from eprom 0x18,0x19,0x1a,0x1b,0x1c,0x1d,0x1e (start vector user1-7)
 756:   0e 94 ee 0c     read_from_eeprom();                 ; Parameter r26:r27, returns r0
 75a:   a0 2d           r26 = r0;
 75c:   1d d2           CallTable_22_start_module();

; Referenced from offset 0x754 by brcc
Label_0x75e:
 75e:   00 c0           goto Label_0x760;

; Referenced from offset 0x658 by rjmp
; Referenced from offset 0x66a by rjmp
; Referenced from offset 0x67c by rjmp
; Referenced from offset 0x68e by rjmp
; Referenced from offset 0x6a0 by rjmp
; Referenced from offset 0x6ae by rjmp
; Referenced from offset 0x6c8 by rjmp
; Referenced from offset 0x6e8 by rjmp
; Referenced from offset 0x700 by rjmp
; Referenced from offset 0x70a by rjmp
; Referenced from offset 0x714 by rjmp
; Referenced from offset 0x71e by rjmp
; Referenced from offset 0x73e by breq
; Referenced from offset 0x744 by rjmp
; Referenced from offset 0x74e by rjmp
; Referenced from offset 0x75e by rjmp
Label_0x760:
 760:   11 fd           skipif (!bit(r17,1))
; r17[bit1-is-splitmode]
 762:   07 c0           goto Label_0x772;
 764:   b3 e0           r27 = 3;                            ; 0x03
; toggle r17[bit0] toggle r17[bit1-is-splitmode]
 766:   1b 27           r17 ^= r27;
; r26 is 0x7b-$407b-current-mode
 768:   ab 8d           r26 = Memory[[r28:r29]+27];
; r4 is copy of [0x83] Output Control Flags - bit4-unknown-maybe-split
 76a:   44 fc           skipif (!bit(r4,4))
 76c:   a0 91 f6 01     r26 = split_mode_number_b;          ; 0x01f6
 770:   65 cf           goto Label_0x63c;

; Referenced from offset 0x762 by rjmp
Label_0x772:
 772:   a3 e0           r26 = 3;                            ; 0x03
; 0x85-0x4085-unknown (set to r17 bits 1 and bits 0)
 774:   ad a3           Memory[[r28:r29]+37] = r26;
; set r17[bit0], set r17[bit1-is-splitmode]
 776:   1a 2b           r17 |= r26;
 778:   ec dd           CallTable_29_set_up_r4-14_with_a_and_b_values(); ; Parameter r28:r29
; unset r17[bit4-something-to-do-with-MA]
 77a:   1f 7e           r17 &= 239;                         ; 0xef
; r8 is min(9,[xAE] Channel A: Current Frequency Modulation Value)
 77c:   8d 14           cmp(r8, r13);
 77e:   29 f4           if (c1 != c2) goto Label_0x78a;
; r14 is min(50,[x1B7]) Channel B: Current Width Modulation Value)
 780:   e9 14           cmp(r14, r9);
 782:   19 f0           if (c1 == c2) goto Label_0x78a;
 784:   08 f0           if (Carry) goto Label_0x788;
; set r17[bit4-something-to-do-with-MA]
 786:   10 61           r17 |= 16;                          ; 0x10

; Referenced from offset 0x784 by brcs
Label_0x788:
 788:   00 c0           goto Label_0x78a;

; Referenced from offset 0x6f6 by rjmp
; Referenced from offset 0x77e by brne
; Referenced from offset 0x782 by breq
; Referenced from offset 0x788 by rjmp
Label_0x78a:
 78a:   a2 e0           r26 = 2;                            ; 0x02
; 0x6d-$406d-menu-state set to 2 (no menu, program is running)
 78c:   ad 87           Memory[[r28:r29]+13] = r26;
 78e:   08 95           return;


; Referenced from offset 0x442 by rcall
; Referenced from offset 0x44e by rcall
; Referenced from offset 0x466 by rcall
; Referenced from offset 0x4f0 by rcall
; Referenced from offset 0x4f8 by rcall
; Referenced from offset 0x500 by rcall
; Referenced from offset 0x508 by rcall
run_call_table:     ; Parameter r30 (0-39) CallTable_31
 790:   e8 32           cmp(r30, 0x28);                     ; 40
 792:   10 f0           if (Carry) goto Label_0x798;
 794:   a0 e5           r26 = 80;                           ; 0x50
 796:   6f c7           goto error_handler;

; Referenced from offset 0x792 by brcs
Label_0x798:
 798:   ff 27           r31 = 0x00;                         ; 0
 79a:   ee 0f           r30 *= 2;
 79c:   a0 e7           r26 = 112;                          ; 0x70
 79e:   ea 0f           r30 += r26;                         ; No carry
 7a0:   bc e1           r27 = 28;                           ; 0x1c
 7a2:   fb 1f           r31 += r27;                         ; With carry
 7a4:   c8 95           r0 = Flash[r30:r31];
 7a6:   a0 2d           r26 = r0;
 7a8:   e3 95           r30++;
 7aa:   c8 95           r0 = Flash[r30:r31];
 7ac:   f0 2d           r31 = r0;
 7ae:   ea 2f           r30 = r26;
 7b0:   a0 91 82 01     r26 = Memory[0x0182];               ; 386
 7b4:   b0 91 83 01     r27 = Memory[0x0183];               ; 387
 7b8:   09 95           icall [r30:r31];
 7ba:   08 95           return;

CallTable_1:     ; noop
 7bc:   08 95           return;

CallTable_0_5:
 7be:   a6 e7           r26 = 118;                          ; 0x76
; 0x79-$4079-lowest-menu-option = 0x76
 7c0:   a9 8f           Memory[[r28:r29]+25] = r26;
 7c2:   a0 91 f3 01     r26 = current_top_mode;             ; 0x01f3
; 0x7a-$407a-highest-menu-option = current_top_mode (0x1f3-$41f3)
 7c6:   aa 8f           Memory[[r28:r29]+26] = r26;
 7c8:   a0 91 f7 01     r26 = favourite_mode;               ; 0x01f7
; 0x78-$4081-current-menu-option = favourite_mode (0x1f7-$41f7) 
 7cc:   a8 8f           Memory[[r28:r29]+24] = r26;
 7ce:   8e d5           show_Text_on_Display();             ; Parameter r26
 7d0:   a5 e0           r26 = 5;                            ; 0x05
; display "Selects Mode"
 7d2:   84 d5           show_Text_on_Display2();            ; Parameter r26
 7d4:   14 df           CallTable_18_select_new_mode();     ; Parameter r28:r29
; Set button actions, menu=show_main_menu, ok=0x1, up=switch_next_mode, down=switch_previous_mode
 7d6:   61 e0           r22 = 1;                            ; 0x01
 7d8:   30 e1           r19 = 16;                           ; 0x10
 7da:   41 e1           r20 = 17;                           ; 0x11
 7dc:   5a e0           r21 = 10;                           ; 0x0a
 7de:   08 95           return;

CallTable_2_Show_status:
 7e0:   ac ef           r26 = 252;                          ; 0xfc
; display "AB" and A&B levels
 7e2:   84 d5           show_Text_on_Display();             ; Parameter r26
 7e4:   f1 e0           r31 = 1;                            ; 0x01
; $4064-Level Pot A - CBLOCK_POT_A_OFFSET (ADC4)
 7e6:   ec 81           r30 = Memory[[r28:r29]+4];
 7e8:   4d d5           display_number_on_display_scaled(); ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-99)
 7ea:   f5 e0           r31 = 5;                            ; 0x05
; $4065-Level Pot B - CBLOCK_POT_B_OFFSET (ADC5)
 7ec:   ed 81           r30 = Memory[[r28:r29]+5];
 7ee:   4a d5           display_number_on_display_scaled(); ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-99)
; $409C-Mode Switch Ramp Value Counter
 7f0:   ac ad           r26 = Memory[[r28:r29]+60];
 7f2:   af 3f           cmp(r26, 0xff);                     ; 255
 7f4:   61 f0           if (c1 == c2) goto Label_0x80e;
 7f6:   af e0           r26 = 15;                           ; 0x0f
 7f8:   a0 93 85 01     need_to_show_select_mode_message = r26; ; 0x0185
; display "Ramp"
 7fc:   6f d5           show_Text_on_Display2();            ; Parameter r26
 7fe:   f5 e4           r31 = 69;                           ; 0x45
; display r6 (mode switch ramp value counter)
 800:   e6 2d           r30 = r6;
 802:   eb 59           r30 -= 155;                         ; 0x9b, no carry
 804:   e5 36           cmp(r30, 0x65);                     ; 101
 806:   08 f0           if (Carry) goto Label_0x80a;
 808:   ee 27           r30 = 0x00;                         ; 0

; Referenced from offset 0x806 by brcs
Label_0x80a:
 80a:   56 d5           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
 80c:   08 95           return;


; Referenced from offset 0x7f4 by breq
Label_0x80e:
 80e:   a0 91 85 01     r26 = need_to_show_select_mode_message; ; 0x0185
 812:   aa 23           (r26 == 0) || (r26 < 0);            ; test r26
 814:   21 f0           if (c1 == c2) goto Label_0x81e;
 816:   a5 e0           r26 = 5;                            ; 0x05
; display "Selects Mode"
 818:   61 d5           show_Text_on_Display2();            ; Parameter r26
 81a:   d0 93 85 01     need_to_show_select_mode_message = r29; ; 0x0185

; Referenced from offset 0x814 by breq
Label_0x81e:
 81e:   08 95           return;

CallTable_10_Show_main_menu:
 820:   ae e0           r26 = 14;                           ; 0x0e
; Call table "show main menu" caused by button press, set min/current menu item to 7, max to 14
 822:   aa 8f           Memory[[r28:r29]+26] = r26;
 824:   a7 e0           r26 = 7;                            ; 0x07
 826:   a8 8f           Memory[[r28:r29]+24] = r26;
 828:   a9 8f           Memory[[r28:r29]+25] = r26;
 82a:   60 d5           show_Text_on_Display();             ; Parameter r26
 82c:   a6 e0           r26 = 6;                            ; 0x06
; display "Press or OK"
 82e:   56 d5           show_Text_on_Display2();            ; Parameter r26
; Set button actions, up=next_menu_item, down=previous_menu_item, ok=select_menu_item, menu=exit_menu
 830:   54 e0           r21 = 4;                            ; 0x04
 832:   38 e0           r19 = 8;                            ; 0x08
 834:   49 e0           r20 = 9;                            ; 0x09
 836:   63 e0           r22 = 3;                            ; 0x03
 838:   a1 e0           r26 = 1;                            ; 0x01
 83a:   ad 87           Memory[[r28:r29]+13] = r26;
 83c:   08 95           return;

CallTable_8_Display_next_menu_item:
 83e:   a8 8d           r26 = Memory[[r28:r29]+24];
; Call table "display next menu item" caused by button press, updates 0x078-$4078 between range of 0x79 and 0x7a and displays it on first line of lcd
 840:   ba 8d           r27 = Memory[[r28:r29]+26];
 842:   ab 17           cmp(r26, r27);
 844:   20 f4           if (!Carry) goto Label_0x84e;
 846:   a3 95           r26++;

; Referenced from offset 0x850 by rjmp
Label_0x848:
 848:   a8 8f           Memory[[r28:r29]+24] = r26;
 84a:   50 d5           show_Text_on_Display();             ; Parameter r26
 84c:   08 95           return;


; Referenced from offset 0x844 by brcc
Label_0x84e:
 84e:   a9 8d           r26 = Memory[[r28:r29]+25];
 850:   fb cf           goto Label_0x848;
CallTable_9_Display_prev_menu_item:
 852:   a8 8d           r26 = Memory[[r28:r29]+24];
; Call table "previous next menu item" caused by button press, updates 0x078-$4078 between range of 0x79 and 0x7a and displays it on first line of lcd
 854:   b9 8d           r27 = Memory[[r28:r29]+25];
 856:   ab 17           cmp(r26, r27);
 858:   21 f0           if (c1 == c2) goto Label_0x862;
 85a:   aa 95           r26--;

; Referenced from offset 0x864 by rjmp
Label_0x85c:
 85c:   a8 8f           Memory[[r28:r29]+24] = r26;
 85e:   46 d5           show_Text_on_Display();             ; Parameter r26
 860:   08 95           return;


; Referenced from offset 0x858 by breq
Label_0x862:
 862:   aa 8d           r26 = Memory[[r28:r29]+26];
 864:   fb cf           goto Label_0x85c;
CallTable_16_Switch_to_next_mode:
 866:   a8 8d           r26 = Memory[[r28:r29]+24];
; Switch to Next Mode, run New Mode
 868:   ba 8d           r27 = Memory[[r28:r29]+26];
 86a:   ab 17           cmp(r26, r27);
 86c:   28 f4           if (!Carry) goto Label_0x878;
 86e:   a3 95           r26++;

; Referenced from offset 0x87a by rjmp
Label_0x870:
 870:   a8 8f           Memory[[r28:r29]+24] = r26;
 872:   3c d5           show_Text_on_Display();             ; Parameter r26
 874:   c4 de           CallTable_18_select_new_mode();     ; Parameter r28:r29
 876:   08 95           return;


; Referenced from offset 0x86c by brcc
Label_0x878:
 878:   a9 8d           r26 = Memory[[r28:r29]+25];
 87a:   fa cf           goto Label_0x870;
CallTable_17_Switch_to_prev_mode:
 87c:   a8 8d           r26 = Memory[[r28:r29]+24];
; Switch to Previous Mode, run New Mode
 87e:   b9 8d           r27 = Memory[[r28:r29]+25];
 880:   ab 17           cmp(r26, r27);
 882:   29 f0           if (c1 == c2) goto Label_0x88e;
 884:   aa 95           r26--;

; Referenced from offset 0x890 by rjmp
Label_0x886:
 886:   a8 8f           Memory[[r28:r29]+24] = r26;
 888:   31 d5           show_Text_on_Display();             ; Parameter r26
 88a:   b9 de           CallTable_18_select_new_mode();     ; Parameter r28:r29
 88c:   08 95           return;


; Referenced from offset 0x882 by breq
Label_0x88e:
 88e:   aa 8d           r26 = Memory[[r28:r29]+26];
 890:   fa cf           goto Label_0x886;
CallTable_3_Select_Current_Menu_Item:
 892:   a8 8d           r26 = Memory[[r28:r29]+24];
 894:   a7 30           cmp(r26, 0x07);                     ; 7
 896:   21 f4           if (c1 != c2) goto Label_0x8a0;
; Menu option 7 selected do this (start ramp up)
 898:   b2 d0           CallTable_33_start_ramp();
 89a:   a6 ef           r26 = 246;                          ; 0xf6
 89c:   bf d0           CallTable_4_Exit_Menu();
 89e:   63 c0           goto Label_0x966;

; Referenced from offset 0x896 by brne
Label_0x8a0:
 8a0:   a8 30           cmp(r26, 0x08);                     ; 8
 8a2:   69 f4           if (c1 != c2) goto Label_0x8be;
; Menu option 8 selected do this (set split mode)
 8a4:   a3 ef           r26 = 243;                          ; 0xf3
; display "SplitA"
 8a6:   22 d5           show_Text_on_Display();             ; Parameter r26
 8a8:   a6 e7           r26 = 118;                          ; 0x76
; Set min/current menu item to split_mode_number_a, max menu item to 0x7e, buttons up/down call next_mode, previous_mode
 8aa:   a9 8f           Memory[[r28:r29]+25] = r26;
 8ac:   a0 91 f5 01     r26 = split_mode_number_a;          ; 0x01f5
 8b0:   a8 8f           Memory[[r28:r29]+24] = r26;
 8b2:   1c d5           show_Text_on_Display();             ; Parameter r26
 8b4:   ae e7           r26 = 126;                          ; 0x7e
 8b6:   aa 8f           Memory[[r28:r29]+26] = r26;
 8b8:   6b e0           r22 = 11;                           ; 0x0b
 8ba:   5a e0           r21 = 10;                           ; 0x0a
 8bc:   08 95           return;


; Referenced from offset 0x8a2 by brne
Label_0x8be:
 8be:   a9 30           cmp(r26, 0x09);                     ; 9
 8c0:   49 f4           if (c1 != c2) goto Label_0x8d4;
; Menu option 9 selected do this (set as favourite)
 8c2:   ab 8d           r26 = Memory[[r28:r29]+27];
 8c4:   a0 93 f7 01     favourite_mode = r26;               ; 0x01f7
 8c8:   0a 2e           r0 = r26;
 8ca:   bb 27           r27 = 0x00;                         ; 0
 8cc:   ab e0           r26 = 11;                           ; 0x0b
 8ce:   0e 94 f9 0c     write_to_eeprom();                  ; Parameter r26:r27 (address), r0 (value)
 8d2:   a4 c0           goto CallTable_4_Exit_Menu;

; Referenced from offset 0x8c0 by brne
Label_0x8d4:
 8d4:   aa 30           cmp(r26, 0x0a);                     ; 10
 8d6:   71 f4           if (c1 != c2) goto Label_0x8f4;
; Menu option 10 selected do this (set power level)
 8d8:   ac ec           r26 = 204;                          ; 0xcc
; display "Pwr Lev"
 8da:   08 d5           show_Text_on_Display();             ; Parameter r26
; Set menu min to 6b, max to 6d, current to comm_power-level (0x1f4-$81f4)
 8dc:   ab e6           r26 = 107;                          ; 0x6b
 8de:   a9 8f           Memory[[r28:r29]+25] = r26;
 8e0:   a0 91 f4 01     r26 = COMM_POWER_LEVEL;             ; 0x01f4
 8e4:   a6 59           r26 -= 150;                         ; 0x96, no carry
 8e6:   a8 8f           Memory[[r28:r29]+24] = r26;
 8e8:   01 d5           show_Text_on_Display();             ; Parameter r26
 8ea:   ad e6           r26 = 109;                          ; 0x6d
 8ec:   aa 8f           Memory[[r28:r29]+26] = r26;
; Set button menu to show_main_menu, ok to set_power_level
 8ee:   66 e0           r22 = 6;                            ; 0x06
 8f0:   5a e0           r21 = 10;                           ; 0x0a
 8f2:   08 95           return;


; Referenced from offset 0x8d6 by brne
Label_0x8f4:
 8f4:   ab 30           cmp(r26, 0x0b);                     ; 11
 8f6:   a9 f4           if (c1 != c2) goto Label_0x922;
; Menu option 11 selected do this (link slave unit) (send 0xe expect a 0x5 set r17[bit7-we-are-master])
 8f8:   ae e0           r26 = 14;                           ; 0x0e
 8fa:   0e 94 03 0d     write_r26_to_com_buffer();          ; Parameters r26
 8fe:   0e 94 17 0d     send_com_buffer_to_USART();
 902:   aa e0           r26 = 10;                           ; 0x0a
 904:   70 de           sleep();                            ; Parameter r26
; if we didn't get a command (r17[bit5-received-serial-command] is set), or the command is not "\5" Error 04
 906:   15 ff           skipif (bit(r17,5))
 908:   04 c0           goto Label_0x912;
 90a:   e0 91 20 02     r30 = com_input_buffer[0];          ; 0x0220
 90e:   e5 30           cmp(r30, 0x05);                     ; 5
 910:   11 f0           if (c1 == c2) goto Label_0x916;

; Referenced from offset 0x908 by rjmp
Label_0x912:
 912:   a4 e0           r26 = 4;                            ; 0x04
 914:   b0 d6           error_handler();                    ; CallTable_23_37_38_39

; Referenced from offset 0x910 by breq
Label_0x916:
 916:   a6 e0           r26 = 6;                            ; 0x06
 918:   a0 93 20 02     com_input_buffer[0] = r26;          ; 0x0220
; set r17[bit7-we-are-master]
 91c:   10 68           r17 |= 128;                         ; 0x80
; display "Linked" (master)
 91e:   a8 ef           r26 = 248;                          ; 0xf8
 920:   04 c0           goto Label_0x92a;

; Referenced from offset 0x8f6 by brne
Label_0x922:
 922:   ac 30           cmp(r26, 0x0c);                     ; 12
 924:   61 f4           if (c1 != c2) goto Label_0x93e;
; Menu option 12 selected do this (save settings)
 926:   3e d6           store_advanced_settings_from_memory_to_eeprom();
; display "Saved" "Press any Key"
 928:   a7 ef           r26 = 247;                          ; 0xf7

; Referenced from offset 0x920 by rjmp
Label_0x92a:
 92a:   e0 d4           show_Text_on_Display();             ; Parameter r26
 92c:   a4 e6           r26 = 100;                          ; 0x64
 92e:   de d4           show_Text_on_Display();             ; Parameter r26
 930:   a4 e0           r26 = 4;                            ; 0x04
 932:   d4 d4           show_Text_on_Display2();            ; Parameter r26
; Set button actions, they run calltable 0 which starts favourite mode
 934:   60 e0           r22 = 0;                            ; 0x00
 936:   30 e0           r19 = 0;                            ; 0x00
 938:   40 e0           r20 = 0;                            ; 0x00
 93a:   50 e0           r21 = 0;                            ; 0x00
 93c:   14 c0           goto Label_0x966;

; Referenced from offset 0x924 by brne
Label_0x93e:
 93e:   ad 30           cmp(r26, 0x0d);                     ; 13
 940:   21 f4           if (c1 != c2) goto Label_0x94a;
; Menu option 13 selected do this (reset settings)
 942:   26 d6           get_advanced_settings_from_firmware_defaults_to_memory();
 944:   2f d6           store_advanced_settings_from_memory_to_eeprom();
 946:   0c 94 3b 0d     goto reset_device;

; Referenced from offset 0x940 by brne
Label_0x94a:
 94a:   ae 30           cmp(r26, 0x0e);                     ; 14
 94c:   61 f4           if (c1 != c2) goto Label_0x966;
; Menu option 14 selected do this (show advanced menu)
 94e:   a2 ed           r26 = 210;                          ; 0xd2
 950:   a9 8f           Memory[[r28:r29]+25] = r26;
 952:   a8 8f           Memory[[r28:r29]+24] = r26;
; Set menu min/current to 210, max to 217
 954:   cb d4           show_Text_on_Display();             ; Parameter r26
 956:   a9 e6           r26 = 105;                          ; 0x69
; "Adjust"
 958:   c9 d4           show_Text_on_Display();             ; Parameter r26
 95a:   a9 ed           r26 = 217;                          ; 0xd9
 95c:   aa 8f           Memory[[r28:r29]+26] = r26;
; Set button actions, exit_advanced, next_menu_item, previous_menu_item, exit_menu
 95e:   67 e0           r22 = 7;                            ; 0x07
 960:   38 e0           r19 = 8;                            ; 0x08
 962:   49 e0           r20 = 9;                            ; 0x09
 964:   54 e0           r21 = 4;                            ; 0x04

; Referenced from offset 0x89e by rjmp
; Referenced from offset 0x93c by rjmp
; Referenced from offset 0x94c by brne
Label_0x966:
 966:   08 95           return;

CallTable_11_Show_split_mode_settings:
 968:   a8 8d           r26 = Memory[[r28:r29]+24];
; split mode settings menu, set menu min to 0x76, max to 0x7e, current to split_mode_number_b
 96a:   a0 93 f5 01     split_mode_number_a = r26;          ; 0x01f5
 96e:   a4 ef           r26 = 244;                          ; 0xf4
; display "SplitB"
 970:   bd d4           show_Text_on_Display();             ; Parameter r26
 972:   a6 e7           r26 = 118;                          ; 0x76
 974:   a9 8f           Memory[[r28:r29]+25] = r26;
 976:   a0 91 f6 01     r26 = split_mode_number_b;          ; 0x01f6
 97a:   a8 8f           Memory[[r28:r29]+24] = r26;
 97c:   b7 d4           show_Text_on_Display();             ; Parameter r26
 97e:   ae e7           r26 = 126;                          ; 0x7e
 980:   aa 8f           Memory[[r28:r29]+26] = r26;
; Set button ok to activate_split_mode, menu to show_main_menu
 982:   6c e0           r22 = 12;                           ; 0x0c
 984:   5a e0           r21 = 10;                           ; 0x0a
 986:   08 95           return;

CallTable_12_Activate_split_mode:
 988:   a8 8d           r26 = Memory[[r28:r29]+24];
 98a:   a0 93 f6 01     split_mode_number_b = r26;          ; 0x01f6
 98e:   af e7           r26 = 127;                          ; 0x7f
 990:   a8 8f           Memory[[r28:r29]+24] = r26;
 992:   ab 8f           Memory[[r28:r29]+27] = r26;
 994:   34 de           CallTable_18_select_new_mode();     ; Parameter r28:r29
 996:   42 d0           CallTable_4_Exit_Menu();
 998:   08 95           return;

CallTable_6_Set_Power_Level:
 99a:   a8 8d           r26 = Memory[[r28:r29]+24];
 99c:   aa 56           r26 -= 106;                         ; 0x6a, no carry
 99e:   a0 93 f4 01     COMM_POWER_LEVEL = r26;             ; 0x01f4
 9a2:   3c c0           goto CallTable_4_Exit_Menu;
CallTable_7_Edit_Advanced_Parameter:
 9a4:   a4 e6           r26 = 100;                          ; 0x64
 9a6:   a2 d4           show_Text_on_Display();             ; Parameter r26
; Edit the advanced option chosen in 0x78-$4078-current-menu-option 
 9a8:   28 8d           r18 = Memory[[r28:r29]+24];
 9aa:   22 5d           r18 -= 210;                         ; 0xd2, no carry
 9ac:   a8 ef           r26 = 248;                          ; 0xf8
 9ae:   b1 e0           r27 = 1;                            ; 0x01
 9b0:   a2 0f           r26 += r18;                         ; No carry
; get current value of the advanced parameter being edited 0x200 current get 0x201 min 0x202 max from table at 0x1fec
 9b2:   ec 91           r30 = Memory[r26:r27];
 9b4:   e0 93 00 02     value_of_advanced_parameter_being_edited = r30; ; 0x0200
 9b8:   43 d0           display_advanced_parameter_value();
 9ba:   ec ee           r30 = 236;                          ; 0xec
 9bc:   ff e1           r31 = 31;                           ; 0x1f
 9be:   22 0f           r18 *= 2;
 9c0:   e2 0f           r30 += r18;                         ; No carry
 9c2:   c8 95           r0 = Flash[r30:r31];
 9c4:   00 92 01 02     min_value_of_advanced_parameter_being_edited = r0; ; 0x0201
 9c8:   e3 95           r30++;
 9ca:   c8 95           r0 = Flash[r30:r31];
 9cc:   00 92 02 02     max_value_of_advanced_parameter_being_edited = r0; ; 0x0202
 9d0:   54 e0           r21 = 4;                            ; 0x04
 9d2:   64 e0           r22 = 4;                            ; 0x04
 9d4:   e8 8d           r30 = Memory[[r28:r29]+24];
 9d6:   e6 3d           cmp(r30, 0xd6);                     ; 214
; frequency advanced parameter works opposite for up/down
 9d8:   19 f0           if (c1 == c2) goto Label_0x9e0;
; Set button actions, advanced value down, advanced value up
 9da:   3d e0           r19 = 13;                           ; 0x0d
 9dc:   4e e0           r20 = 14;                           ; 0x0e
 9de:   08 95           return;


; Referenced from offset 0x9d8 by breq
Label_0x9e0:
 9e0:   3e e0           r19 = 14;                           ; 0x0e
 9e2:   4d e0           r20 = 13;                           ; 0x0d
 9e4:   08 95           return;


; Referenced from offset 0xa8a by rcall
CallTable_32_Set_Advanced_Parameter:
 9e6:   28 8d           r18 = Memory[[r28:r29]+24];
 9e8:   22 5d           r18 -= 210;                         ; 0xd2, no carry
 9ea:   a8 ef           r26 = 248;                          ; 0xf8
 9ec:   b1 e0           r27 = 1;                            ; 0x01
 9ee:   a2 0f           r26 += r18;                         ; No carry
 9f0:   20 91 00 02     r18 = value_of_advanced_parameter_being_edited; ; 0x0200
 9f4:   2c 93           Memory[r26:r27] = r18;
 9f6:   a8 3f           cmp(r26, 0xf8);                     ; 248
 9f8:   09 f4           if (c1 != c2) goto Label_0x9fc;
 9fa:   01 d0           CallTable_33_start_ramp();

; Referenced from offset 0x9f8 by brne
Label_0x9fc:
 9fc:   08 95           return;


; Referenced from offset 0x898 by rcall
; Referenced from offset 0x9fa by rcall
CallTable_33_start_ramp:
 9fe:   d0 93 a4 00     mode_switch_ramp_timer = r29;       ; 0x00a4
 a02:   d0 93 a4 01     mode_switch_ramp_timer_b = r29;     ; 0x01a4
 a06:   a7 e2           r26 = 39;                           ; 0x27
 a08:   a0 93 a3 00     mode_switch_ramp_select = r26;      ; 0x00a3
 a0c:   a0 93 a3 01     mode_switch_ramp_select_b = r26;    ; 0x01a3
 a10:   a0 91 f8 01     r26 = advanced_parameter_ramp_level; ; 0x01f8
; $409c-mode-switch-ramp-value-counter
 a14:   ac af           Memory[[r28:r29]+60] = r26;
; $419c-mode-switch-ramp-value-counter-copy
 a16:   a0 93 9c 01     mode_switch_ramp_value_counter_b = r26; ; 0x019c
 a1a:   08 95           return;


; Referenced from offset 0x89c by rcall
; Referenced from offset 0x8d2 by rjmp
; Referenced from offset 0x996 by rcall
; Referenced from offset 0x9a2 by rjmp
CallTable_4_Exit_Menu:
 a1c:   ab 8d           r26 = Memory[[r28:r29]+27];
 a1e:   ab 8f           Memory[[r28:r29]+27] = r26;
 a20:   a8 8f           Memory[[r28:r29]+24] = r26;
 a22:   64 d4           show_Text_on_Display();             ; Parameter r26
 a24:   a5 e0           r26 = 5;                            ; 0x05
; display "Selects Mode"
 a26:   5a d4           show_Text_on_Display2();            ; Parameter r26
 a28:   a0 91 f3 01     r26 = current_top_mode;             ; 0x01f3
 a2c:   aa 8f           Memory[[r28:r29]+26] = r26;
 a2e:   a6 e7           r26 = 118;                          ; 0x76
 a30:   a9 8f           Memory[[r28:r29]+25] = r26;
 a32:   a2 e0           r26 = 2;                            ; 0x02
 a34:   ad 87           Memory[[r28:r29]+13] = r26;
; Set button actions, menu=show_main_menu, ok=0x1, up=switch_next_mode, down=switch_previous_mode
 a36:   30 e1           r19 = 16;                           ; 0x10
 a38:   41 e1           r20 = 17;                           ; 0x11
 a3a:   61 e0           r22 = 1;                            ; 0x01
 a3c:   5a e0           r21 = 10;                           ; 0x0a
 a3e:   08 95           return;


; Referenced from offset 0x9b8 by rcall
; Referenced from offset 0xa88 by rcall
display_advanced_parameter_value:
 a40:   e0 91 00 02     r30 = value_of_advanced_parameter_being_edited; ; 0x0200
 a44:   f8 8d           r31 = Memory[[r28:r29]+24];
; menu 0xd2 is "ramp level"
 a46:   f2 3d           cmp(r31, 0xd2);                     ; 210
 a48:   09 f4           if (c1 != c2) goto Label_0xa4c;
 a4a:   eb 59           r30 -= 155;                         ; 0x9b, no carry

; Referenced from offset 0xa48 by brne
Label_0xa4c:
 a4c:   f4 3d           cmp(r31, 0xd4);                     ; 212
; menu 0xd4 is "depth"
 a4e:   09 f4           if (c1 != c2) goto Label_0xa52;
 a50:   eb 59           r30 -= 155;                         ; 0x9b, no carry

; Referenced from offset 0xa4e by brne
Label_0xa52:
 a52:   f6 3d           cmp(r31, 0xd6);                     ; 214
; menu 0xd6 is "freq"
 a54:   29 f4           if (c1 != c2) goto Label_0xa60;
 a56:   ae 2f           r26 = r30;
 a58:   bb 27           r27 = 0x00;                         ; 0
 a5a:   fe e0           r31 = 14;                           ; 0x0e
 a5c:   e6 ea           r30 = 166;                          ; 0xa6
 a5e:   ae d4           divide_word();                      ; Parameter r26:r27 r30:r31: r30:r31 /= r26:r27, r26:r27 = r30:r31 % r26:r27

; Referenced from offset 0xa54 by brne
Label_0xa60:
 a60:   f9 e0           r31 = 9;                            ; 0x09
 a62:   2a d4           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
 a64:   08 95           return;

CallTable_13_advanced_menu_prev_item:
 a66:   e0 91 00 02     r30 = value_of_advanced_parameter_being_edited; ; 0x0200
 a6a:   fa e0           r31 = 10;                           ; 0x0a
 a6c:   e4 36           cmp(r30, 0x64);                     ; 100
 a6e:   08 f4           if (!Carry) goto Label_0xa72;
 a70:   f5 e0           r31 = 5;                            ; 0x05

; Referenced from offset 0xa6e by brcc
Label_0xa72:
 a72:   ea 30           cmp(r30, 0x0a);                     ; 10
 a74:   08 f4           if (!Carry) goto Label_0xa78;
 a76:   f1 e0           r31 = 1;                            ; 0x01

; Referenced from offset 0xa74 by brcc
Label_0xa78:
 a78:   ef 0f           r30 += r31;                         ; No carry
 a7a:   48 f0           if (Carry) goto Label_0xa8e;
 a7c:   b0 91 02 02     r27 = max_value_of_advanced_parameter_being_edited; ; 0x0202
 a80:   eb 17           cmp(r30, r27);
 a82:   28 f4           if (!Carry) goto Label_0xa8e;

; Referenced from offset 0xa92 by rjmp
; Referenced from offset 0xab0 by brcc
; Referenced from offset 0xab6 by rjmp
Label_0xa84:
 a84:   e0 93 00 02     value_of_advanced_parameter_being_edited = r30; ; 0x0200
 a88:   db df           display_advanced_parameter_value();
 a8a:   ad df           CallTable_32_Set_Advanced_Parameter();
 a8c:   08 95           return;


; Referenced from offset 0xa7a by brcs
; Referenced from offset 0xa82 by brcc
; Referenced from offset 0xaa8 by brcs
Label_0xa8e:
 a8e:   e0 91 02 02     r30 = max_value_of_advanced_parameter_being_edited; ; 0x0202
 a92:   f8 cf           goto Label_0xa84;
CallTable_14_advanced_menu_next_item:
 a94:   e0 91 00 02     r30 = value_of_advanced_parameter_being_edited; ; 0x0200
 a98:   fa e0           r31 = 10;                           ; 0x0a
 a9a:   ee 36           cmp(r30, 0x6e);                     ; 110
 a9c:   08 f4           if (!Carry) goto Label_0xaa0;
 a9e:   f5 e0           r31 = 5;                            ; 0x05

; Referenced from offset 0xa9c by brcc
Label_0xaa0:
 aa0:   ef 30           cmp(r30, 0x0f);                     ; 15
 aa2:   08 f4           if (!Carry) goto Label_0xaa6;
 aa4:   f1 e0           r31 = 1;                            ; 0x01

; Referenced from offset 0xaa2 by brcc
Label_0xaa6:
 aa6:   ef 1b           r30 -= r31;                         ; No carry
 aa8:   90 f3           if (Carry) goto Label_0xa8e;
 aaa:   b0 91 01 02     r27 = min_value_of_advanced_parameter_being_edited; ; 0x0201
 aae:   eb 17           cmp(r30, r27);
 ab0:   48 f7           if (!Carry) goto Label_0xa84;
 ab2:   e0 91 01 02     r30 = min_value_of_advanced_parameter_being_edited; ; 0x0201
 ab6:   e6 cf           goto Label_0xa84;
CallTable_26:     ; Parameter r26
 ab8:   ac e8           r26 = 140;                          ; 0x8c

; Referenced from offset 0xac4 by brcs
Label_0xaba:
 aba:   b0 e0           r27 = 0;                            ; 0x00
 abc:   2c 91           r18 = Memory[r26:r27];
 abe:   b1 e0           r27 = 1;                            ; 0x01
 ac0:   2d 93           Memory[[r26:r27]++] = r18;
 ac2:   a0 3c           cmp(r26, 0xc0);                     ; 192
 ac4:   d0 f3           if (Carry) goto Label_0xaba;
 ac6:   08 95           return;

copy_module_parameters_channel_b_to_channel_a:     ; CallTable_27
 ac8:   ac e8           r26 = 140;                          ; 0x8c

; Referenced from offset 0xad4 by brcs
Label_0xaca:
 aca:   b1 e0           r27 = 1;                            ; 0x01
 acc:   2c 91           r18 = Memory[r26:r27];
 ace:   b0 e0           r27 = 0;                            ; 0x00
 ad0:   2d 93           Memory[[r26:r27]++] = r18;
 ad2:   a0 3c           cmp(r26, 0xc0);                     ; 192
 ad4:   d0 f3           if (Carry) goto Label_0xaca;
 ad6:   08 95           return;

copy_module_parameters_channel_a_to_channel_b:     ; CallTable_25
 ad8:   ac e8           r26 = 140;                          ; 0x8c
 ada:   b0 e0           r27 = 0;                            ; 0x00

; Referenced from offset 0xaea by brcs
Label_0xadc:
 adc:   2c 91           r18 = Memory[r26:r27];
 ade:   b1 e0           r27 = 1;                            ; 0x01
 ae0:   2c 90           r2 = Memory[r26:r27];
 ae2:   2c 93           Memory[r26:r27] = r18;
 ae4:   b0 e0           r27 = 0;                            ; 0x00
 ae6:   2d 92           Memory[[r26:r27]++] = r2;
 ae8:   a0 3c           cmp(r26, 0xc0);                     ; 192
 aea:   c0 f3           if (Carry) goto Label_0xadc;
 aec:   08 95           return;

display_lcd_parameters_as_char:     ; CallTable_19
 aee:   e0 91 80 01     r30 = write_lcd_parameter;          ; 0x0180
 af2:   f0 91 81 01     r31 = write_lcd_position;           ; 0x0181
 af6:   c0 d3           display_char_r30_at_position_r31_on_display(); ; Parameter r30, r31
 af8:   08 95           return;

display_lcd_parameters_as_int:     ; CallTable_20
 afa:   e0 91 80 01     r30 = write_lcd_parameter;          ; 0x0180
 afe:   f0 91 81 01     r31 = write_lcd_position;           ; 0x0181
 b02:   da d3           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
 b04:   08 95           return;

display_lcd_parameters_as_string:     ; CallTable_21
 b06:   a0 91 80 01     r26 = write_lcd_parameter;          ; 0x0180
 b0a:   f0 d3           show_Text_on_Display();             ; Parameter r26
 b0c:   08 95           return;

set_lcd_parameters_as_position:     ; CallTable_35
 b0e:   f0 91 80 01     r31 = write_lcd_parameter;          ; 0x0180
 b12:   72 d3           set_lcd_position();                 ; Parameter r31
 b14:   08 95           return;

set_lcd_parameters_as_position_redundant:     ; CallTable_36
 b16:   e0 91 80 01     r30 = write_lcd_parameter;          ; 0x0180
 b1a:   6e d3           set_lcd_position();                 ; Parameter r31
 b1c:   08 95           return;


; Referenced from offset 0x58c by rcall
; Referenced from offset 0x16c0 by rcall
; Referenced from offset 0x16c6 by rcall
; Referenced from offset 0x16cc by rcall
; Referenced from offset 0x1788 by rcall
enable_ADC_and_set_r17[3]:     ; CallTable_34
 b1e:   a1 e0           r26 = 1;                            ; 0x01
; start an ADC conversion with interrupt, set r17[bit3-adc-running]
 b20:   a7 b9           IO[ADMUX] = r26;
 b22:   ab ec           r26 = 203;                          ; 0xcb
 b24:   a6 b9           IO[ADCSR] = r26;
 b26:   18 60           r17 |= 8;                           ; 0x08
 b28:   08 95           return;


; Referenced from offset 0xb78 by rcall
; Referenced from offset 0x17a2 by rcall
; Referenced from offset 0x17ac by rcall
; Referenced from offset 0x18e0 by rcall
prng_next:     ; Result in r26 and X[18]
 b2a:   2f 93           push    r18
 b2c:   cf 93           push    r28
; gather all the input ADC lowest bits to make something a bit random
 b2e:   c1 e6           r28 = 97;                           ; 0x61

; Referenced from offset 0xb38 by brcs
Label_0xb30:
 b30:   29 91           r18 = Memory[[r28:r29]++];
 b32:   27 95           r18 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
 b34:   a7 95           r26 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
 b36:   c8 36           cmp(r28, 0x68);                     ; 104
 b38:   d8 f3           if (Carry) goto Label_0xb30;
 b3a:   c0 e6           r28 = 96;                           ; 0x60
; 0x72-$4072 last random number
 b3c:   2a 89           r18 = Memory[[r28:r29]+18];
 b3e:   26 95           r18 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 b40:   a2 0f           r26 += r18;                         ; No carry
; bug? I think they wanted to use PIND so they get more audio data into the entropy mix?
 b42:   26 b3           r18 = IO[PINB];
 b44:   22 95           r18 = ((r18 & 0xf0) >> 4) | ((r18 & 0x0f) << 4); ; swap nibbles
 b46:   a2 0f           r26 += r18;                         ; No carry
 b48:   2c b5           r18 = IO[TCNT1L];
 b4a:   a2 0f           r26 += r18;                         ; No carry
 b4c:   a2 ff           skipif (bit(r26,2))
 b4e:   a2 95           r26 = ((r26 & 0xf0) >> 4) | ((r26 & 0x0f) << 4); ; swap nibbles
 b50:   aa 8b           Memory[[r28:r29]+18] = r26;
 b52:   cf 91           pop     r28
 b54:   2f 91           pop     r18
 b56:   08 95           return;


; Referenced from offset 0x48e by rcall
; Referenced from offset 0x49a by rcall
; Referenced from offset 0x4aa by rcall
; Referenced from offset 0xdba by rcall
r26_is_random_between_mem0x8D_and_mem0x8E:
 b58:   bf 93           push    r27
 b5a:   2f 93           push    r18
 b5c:   ef 93           push    r30
 b5e:   ff 93           push    r31
 b60:   ad e8           r26 = 141;                          ; 0x8d
 b62:   bb 27           r27 = 0x00;                         ; 0
; 0x8D-0x408D-random-min
 b64:   2d 91           r18 = Memory[[r26:r27]++];
; 0x8E-0x408E-random-max
 b66:   bc 91           r27 = Memory[r26:r27];
 b68:   fb 2f           r31 = r27;
 b6a:   f2 1b           r31 -= r18;                         ; No carry
 b6c:   10 f4           if (!Carry) goto Label_0xb72;
 b6e:   af e0           r26 = 15;                           ; 0x0f
 b70:   82 d5           error_handler();                    ; CallTable_23_37_38_39

; Referenced from offset 0xb6c by brcc
Label_0xb72:
 b72:   f3 95           r31++;
 b74:   ef ef           r30 = 0xff;                         ; 255
 b76:   0a d4           divide();                           ; Parameter r31 r30: r30 /= r31, r31 = r30 % r31

; Referenced from offset 0xb86 by brcc
Label_0xb78:
 b78:   d8 df           prng_next();                        ; Result in r26 and X[18]
 b7a:   fe 2f           r31 = r30;
 b7c:   ea 2f           r30 = r26;
 b7e:   06 d4           divide();                           ; Parameter r31 r30: r30 /= r31, r31 = r30 % r31
 b80:   e2 0f           r30 += r18;                         ; No carry
 b82:   eb 17           cmp(r30, r27);
 b84:   09 f0           if (c1 == c2) goto Label_0xb88;
 b86:   c0 f7           if (!Carry) goto Label_0xb78;

; Referenced from offset 0xb84 by breq
Label_0xb88:
 b88:   ae 2f           r26 = r30;
 b8a:   ff 91           pop     r31
 b8c:   ef 91           pop     r30
 b8e:   2f 91           pop     r18
 b90:   bf 91           pop     r27
 b92:   08 95           return;


; Referenced from offset 0xb94 by rjmp
endless_loop:
 b94:   ff cf           goto endless_loop;
rjmp_main:
 b96:   5e ca           goto Main;

; Referenced from offset 0x10c by rcall
; Referenced from offset 0x27c by rcall
; Referenced from offset 0x30c by rcall
; Referenced from offset 0x45a by rcall
; Referenced from offset 0x616 by rcall
; Referenced from offset 0x64e by rcall
; Referenced from offset 0x656 by rcall
; Referenced from offset 0x660 by rcall
; Referenced from offset 0x668 by rcall
; Referenced from offset 0x672 by rcall
; Referenced from offset 0x67a by rcall
; Referenced from offset 0x684 by rcall
; Referenced from offset 0x68c by rcall
; Referenced from offset 0x696 by rcall
; Referenced from offset 0x69e by rcall
; Referenced from offset 0x6ac by rcall
; Referenced from offset 0x6c6 by rcall
; Referenced from offset 0x6e2 by rcall
; Referenced from offset 0x6fe by rcall
; Referenced from offset 0x708 by rcall
; Referenced from offset 0x712 by rcall
; Referenced from offset 0x71c by rcall
; Referenced from offset 0x730 by rcall
; Referenced from offset 0x738 by rcall
; Referenced from offset 0x742 by rcall
; Referenced from offset 0x74c by rcall
; Referenced from offset 0x75c by rcall
CallTable_22_start_module:
 b98:   ef 93           push    r30
 b9a:   ff 93           push    r31
 b9c:   cf 93           push    r28
 b9e:   e0 91 07 02     r30 = debug_show_module_calltable_22; ; 0x0207
 ba2:   ee 23           (r30 == 0) || (r30 < 0);            ; test r30
 ba4:   19 f0           if (c1 == c2) goto Label_0xbac;
 ba6:   ea 2f           r30 = r26;
 ba8:   fd e0           r31 = 13;                           ; 0x0d
 baa:   86 d3           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)

; Referenced from offset 0xba4 by breq
Label_0xbac:
 bac:   a0 38           cmp(r26, 0x80);                     ; 128
 bae:   38 f0           if (Carry) goto calltable_22_internal_modules;
 bb0:   a0 3c           cmp(r26, 0xc0);                     ; 192
 bb2:   c0 f1           if (Carry) goto calltable_22_eeprom_modules;
 bb4:   a0 3e           cmp(r26, 0xe0);                     ; 224
 bb6:   10 f0           if (Carry) goto Label_0xbbc;
; unrecognised module
 bb8:   aa e0           r26 = 10;                           ; 0x0a
 bba:   5d c5           goto error_handler;

; Referenced from offset 0xbb6 by brcs
Label_0xbbc:
 bbc:   6a c0           goto calltable_22_scratchpad_module_0xc0-0xdf;

; Referenced from offset 0xbae by brcs
calltable_22_internal_modules:
 bbe:   fc e1           r31 = 28;                           ; 0x1c
 bc0:   ee e3           r30 = 62;                           ; 0x3e
 bc2:   ea 0f           r30 += r26;                         ; No carry
; Grab a byte (current module) based on current mode (r18:r0) double it, add it to 0x2000 (or 0x2200)
 bc4:   c8 95           r0 = Flash[r30:r31];
 bc6:   e0 e0           r30 = 0;                            ; 0x00
 bc8:   0e 16           cmp(r0, r30);
 bca:   f0 e2           r31 = 32;                           ; 0x20
 bcc:   08 f4           if (!Carry) goto Label_0xbd0;
; r26 was <128, look at r0=1c3e+(r26).  if 0 then 2000 else 2200,  double r0 and add to 2000 or 2200 also r30:31 is 01c3e+r0
 bce:   f2 e2           r31 = 34;                           ; 0x22

; Referenced from offset 0xbcc by brcc
Label_0xbd0:
 bd0:   e0 e0           r30 = 0;                            ; 0x00
 bd2:   22 27           r18 = 0x00;                         ; 0
 bd4:   88 94           clc
 bd6:   00 1c           r0 += r0;                           ; With carry
 bd8:   22 1f           r18 += r18;                         ; With carry
 bda:   e0 0d           r30 += r0;                          ; No carry
 bdc:   f2 1f           r31 += r18;                         ; With carry

; Referenced from offset 0xc22 by rjmp
Label_0xbde:
 bde:   b2 e0           r27 = 2;                            ; 0x02
; r30:r31 now point to module (example 0x2070 for toggle (mode 18))
 be0:   a8 e1           r26 = 24;                           ; 0x18
; copy r30:r31 to 0x218, if byte &e0!-0 ... lots of stuff
 be2:   c8 95           r0 = Flash[r30:r31];
 be4:   0d 92           Memory[[r26:r27]++] = r0;
 be6:   c0 2d           r28 = r0;
 be8:   c0 7e           r28 &= 224;                         ; 0xe0
 bea:   cc 23           (r28 == 0) || (r28 < 0);            ; test r28
 bec:   09 f4           if (c1 != c2) goto Label_0xbf0;
 bee:   7b c0           goto Label_0xce6;

; Referenced from offset 0xbec by brne
Label_0xbf0:
 bf0:   c0 2d           r28 = r0;
 bf2:   c0 7f           r28 &= 240;                         ; 0xf0
 bf4:   c0 35           cmp(r28, 0x50);                     ; 80
 bf6:   2c 2f           r18 = r28;
 bf8:   61 f0           if (c1 == c2) goto Label_0xc12;
 bfa:   c0 7e           r28 &= 224;                         ; 0xe0
 bfc:   c0 32           cmp(r28, 0x20);                     ; 32
 bfe:   39 f4           if (c1 != c2) goto Label_0xc0e;
 c00:   c0 2d           r28 = r0;
 c02:   cc 71           r28 &= 28;                          ; 0x1c
 c04:   c6 95           r28 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 c06:   c6 95           r28 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 c08:   c3 95           r28++;
 c0a:   2c 2e           r2 = r28;
 c0c:   03 c0           goto copy_r28_bytes_from_module_to_0x218plus;

; Referenced from offset 0xbfe by brne
Label_0xc0e:
 c0e:   c1 e0           r28 = 1;                            ; 0x01
 c10:   01 c0           goto copy_r28_bytes_from_module_to_0x218plus;

; Referenced from offset 0xbf8 by breq
Label_0xc12:
 c12:   c2 e0           r28 = 2;                            ; 0x02

; Referenced from offset 0xc0c by rjmp
; Referenced from offset 0xc10 by rjmp
; Referenced from offset 0xc1c by brne
copy_r28_bytes_from_module_to_0x218plus:
 c14:   31 96           [r31:r30]++;
 c16:   c8 95           r0 = Flash[r30:r31];
 c18:   0d 92           Memory[[r26:r27]++] = r0;
 c1a:   ca 95           r28--;
 c1c:   d9 f7           if (c1 != c2) goto copy_r28_bytes_from_module_to_0x218plus;
 c1e:   31 96           [r31:r30]++;
 c20:   66 d0           CallTable_30_handle_module_instruction();
 c22:   dd cf           goto Label_0xbde;

; Referenced from offset 0xbb2 by brcs
calltable_22_eeprom_modules:
 c24:   c0 e4           r28 = 64;                           ; 0x40
 c26:   0c 2e           r0 = r28;
 c28:   a0 3a           cmp(r26, 0xa0);                     ; 160
 c2a:   30 f0           if (Carry) goto module_0x80-0x9f;
; 0xa0 to 0xbf
 c2c:   c0 e2           r28 = 32;                           ; 0x20
 c2e:   0c 2e           r0 = r28;
 c30:   c1 e0           r28 = 1;                            ; 0x01
 c32:   cf bb           IO[EEARH] = r28;
 c34:   a0 5a           r26 -= 160;                         ; 0xa0, no carry
 c36:   02 c0           goto Label_0xc3c;

; Referenced from offset 0xc2a by brcs
module_0x80-0x9f:
 c38:   df bb           IO[EEARH] = r29;
 c3a:   a0 56           r26 -= 96;                          ; 0x60, no carry

; Referenced from offset 0xc36 by rjmp
Label_0xc3c:
 c3c:   ae bb           IO[EEAR] = r26;
; if 0xa0 to 0xbf look at 0100-011f otherwise 0x80-0x9f look at 0020 to 003f
 c3e:   e0 9a           IO_BIT[EECR,0] = true;              ; 0x01 = 1
 c40:   ed b3           r30 = IO[EEDR];
; get the byte and add 0x120(0xa0-0xbf) or 0x40(0x80-0x9f) then do same stuff as internal modules
 c42:   e0 0d           r30 += r0;                          ; No carry

; Referenced from offset 0xc90 by rjmp
Label_0xc44:
 c44:   b2 e0           r27 = 2;                            ; 0x02
 c46:   a8 e1           r26 = 24;                           ; 0x18
 c48:   ee bb           IO[EEAR] = r30;
 c4a:   e0 9a           IO_BIT[EECR,0] = true;              ; 0x01 = 1
 c4c:   0d b2           r0 = IO[EEDR];
 c4e:   0d 92           Memory[[r26:r27]++] = r0;
 c50:   c0 2d           r28 = r0;
 c52:   c0 7e           r28 &= 224;                         ; 0xe0
 c54:   cc 23           (r28 == 0) || (r28 < 0);            ; test r28
 c56:   09 f4           if (c1 != c2) goto Label_0xc5a;
calltable_22_return:
 c58:   46 c0           goto Label_0xce6;

; Referenced from offset 0xc56 by brne
Label_0xc5a:
 c5a:   c0 2d           r28 = r0;
 c5c:   c0 7f           r28 &= 240;                         ; 0xf0
 c5e:   c0 35           cmp(r28, 0x50);                     ; 80
 c60:   2c 2f           r18 = r28;
 c62:   61 f0           if (c1 == c2) goto Label_0xc7c;
 c64:   c0 7e           r28 &= 224;                         ; 0xe0
 c66:   c0 32           cmp(r28, 0x20);                     ; 32
 c68:   39 f4           if (c1 != c2) goto Label_0xc78;
 c6a:   c0 2d           r28 = r0;
 c6c:   cc 71           r28 &= 28;                          ; 0x1c
 c6e:   c6 95           r28 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 c70:   c6 95           r28 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 c72:   c3 95           r28++;
 c74:   2c 2e           r2 = r28;
 c76:   03 c0           goto Label_0xc7e;

; Referenced from offset 0xc68 by brne
Label_0xc78:
 c78:   c1 e0           r28 = 1;                            ; 0x01
 c7a:   01 c0           goto Label_0xc7e;

; Referenced from offset 0xc62 by breq
Label_0xc7c:
 c7c:   c2 e0           r28 = 2;                            ; 0x02

; Referenced from offset 0xc76 by rjmp
; Referenced from offset 0xc7a by rjmp
; Referenced from offset 0xc8a by brne
Label_0xc7e:
 c7e:   e3 95           r30++;
 c80:   ee bb           IO[EEAR] = r30;
 c82:   e0 9a           IO_BIT[EECR,0] = true;              ; 0x01 = 1
 c84:   0d b2           r0 = IO[EEDR];
 c86:   0d 92           Memory[[r26:r27]++] = r0;
 c88:   ca 95           r28--;
 c8a:   c9 f7           if (c1 != c2) goto Label_0xc7e;
 c8c:   30 d0           CallTable_30_handle_module_instruction();
 c8e:   e3 95           r30++;
 c90:   d9 cf           goto Label_0xc44;

; Referenced from offset 0xbbc by rjmp
calltable_22_scratchpad_module_0xc0-0xdf:
 c92:   a0 5c           r26 -= 192;                         ; 0xc0, no carry
 c94:   f1 e0           r31 = 1;                            ; 0x01
 c96:   e0 ed           r30 = 208;                          ; 0xd0
 c98:   ea 0f           r30 += r26;                         ; No carry
; mem[0x1d0_space_for_user_routine_scratchpad_b+(module-0xc0)]+0xc0_space_for_user_routine_scratchpad_a is place to look for module data
 c9a:   e0 81           r30 = Memory[r30:r31];
 c9c:   ff 27           r31 = 0x00;                         ; 0
 c9e:   c0 ec           r28 = 192;                          ; 0xc0
 ca0:   ec 0f           r30 += r28;                         ; No carry
 ca2:   fd 1f           r31 += r29;                         ; With carry

; Referenced from offset 0xce4 by rjmp
Label_0xca4:
 ca4:   b2 e0           r27 = 2;                            ; 0x02
 ca6:   a8 e1           r26 = 24;                           ; 0x18
 ca8:   00 80           r0 = Memory[r30:r31];
 caa:   0d 92           Memory[[r26:r27]++] = r0;
 cac:   c0 2d           r28 = r0;
 cae:   c0 7e           r28 &= 224;                         ; 0xe0
 cb0:   cc 23           (r28 == 0) || (r28 < 0);            ; test r28
 cb2:   c9 f0           if (c1 == c2) goto Label_0xce6;
 cb4:   c0 2d           r28 = r0;
 cb6:   c0 7f           r28 &= 240;                         ; 0xf0
 cb8:   c0 35           cmp(r28, 0x50);                     ; 80
 cba:   2c 2f           r18 = r28;
 cbc:   61 f0           if (c1 == c2) goto Label_0xcd6;
 cbe:   c0 7e           r28 &= 224;                         ; 0xe0
 cc0:   c0 32           cmp(r28, 0x20);                     ; 32
 cc2:   39 f4           if (c1 != c2) goto Label_0xcd2;
 cc4:   c0 2d           r28 = r0;
 cc6:   cc 71           r28 &= 28;                          ; 0x1c
 cc8:   c6 95           r28 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 cca:   c6 95           r28 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 ccc:   c3 95           r28++;
 cce:   2c 2e           r2 = r28;
 cd0:   03 c0           goto Label_0xcd8;

; Referenced from offset 0xcc2 by brne
Label_0xcd2:
 cd2:   c1 e0           r28 = 1;                            ; 0x01
 cd4:   01 c0           goto Label_0xcd8;

; Referenced from offset 0xcbc by breq
Label_0xcd6:
 cd6:   c2 e0           r28 = 2;                            ; 0x02

; Referenced from offset 0xcd0 by rjmp
; Referenced from offset 0xcd4 by rjmp
Label_0xcd8:
 cd8:   31 96           [r31:r30]++;

; Referenced from offset 0xce0 by brne
Label_0xcda:
 cda:   01 90           r0 = Memory[[r30:r31]++];
 cdc:   0d 92           Memory[[r26:r27]++] = r0;
 cde:   ca 95           r28--;
 ce0:   e1 f7           if (c1 != c2) goto Label_0xcda;
 ce2:   05 d0           CallTable_30_handle_module_instruction();
 ce4:   df cf           goto Label_0xca4;

; Referenced from offset 0xbee by rjmp
; Referenced from offset 0xc58 by rjmp
; Referenced from offset 0xcb2 by breq
Label_0xce6:
 ce6:   cf 91           pop     r28
 ce8:   ff 91           pop     r31
 cea:   ef 91           pop     r30
 cec:   08 95           return;


; Referenced from offset 0xc20 by rcall
; Referenced from offset 0xc8c by rcall
; Referenced from offset 0xce2 by rcall
CallTable_30_handle_module_instruction:
 cee:   ef 93           push    r30
 cf0:   ff 93           push    r31
 cf2:   2f 93           push    r18
 cf4:   2f 92           push    r2
 cf6:   e8 94           clt
 cf8:   e0 91 85 00     r30 = mem_unknown_0x85-$4085;       ; 0x0085
 cfc:   ee 23           (r30 == 0) || (r30 < 0);            ; test r30
 cfe:   09 f4           if (c1 != c2) goto Label_0xd02;
 d00:   a0 c0           goto calltable_30_exit;

; Referenced from offset 0xcfe by brne
Label_0xd02:
 d02:   e0 ff           skipif (bit(r30,0))
 d04:   68 94           set

; Referenced from offset 0xe40 by rjmp
Label_0xd06:
 d06:   a8 e1           r26 = 24;                           ; 0x18
 d08:   b2 e0           r27 = 2;                            ; 0x02
; look at instructions at 0x218plus
 d0a:   cc 91           r28 = Memory[r26:r27];
 d0c:   c7 fd           skipif (!bit(r28,7))
 d0e:   84 c0           goto instruction_0x8X-0xFF_set_byte;
 d10:   c0 7e           r28 &= 224;                         ; 0xe0
 d12:   c0 34           cmp(r28, 0x40);                     ; 64
 d14:   09 f4           if (c1 != c2) goto Label_0xd18;
 d16:   1f c0           goto instruction_0x40-0x5F;

; Referenced from offset 0xd14 by brne
Label_0xd18:
 d18:   c0 32           cmp(r28, 0x20);                     ; 32
 d1a:   09 f4           if (c1 != c2) goto instruction_0x00-0x1F_or_0x60_0x7F;
 d1c:   66 c0           goto instruction_0x20-0x3F_copy_set_of_bytes;

; Referenced from offset 0xd1a by brne
instruction_0x00-0x1F_or_0x60_0x7F:
 d1e:   cc 91           r28 = Memory[r26:r27];
 d20:   c4 ff           skipif (bit(r28,4))
 d22:   18 c0           goto instruction_0x00-0x0F_or_0x60-0x6F_do_nothing;
instruction_0x10-0x1F_or_0x70-0x7F_compare_memory_with_Store_0x8c_set_r15[bit1]:
 d24:   cd 91           r28 = Memory[[r26:r27]++];
; this is really a compare and jump as we'll jump to whatever module is specified in memory location x84
 d26:   c3 70           r28 &= 3;                           ; 0x03
 d28:   2c 2e           r2 = r28;
 d2a:   ac 91           r26 = Memory[r26:r27];
 d2c:   b2 2d           r27 = r2;
 d2e:   ac 38           cmp(r26, 0x8c);                     ; 140
 d30:   bd 07           cmp(r27, r29);                      ; with carry
 d32:   28 f0           if (Carry) goto Label_0xd3e;
 d34:   a0 3c           cmp(r26, 0xc0);                     ; 192
 d36:   bd 07           cmp(r27, r29);                      ; with carry
 d38:   10 f4           if (!Carry) goto Label_0xd3e;
 d3a:   0e f4           if (T == 0) goto Label_0xd3e;
 d3c:   b1 e0           r27 = 1;                            ; 0x01

; Referenced from offset 0xd32 by brcs
; Referenced from offset 0xd38 by brcc
; Referenced from offset 0xd3a by brtc
Label_0xd3e:
 d3e:   cc 91           r28 = Memory[r26:r27];
 d40:   ac e8           r26 = 140;                          ; 0x8c
 d42:   b0 e0           r27 = 0;                            ; 0x00
 d44:   0e f4           if (T == 0) goto Label_0xd48;
 d46:   b1 e0           r27 = 1;                            ; 0x01

; Referenced from offset 0xd44 by brtc
Label_0xd48:
 d48:   ac 91           r26 = Memory[r26:r27];
 d4a:   ac 17           cmp(r26, r28);
 d4c:   11 f4           if (c1 != c2) goto Label_0xd52;
 d4e:   a2 e0           r26 = 2;                            ; 0x02
; 0x0f-$400f set r15[bit1-start-new-module-from-0084]
 d50:   fa 2a           r15 |= r26;

; Referenced from offset 0xd4c by brne
Label_0xd52:
 d52:   70 c0           goto Label_0xe34;

; Referenced from offset 0xd22 by rjmp
instruction_0x00-0x0F_or_0x60-0x6F_do_nothing:
 d54:   6f c0           goto Label_0xe34;

; Referenced from offset 0xd16 by rjmp
instruction_0x40-0x5F:
 d56:   cc 91           r28 = Memory[r26:r27];
 d58:   cc 71           r28 &= 28;                          ; 0x1c
 d5a:   2c 2f           r18 = r28;
 d5c:   cd 91           r28 = Memory[[r26:r27]++];
 d5e:   c3 70           r28 &= 3;                           ; 0x03
 d60:   2c 2e           r2 = r28;
 d62:   ac 91           r26 = Memory[r26:r27];
 d64:   b2 2d           r27 = r2;
 d66:   ac 38           cmp(r26, 0x8c);                     ; 140
 d68:   bd 07           cmp(r27, r29);                      ; with carry
 d6a:   28 f0           if (Carry) goto Label_0xd76;
 d6c:   a0 3c           cmp(r26, 0xc0);                     ; 192
 d6e:   bd 07           cmp(r27, r29);                      ; with carry
 d70:   10 f4           if (!Carry) goto Label_0xd76;
 d72:   0e f4           if (T == 0) goto Label_0xd76;
 d74:   b1 e0           r27 = 1;                            ; 0x01

; Referenced from offset 0xd6a by brcs
; Referenced from offset 0xd70 by brcc
; Referenced from offset 0xd72 by brtc
Label_0xd76:
 d76:   c2 2f           r28 = r18;
 d78:   c0 30           cmp(r28, 0);
 d7a:   09 f4           if (c1 != c2) goto Label_0xd7e;
 d7c:   23 c0           goto instruction_0x40-0x43_toStore_0x8c;

; Referenced from offset 0xd7a by brne
Label_0xd7e:
 d7e:   c4 30           cmp(r28, 0x04);                     ; 4
 d80:   09 f4           if (c1 != c2) goto Label_0xd84;
 d82:   27 c0           goto instruction_0x44-0x47_fromStore_0x8c;

; Referenced from offset 0xd80 by brne
Label_0xd84:
 d84:   c8 30           cmp(r28, 0x08);                     ; 8
 d86:   09 f4           if (c1 != c2) goto Label_0xd8a;
 d88:   2b c0           goto instruction_0x48-0x4a_div2;

; Referenced from offset 0xd86 by brne
Label_0xd8a:
 d8a:   cc 30           cmp(r28, 0x0c);                     ; 12
 d8c:   09 f4           if (c1 != c2) goto Label_0xd90;
 d8e:   14 c0           goto instruction_0x4b-0x4f_rand;

; Referenced from offset 0xd8c by brne
Label_0xd90:
 d90:   2d 91           r18 = Memory[[r26:r27]++];
 d92:   20 90 1a 02     r2 = decoded_module_instruction[2]; ; 0x021a
 d96:   c0 31           cmp(r28, 0x10);                     ; 16
 d98:   11 f4           if (c1 != c2) goto Label_0xd9e;
 d9a:   22 0d           r18 += r2;                          ; No carry
; instruction_0x50-x053_add
 d9c:   09 c0           goto Label_0xdb0;

; Referenced from offset 0xd98 by brne
Label_0xd9e:
 d9e:   c4 31           cmp(r28, 0x14);                     ; 20
 da0:   11 f4           if (c1 != c2) goto Label_0xda6;
 da2:   22 21           r18 &= r2;
; instruction_0x54-0x57_and
 da4:   05 c0           goto Label_0xdb0;

; Referenced from offset 0xda0 by brne
Label_0xda6:
 da6:   c8 31           cmp(r28, 0x18);                     ; 24
 da8:   11 f4           if (c1 != c2) goto instruction_0x5b-0x5f_xor;
; instruction_0x58-0x5a_or
 daa:   22 29           r18 |= r2;
 dac:   01 c0           goto Label_0xdb0;

; Referenced from offset 0xda8 by brne
instruction_0x5b-0x5f_xor:
 dae:   22 25           r18 ^= r2;

; Referenced from offset 0xd9c by rjmp
; Referenced from offset 0xda4 by rjmp
; Referenced from offset 0xdac by rjmp
Label_0xdb0:
 db0:   a1 50           r26 -= 1;                           ; 0x01, no carry
 db2:   bd 0b           r27 += r29;                         ; With carry
 db4:   2c 93           Memory[r26:r27] = r18;
 db6:   3e c0           goto Label_0xe34;

; Referenced from offset 0xd8e by rjmp
instruction_0x4b-0x4f_rand:
 db8:   2a 2f           r18 = r26;
 dba:   ce de           r26_is_random_between_mem0x8D_and_mem0x8E();
 dbc:   2a 2e           r2 = r26;
 dbe:   a2 2f           r26 = r18;
 dc0:   2c 92           Memory[r26:r27] = r2;
 dc2:   38 c0           goto Label_0xe34;

; Referenced from offset 0xd7c by rjmp
instruction_0x40-0x43_toStore_0x8c:
 dc4:   2c 91           r18 = Memory[r26:r27];
 dc6:   bb 27           r27 = 0x00;                         ; 0
 dc8:   0e f4           if (T == 0) goto Label_0xdcc;
 dca:   b3 95           r27++;

; Referenced from offset 0xdc8 by brtc
Label_0xdcc:
 dcc:   ac e8           r26 = 140;                          ; 0x8c
 dce:   2c 93           Memory[r26:r27] = r18;
 dd0:   31 c0           goto Label_0xe34;

; Referenced from offset 0xd82 by rjmp
instruction_0x44-0x47_fromStore_0x8c:
 dd2:   ff 27           r31 = 0x00;                         ; 0
 dd4:   0e f4           if (T == 0) goto Label_0xdd8;
 dd6:   f3 95           r31++;

; Referenced from offset 0xdd4 by brtc
Label_0xdd8:
 dd8:   ec e8           r30 = 140;                          ; 0x8c
 dda:   20 81           r18 = Memory[r30:r31];
 ddc:   2c 93           Memory[r26:r27] = r18;
 dde:   2a c0           goto Label_0xe34;

; Referenced from offset 0xd88 by rjmp
instruction_0x48-0x4a_div2:
 de0:   2c 91           r18 = Memory[r26:r27];
 de2:   88 94           clc
 de4:   27 95           r18 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
 de6:   2c 93           Memory[r26:r27] = r18;
 de8:   25 c0           goto Label_0xe34;

; Referenced from offset 0xd1c by rjmp
instruction_0x20-0x3F_copy_set_of_bytes:
 dea:   cd 91           r28 = Memory[[r26:r27]++];
 dec:   2c 2f           r18 = r28;
 dee:   c3 70           r28 &= 3;                           ; 0x03
 df0:   2c 2e           r2 = r28;
 df2:   ed 91           r30 = Memory[[r26:r27]++];
 df4:   f2 2d           r31 = r2;
 df6:   ec 38           cmp(r30, 0x8c);                     ; 140
 df8:   fd 07           cmp(r31, r29);                      ; with carry
 dfa:   28 f0           if (Carry) goto Label_0xe06;
 dfc:   e0 3c           cmp(r30, 0xc0);                     ; 192
 dfe:   fd 07           cmp(r31, r29);                      ; with carry
 e00:   10 f4           if (!Carry) goto Label_0xe06;
 e02:   0e f4           if (T == 0) goto Label_0xe06;
 e04:   f1 e0           r31 = 1;                            ; 0x01

; Referenced from offset 0xdfa by brcs
; Referenced from offset 0xe00 by brcc
; Referenced from offset 0xe02 by brtc
Label_0xe06:
 e06:   c2 2f           r28 = r18;
 e08:   cc 71           r28 &= 28;                          ; 0x1c
 e0a:   c6 95           r28 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
 e0c:   c6 95           r28 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)

; Referenced from offset 0xe14 by brne
Label_0xe0e:
 e0e:   2d 91           r18 = Memory[[r26:r27]++];
 e10:   21 93           Memory[[r30:r31]++] = r18;
 e12:   ca 95           r28--;
 e14:   e1 f7           if (c1 != c2) goto Label_0xe0e;
 e16:   0e c0           goto Label_0xe34;

; Referenced from offset 0xd0e by rjmp
instruction_0x8X-0xFF_set_byte:
 e18:   ff 27           r31 = 0x00;                         ; 0
 e1a:   ed 91           r30 = Memory[[r26:r27]++];
 e1c:   e6 fd           skipif (!bit(r30,6))
 e1e:   f1 e0           r31 = 1;                            ; 0x01
 e20:   ef 73           r30 &= 63;                          ; 0x3f
 e22:   e0 58           r30 -= 128;                         ; 0x80, no carry
 e24:   ec 38           cmp(r30, 0x8c);                     ; 140
 e26:   fd 07           cmp(r31, r29);                      ; with carry
 e28:   10 f0           if (Carry) goto Label_0xe2e;
 e2a:   0e f4           if (T == 0) goto Label_0xe2e;
 e2c:   f1 e0           r31 = 1;                            ; 0x01

; Referenced from offset 0xe28 by brcs
; Referenced from offset 0xe2a by brtc
Label_0xe2e:
 e2e:   cc 91           r28 = Memory[r26:r27];
 e30:   c0 83           Memory[r30:r31] = r28;
 e32:   00 c0           goto Label_0xe34;

; Referenced from offset 0xd52 by rjmp
; Referenced from offset 0xd54 by rjmp
; Referenced from offset 0xdb6 by rjmp
; Referenced from offset 0xdc2 by rjmp
; Referenced from offset 0xdd0 by rjmp
; Referenced from offset 0xdde by rjmp
; Referenced from offset 0xde8 by rjmp
; Referenced from offset 0xe16 by rjmp
; Referenced from offset 0xe32 by rjmp
Label_0xe34:
 e34:   36 f0           if (T == 1) goto calltable_30_exit;
 e36:   c0 91 85 00     r28 = mem_unknown_0x85-$4085;       ; 0x0085
 e3a:   c1 ff           skipif (bit(r28,1))
 e3c:   02 c0           goto calltable_30_exit;
 e3e:   68 94           set
 e40:   62 cf           goto Label_0xd06;

; Referenced from offset 0xd00 by rjmp
; Referenced from offset 0xe34 by brts
; Referenced from offset 0xe3c by rjmp
calltable_30_exit:
 e42:   2f 90           pop     r2
 e44:   2f 91           pop     r18
 e46:   ff 91           pop     r31
 e48:   ef 91           pop     r30
 e4a:   08 95           return;

 e4c:   ee ea           r30 = 174;                          ; 0xae
 e4e:   f0 e0           r31 = 0;                            ; 0x00
 e50:   a8 e0           r26 = 8;                            ; 0x08
 e52:   a0 83           Memory[r30:r31] = r26;
 e54:   f1 e0           r31 = 1;                            ; 0x01
 e56:   a0 83           Memory[r30:r31] = r26;
 e58:   a4 e0           r26 = 4;                            ; 0x04
; set 0x83=$4083 Output Control Flags all off except bit2-phase-control-2
 e5a:   ab a3           Memory[[r28:r29]+35] = r26;
 e5c:   08 95           return;


; Referenced from offset 0x24 by jmp
Timer0_Overflow:
 e5e:   1f b6           r1 = IO[SREG];
; sets r17[bit2-timer0-triggered]
 e60:   14 60           r17 |= 4;                           ; 0x04
 e62:   1f be           IO[SREG] = r1;
 e64:   18 95           ireturn;


; Referenced from offset 0x04 by jmp
; Referenced from offset 0x18a8 by rcall
IRQ0_Handler:
 e66:   1f b6           r1 = IO[SREG];
; enable int1 (audio A digital input)
 e68:   7b b7           r23 = IO[GICR];
 e6a:   70 78           r23 &= 128;                         ; 0x80
 e6c:   7b bf           IO[GICR] = r23;
 e6e:   70 e4           r23 = 64;                           ; 0x40
 e70:   7a bf           IO[GIFR] = r23;
 e72:   7c b5           r23 = IO[TCNT1L];
 e74:   8d b5           r24 = IO[TCNT1H];
 e76:   89 bd           IO[OCR1BH] = r24;
 e78:   78 bd           IO[OCR1BL] = r23;
 e7a:   d2 c0           goto Label_0x1020;

; Referenced from offset 0x08 by jmp
; Referenced from offset 0x18ba by rcall
IRQ1_Handler:
 e7c:   1f b6           r1 = IO[SREG];
; enable int0 (audio B digital input)
 e7e:   7b b7           r23 = IO[GICR];
 e80:   70 74           r23 &= 64;                          ; 0x40
 e82:   7b bf           IO[GICR] = r23;
 e84:   70 e8           r23 = 128;                          ; 0x80
 e86:   7a bf           IO[GIFR] = r23;
 e88:   7c b5           r23 = IO[TCNT1L];
 e8a:   8d b5           r24 = IO[TCNT1H];
 e8c:   8b bd           IO[OCR1AH] = r24;
 e8e:   7a bd           IO[OCR1AL] = r23;
 e90:   51 c0           goto Label_0xf34;

; Referenced from offset 0x18 by jmp
Timer1_CMP_A:
 e92:   1f b6           r1 = IO[SREG];
; r5 is [x90] Channel A: Current Gate Value (bit4)
 e94:   54 fc           skipif (!bit(r5,4))
 e96:   06 c0           goto Label_0xea4;
; q5
 e98:   c2 9b           skipif (IO_BIT[PORTB,2])            ; 0x04 = 4
 e9a:   0a c0           goto Label_0xeb0;
; q5
 e9c:   c2 98           IO_BIT[PORTB,2] = false;            ; 0x04 = 4
; r4 is copy of [0x83] Output Control Flags - bit3-phase-control-3
 e9e:   43 fc           skipif (!bit(r4,3))
; q8
 ea0:   c1 98           IO_BIT[PORTB,1] = false;            ; 0x02 = 2
 ea2:   03 c0           goto Label_0xeaa;

; Referenced from offset 0xe96 by rjmp
Label_0xea4:
 ea4:   c3 9b           skipif (IO_BIT[PORTB,3])            ; 0x08 = 8
; above is q6
 ea6:   04 c0           goto Label_0xeb0;
; q6
 ea8:   c3 98           IO_BIT[PORTB,3] = false;            ; 0x08 = 8

; Referenced from offset 0xea2 by rjmp
Label_0xeaa:
 eaa:   00 ff           skipif (bit(r16,0))
; r16[bit0-unknown]
 eac:   0c c0           goto Label_0xec6;
 eae:   5a c0           goto Label_0xf64;

; Referenced from offset 0xe9a by rjmp
; Referenced from offset 0xea6 by rjmp
Label_0xeb0:
 eb0:   54 fc           skipif (!bit(r5,4))
; r5 is [x90] Channel A: Current Gate Value (bit4)
 eb2:   06 c0           goto Label_0xec0;
; q6
 eb4:   c3 9b           skipif (IO_BIT[PORTB,3])            ; 0x08 = 8
 eb6:   17 c0           goto Label_0xee6;
; q6
 eb8:   c3 98           IO_BIT[PORTB,3] = false;            ; 0x08 = 8
; r4 is copy of [0x83] Output Control Flags - bit3-phase-control-3
 eba:   43 fc           skipif (!bit(r4,3))
; if r4[bit3] then turn q7 off
 ebc:   c0 98           IO_BIT[PORTB,0] = false;            ; 0x01 = 1
 ebe:   03 c0           goto Label_0xec6;

; Referenced from offset 0xeb2 by rjmp
Label_0xec0:
 ec0:   c2 9b           skipif (IO_BIT[PORTB,2])            ; 0x04 = 4
; above is q5
 ec2:   11 c0           goto Label_0xee6;
; q5
 ec4:   c2 98           IO_BIT[PORTB,2] = false;            ; 0x04 = 4

; Referenced from offset 0xeac by rjmp
; Referenced from offset 0xebe by rjmp
Label_0xec6:
 ec6:   53 fe           skipif (bit(r5,3))
; r5 is [x90] Channel A: Current Gate Value (bit3)
 ec8:   02 c0           goto Label_0xece;
 eca:   73 e0           r23 = 3;                            ; 0x03
; toggle r16[bit0] toggle r16[bit1]
 ecc:   07 27           r16 ^= r23;

; Referenced from offset 0xec8 by rjmp
Label_0xece:
 ece:   7c b5           r23 = IO[TCNT1L];
 ed0:   8d b5           r24 = IO[TCNT1H];
 ed2:   70 93 7c 00     Memory[0x007c] = r23;               ; 124
 ed6:   80 93 7d 00     Memory[0x007d] = r24;               ; 125
 eda:   70 e0           r23 = 0;                            ; 0x00
 edc:   81 e0           r24 = 1;                            ; 0x01
 ede:   90 91 04 02     r25 = pwm_frequency;                ; 0x0204
 ee2:   89 0f           r24 += r25;                         ; No carry
 ee4:   48 c0           goto extend_ocr1_by_r23r24_then_done;

; Referenced from offset 0xeb6 by rjmp
; Referenced from offset 0xec2 by rjmp
Label_0xee6:
 ee6:   03 ff           skipif (bit(r16,3))
; r16[bit3-unknown]
 ee8:   10 c0           goto Label_0xf0a;
; unset r16[bit3-unknown]
 eea:   07 7f           r16 &= 247;                         ; 0xf7
; pin D6 is led A (on)
 eec:   96 98           IO_BIT[PORTD,6] = false;            ; 0x40 = 64
; r4 is copy of [0x83] Output Control Flags - bit3-phase-control-3
 eee:   43 fc           skipif (!bit(r4,3))
; pin D5 is led B (on)
 ef0:   95 98           IO_BIT[PORTD,5] = false;            ; 0x20 = 32
 ef2:   13 fd           skipif (!bit(r17,3))
 ef4:   05 c0           goto Label_0xf00;
; start an ADC conversion with interrupt, set r17[bit3-adc-running]
 ef6:   71 e0           r23 = 1;                            ; 0x01
 ef8:   77 b9           IO[ADMUX] = r23;
 efa:   7b ec           r23 = 203;                          ; 0xcb
 efc:   76 b9           IO[ADCSR] = r23;
 efe:   18 60           r17 |= 8;                           ; 0x08

; Referenced from offset 0xef4 by rjmp
Label_0xf00:
 f00:   70 91 09 02     r23 = channel_a_pwm_mark[0];        ; 0x0209
 f04:   80 91 0a 02     r24 = channel_a_pwm_mark[1];        ; 0x020a
 f08:   36 c0           goto extend_ocr1_by_r23r24_then_done;

; Referenced from offset 0xee8 by rjmp
Label_0xf0a:
 f0a:   96 99           skipif (!IO_BIT[PORTD,6])           ; 0x40 = 64
 f0c:   08 c0           goto Label_0xf1e;
; pin D6 is led A (off)
 f0e:   96 9a           IO_BIT[PORTD,6] = true;             ; 0x40 = 64
; r4 is copy of [0x83] Output Control Flags - bit3-phase-control-3
 f10:   43 fc           skipif (!bit(r4,3))
; pin D5 is led B (off)
 f12:   95 9a           IO_BIT[PORTD,5] = true;             ; 0x20 = 32
 f14:   70 91 0b 02     r23 = channel_a_pwm_space[0];       ; 0x020b
 f18:   80 91 0c 02     r24 = channel_a_pwm_space[1];       ; 0x020c
 f1c:   2c c0           goto extend_ocr1_by_r23r24_then_done;

; Referenced from offset 0xf0c by rjmp
Label_0xf1e:
 f1e:   55 fe           skipif (bit(r5,5))
; r5 is [x90] Channel A: Current Gate Value (bit5) - is set when audio3 mode
 f20:   09 c0           goto Label_0xf34;
; r5 is [x90] Channel A: Current Gate Value (bit7)
 f22:   57 fc           skipif (!bit(r5,7))
 f24:   05 c0           goto Label_0xf30;
; Probably only audio3 mode
 f26:   70 e8           r23 = 128;                          ; 0x80
 f28:   7a bf           IO[GIFR] = r23;
; enable int1 (audio A digital input)
 f2a:   7b b7           r23 = IO[GICR];
 f2c:   70 68           r23 |= 128;                         ; 0x80
 f2e:   7b bf           IO[GICR] = r23;

; Referenced from offset 0xf24 by rjmp
Label_0xf30:
 f30:   1f be           IO[SREG] = r1;
 f32:   18 95           ireturn;


; Referenced from offset 0xe90 by rjmp
; Referenced from offset 0xf20 by rjmp
Label_0xf34:
 f34:   50 fe           skipif (bit(r5,0))
; r5 is [x90] Channel A: Current Gate Value (bit0-output-is-gated)
 f36:   1d c0           goto Label_0xf72;
; r4 is copy of [0x83] Output Control Flags - bit2-phase-control-2
 f38:   42 fc           skipif (!bit(r4,2))
 f3a:   04 c0           goto Label_0xf44;
; r16[bit7-unknown]
 f3c:   07 fd           skipif (!bit(r16,7))
 f3e:   19 c0           goto Label_0xf72;
; r16[bit1-unknown]
 f40:   01 ff           skipif (bit(r16,1))
 f42:   08 c0           goto Label_0xf54;

; Referenced from offset 0xf3a by rjmp
Label_0xf44:
 f44:   08 60           r16 |= 8;                           ; 0x08
; set r16[bit3-unknown]
 f46:   54 fc           skipif (!bit(r5,4))
; q6
 f48:   c3 9a           IO_BIT[PORTB,3] = true;             ; 0x08 = 8
; r5 is [x90] Channel A: Current Gate Value (bit4)
 f4a:   54 fe           skipif (bit(r5,4))
; q5
 f4c:   c2 9a           IO_BIT[PORTB,2] = true;             ; 0x04 = 4
; r4 is copy of [0x83] Output Control Flags - bit3-phase-control-3
 f4e:   43 fc           skipif (!bit(r4,3))
; q8
 f50:   c1 9a           IO_BIT[PORTB,1] = true;             ; 0x02 = 2
 f52:   0f c0           goto Label_0xf72;

; Referenced from offset 0xf42 by rjmp
Label_0xf54:
 f54:   50 fe           skipif (bit(r5,0))
; r5 is [x90] Channel A: Current Gate Value (bit0-output-is-gated)
 f56:   0d c0           goto Label_0xf72;
; r4 is copy of [0x83] Output Control Flags - bit2-phase-control-2
 f58:   42 fc           skipif (!bit(r4,2))
 f5a:   04 c0           goto Label_0xf64;
; r16[bit7-unknown]
 f5c:   07 fd           skipif (!bit(r16,7))
 f5e:   09 c0           goto Label_0xf72;
; r16[bit0-unknown]
 f60:   00 ff           skipif (bit(r16,0))
 f62:   07 c0           goto Label_0xf72;

; Referenced from offset 0xeae by rjmp
; Referenced from offset 0xf5a by rjmp
Label_0xf64:
 f64:   08 60           r16 |= 8;                           ; 0x08
; r5 is [x90] Channel A: Current Gate Value (bit4) set r16[bit3-unknown]
 f66:   54 fc           skipif (!bit(r5,4))
; q5
 f68:   c2 9a           IO_BIT[PORTB,2] = true;             ; 0x04 = 4
; r5 is [x90] Channel A: Current Gate Value (bit4)
 f6a:   54 fe           skipif (bit(r5,4))
; q6
 f6c:   c3 9a           IO_BIT[PORTB,3] = true;             ; 0x08 = 8
; r4 is copy of [0x83] Output Control Flags - bit3-phase-control-3
 f6e:   43 fc           skipif (!bit(r4,3))
; if r4[bit3] then turn q7 on
 f70:   c0 9a           IO_BIT[PORTB,0] = true;             ; 0x01 = 1

; Referenced from offset 0xf36 by rjmp
; Referenced from offset 0xf3e by rjmp
; Referenced from offset 0xf52 by rjmp
; Referenced from offset 0xf56 by rjmp
; Referenced from offset 0xf5e by rjmp
; Referenced from offset 0xf62 by rjmp
Label_0xf72:
 f72:   79 2d           r23 = r9;
 f74:   8d 2f           r24 = r29;

; Referenced from offset 0xee4 by rjmp
; Referenced from offset 0xf08 by rjmp
; Referenced from offset 0xf1c by rjmp
extend_ocr1_by_r23r24_then_done:
 f76:   9a b5           r25 = IO[OCR1AL];
 f78:   3b b4           r3 = IO[OCR1AH];
 f7a:   97 0f           r25 += r23;                         ; No carry
 f7c:   38 1e           r3 += r24;                          ; With carry
 f7e:   3b bc           IO[OCR1AH] = r3;
 f80:   9a bd           IO[OCR1AL] = r25;
 f82:   70 e1           r23 = 16;                           ; 0x10
; set OCF1A in TIFR
 f84:   78 bf           IO[TIFR] = r23;
 f86:   1f be           IO[SREG] = r1;
 f88:   18 95           ireturn;


; Referenced from offset 0x1c by jmp
Timer1_CMP_B:
 f8a:   1f b6           r1 = IO[SREG];
; r4 is copy of [0x83] Output Control Flags - bit3-phase-control-3
 f8c:   43 fc           skipif (!bit(r4,3))
 f8e:   25 c0           goto Label_0xfda;
 f90:   a4 fc           skipif (!bit(r10,4))
 f92:   04 c0           goto Label_0xf9c;
; if q7 is on then turn it off
 f94:   c0 9b           skipif (IO_BIT[PORTB,0])            ; 0x01 = 1
 f96:   08 c0           goto Label_0xfa8;
; q7
 f98:   c0 98           IO_BIT[PORTB,0] = false;            ; 0x01 = 1
 f9a:   03 c0           goto Label_0xfa2;

; Referenced from offset 0xf92 by rjmp
Label_0xf9c:
 f9c:   c1 9b           skipif (IO_BIT[PORTB,1])            ; 0x02 = 2
; above is q8, if it's on then turn if off
 f9e:   04 c0           goto Label_0xfa8;
; q8
 fa0:   c1 98           IO_BIT[PORTB,1] = false;            ; 0x02 = 2

; Referenced from offset 0xf9a by rjmp
Label_0xfa2:
 fa2:   04 ff           skipif (bit(r16,4))
; r16[bit4-unknown]
 fa4:   0a c0           goto Label_0xfba;
 fa6:   52 c0           goto Label_0x104c;

; Referenced from offset 0xf96 by rjmp
; Referenced from offset 0xf9e by rjmp
Label_0xfa8:
 fa8:   a4 fc           skipif (!bit(r10,4))
 faa:   04 c0           goto Label_0xfb4;
; q8
 fac:   c1 9b           skipif (IO_BIT[PORTB,1])            ; 0x02 = 2
 fae:   15 c0           goto Label_0xfda;
; q8
 fb0:   c1 98           IO_BIT[PORTB,1] = false;            ; 0x02 = 2
 fb2:   03 c0           goto Label_0xfba;

; Referenced from offset 0xfaa by rjmp
Label_0xfb4:
 fb4:   c0 9b           skipif (IO_BIT[PORTB,0])            ; 0x01 = 1
; above is q7
 fb6:   11 c0           goto Label_0xfda;
; q7
 fb8:   c0 98           IO_BIT[PORTB,0] = false;            ; 0x01 = 1

; Referenced from offset 0xfa4 by rjmp
; Referenced from offset 0xfb2 by rjmp
Label_0xfba:
 fba:   a3 fe           skipif (bit(r10,3))
 fbc:   02 c0           goto Label_0xfc2;
 fbe:   70 e3           r23 = 48;                           ; 0x30
; toggle r16[bit4-unknown], r16[bit5-unknown]
 fc0:   07 27           r16 ^= r23;

; Referenced from offset 0xfbc by rjmp
Label_0xfc2:
 fc2:   7c b5           r23 = IO[TCNT1L];
 fc4:   8d b5           r24 = IO[TCNT1H];
 fc6:   70 93 7e 00     Memory[0x007e] = r23;               ; 126
 fca:   80 93 7f 00     Memory[0x007f] = r24;               ; 127
 fce:   70 e0           r23 = 0;                            ; 0x00
 fd0:   81 e0           r24 = 1;                            ; 0x01
 fd2:   90 91 04 02     r25 = pwm_frequency;                ; 0x0204
 fd6:   89 0f           r24 += r25;                         ; No carry
 fd8:   40 c0           goto Label_0x105a;

; Referenced from offset 0xf8e by rjmp
; Referenced from offset 0xfae by rjmp
; Referenced from offset 0xfb6 by rjmp
Label_0xfda:
 fda:   07 ff           skipif (bit(r16,7))
; r16[bit7-unknown]
 fdc:   0e c0           goto Label_0xffa;
; unset r16[bit7-unknown]
 fde:   0f 77           r16 &= 127;                         ; 0x7f
; pin D5 is led B (on)
 fe0:   95 98           IO_BIT[PORTD,5] = false;            ; 0x20 = 32
 fe2:   13 fd           skipif (!bit(r17,3))
 fe4:   05 c0           goto Label_0xff0;
; start an ADC conversion with interrupt, set r17[bit3-adc-running]
 fe6:   71 e0           r23 = 1;                            ; 0x01
 fe8:   77 b9           IO[ADMUX] = r23;
 fea:   7b ec           r23 = 203;                          ; 0xcb
 fec:   76 b9           IO[ADCSR] = r23;
 fee:   18 60           r17 |= 8;                           ; 0x08

; Referenced from offset 0xfe4 by rjmp
Label_0xff0:
 ff0:   70 91 0e 02     r23 = channel_b_pwm_mark[0];        ; 0x020e
 ff4:   80 91 0f 02     r24 = channel_b_pwm_mark[1];        ; 0x020f
 ff8:   30 c0           goto Label_0x105a;

; Referenced from offset 0xfdc by rjmp
Label_0xffa:
 ffa:   95 99           skipif (!IO_BIT[PORTD,5])           ; 0x20 = 32
 ffc:   06 c0           goto Label_0x100a;
; pin D5 is led B (off)
 ffe:   95 9a           IO_BIT[PORTD,5] = true;             ; 0x20 = 32
1000:   70 91 10 02     r23 = channel_b_pwm_space[0];       ; 0x0210
1004:   80 91 11 02     r24 = channel_b_pwm_space[1];       ; 0x0211
1008:   28 c0           goto Label_0x105a;

; Referenced from offset 0xffc by rjmp
Label_0x100a:
100a:   a5 fe           skipif (bit(r10,5))
100c:   09 c0           goto Label_0x1020;
100e:   a7 fc           skipif (!bit(r10,7))
1010:   05 c0           goto Label_0x101c;
; Probably only audio3 mode
1012:   70 e4           r23 = 64;                           ; 0x40
1014:   7a bf           IO[GIFR] = r23;
; enable int0 (audio B digital input)
1016:   7b b7           r23 = IO[GICR];
1018:   70 64           r23 |= 64;                          ; 0x40
101a:   7b bf           IO[GICR] = r23;

; Referenced from offset 0x1010 by rjmp
Label_0x101c:
101c:   1f be           IO[SREG] = r1;
101e:   18 95           ireturn;


; Referenced from offset 0xe7a by rjmp
; Referenced from offset 0x100c by rjmp
Label_0x1020:
1020:   a0 fe           skipif (bit(r10,0))
1022:   19 c0           goto Label_0x1056;
; r4 is copy of [0x83] Output Control Flags - bit2-phase-control-2
1024:   42 fc           skipif (!bit(r4,2))
1026:   04 c0           goto Label_0x1030;
; r16[bit3-unknown]
1028:   03 fd           skipif (!bit(r16,3))
102a:   15 c0           goto Label_0x1056;
; r16[bit5-unknown]
102c:   05 ff           skipif (bit(r16,5))
102e:   06 c0           goto Label_0x103c;

; Referenced from offset 0x1026 by rjmp
Label_0x1030:
1030:   00 68           r16 |= 128;                         ; 0x80
; set r16[bit7-unknown]. If r10[bit4] is set turn on Q8 else turn on Q7
1032:   a4 fc           skipif (!bit(r10,4))
; q8
1034:   c1 9a           IO_BIT[PORTB,1] = true;             ; 0x02 = 2
1036:   a4 fe           skipif (bit(r10,4))
; q7
1038:   c0 9a           IO_BIT[PORTB,0] = true;             ; 0x01 = 1
103a:   0d c0           goto Label_0x1056;

; Referenced from offset 0x102e by rjmp
Label_0x103c:
103c:   a0 fe           skipif (bit(r10,0))
103e:   0b c0           goto Label_0x1056;
; r4 is copy of [0x83] Output Control Flags - bit2-phase-control-2
1040:   42 fc           skipif (!bit(r4,2))
1042:   04 c0           goto Label_0x104c;
; r16[bit3-unknown]
1044:   03 fd           skipif (!bit(r16,3))
1046:   07 c0           goto Label_0x1056;
; r16[bit4-unknown]
1048:   04 ff           skipif (bit(r16,4))
104a:   05 c0           goto Label_0x1056;

; Referenced from offset 0xfa6 by rjmp
; Referenced from offset 0x1042 by rjmp
Label_0x104c:
104c:   00 68           r16 |= 128;                         ; 0x80
; set r16[bit7-unknown].  If r10[bit4] is set turn on Q7 else turn on Q8
104e:   a4 fc           skipif (!bit(r10,4))
; q7
1050:   c0 9a           IO_BIT[PORTB,0] = true;             ; 0x01 = 1
1052:   a4 fe           skipif (bit(r10,4))
; q8
1054:   c1 9a           IO_BIT[PORTB,1] = true;             ; 0x02 = 2

; Referenced from offset 0x1022 by rjmp
; Referenced from offset 0x102a by rjmp
; Referenced from offset 0x103a by rjmp
; Referenced from offset 0x103e by rjmp
; Referenced from offset 0x1046 by rjmp
; Referenced from offset 0x104a by rjmp
Label_0x1056:
1056:   7e 2d           r23 = r14;
; above is r14 is min(50,[x1B7]) Channel B: Current Width Modulation Value)
1058:   8d 2f           r24 = r29;

; Referenced from offset 0xfd8 by rjmp
; Referenced from offset 0xff8 by rjmp
; Referenced from offset 0x1008 by rjmp
Label_0x105a:
105a:   98 b5           r25 = IO[OCR1BL];
105c:   39 b4           r3 = IO[OCR1BH];
105e:   97 0f           r25 += r23;                         ; No carry
1060:   38 1e           r3 += r24;                          ; With carry
1062:   39 bc           IO[OCR1BH] = r3;
1064:   98 bd           IO[OCR1BL] = r25;
1066:   78 e0           r23 = 8;                            ; 0x08
; set OCF1B in TIFR
1068:   78 bf           IO[TIFR] = r23;
106a:   1f be           IO[SREG] = r1;
106c:   18 95           ireturn;


; Referenced from offset 0x38 by jmp
ADC_Conversion_Complete:
106e:   1f b6           r1 = IO[SREG];
1070:   cf 93           push    r28
1072:   c7 b1           r28 = IO[ADMUX];
1074:   c0 5a           r28 -= 160;                         ; 0xa0, no carry
1076:   84 b1           r24 = IO[ADCL];
1078:   95 b1           r25 = IO[ADCH];
107a:   96 95           r25 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
107c:   87 95           r24 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
107e:   96 95           r25 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
1080:   87 95           r24 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1082:   c4 36           cmp(r28, 0x64);                     ; 100
1084:   48 f4           if (!Carry) goto Label_0x1098;
1086:   77 b1           r23 = IO[ADMUX];
1088:   98 81           r25 = Memory[r28:r29];
108a:   98 0f           r25 += r24;                         ; No carry
108c:   97 95           r25 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
108e:   c1 36           cmp(r28, 0x61);                     ; 97
1090:   09 f4           if (c1 != c2) goto Label_0x1094;
; 0x0f-$400f if r15[bit3-ignore-MA-knob] is set, ignore the MA pot
1092:   f3 fe           skipif (bit(r15,3))

; Referenced from offset 0x1090 by brne
Label_0x1094:
1094:   98 83           Memory[r28:r29] = r25;
1096:   19 c0           goto Label_0x10ca;

; Referenced from offset 0x1084 by brcc
Label_0x1098:
1098:   c6 36           cmp(r28, 0x66);                     ; 102
109a:   70 f4           if (!Carry) goto Label_0x10b8;
109c:   98 81           r25 = Memory[r28:r29];
109e:   89 17           cmp(r24, r25);
10a0:   a1 f0           if (c1 == c2) goto Label_0x10ca;
10a2:   20 f0           if (Carry) goto Label_0x10ac;
10a4:   98 1b           r25 -= r24;                         ; No carry
10a6:   9f 3f           cmp(r25, 0xff);                     ; 255
10a8:   81 f0           if (c1 == c2) goto Label_0x10ca;
10aa:   03 c0           goto Label_0x10ca;

; Referenced from offset 0x10a2 by brcs
Label_0x10ac:
10ac:   98 1b           r25 -= r24;                         ; No carry
10ae:   91 30           cmp(r25, 0x01);                     ; 1
10b0:   61 f0           if (c1 == c2) goto Label_0x10ca;

; Referenced from offset 0x10aa by rjmp
; 0x0f-$400f r15[bit0-disable-pots]
10b2:   f0 fe           skipif (bit(r15,0))
10b4:   88 83           Memory[r28:r29] = r24;
10b6:   09 c0           goto Label_0x10ca;

; Referenced from offset 0x109a by brcc
Label_0x10b8:
10b8:   88 83           Memory[r28:r29] = r24;
; r4 is copy of [0x83] bit6-mono-mode.  If we're in audio1 mode, ignore ADC7 and copy ADC6 to ADC7
10ba:   46 fe           skipif (bit(r4,6))
10bc:   06 c0           goto Label_0x10ca;
10be:   c7 36           cmp(r28, 0x67);                     ; 103
10c0:   21 f4           if (c1 != c2) goto Label_0x10ca;
10c2:   ca 95           r28--;
10c4:   88 81           r24 = Memory[r28:r29];
10c6:   c3 95           r28++;
10c8:   88 83           Memory[r28:r29] = r24;

; Referenced from offset 0x1096 by rjmp
; Referenced from offset 0x10a0 by breq
; Referenced from offset 0x10a8 by breq
; Referenced from offset 0x10b0 by breq
; Referenced from offset 0x10b6 by rjmp
; Referenced from offset 0x10bc by rjmp
; Referenced from offset 0x10c0 by brne
Label_0x10ca:
10ca:   77 b1           r23 = IO[ADMUX];
10cc:   73 95           r23++;
10ce:   73 fd           skipif (!bit(r23,3))
10d0:   06 c0           goto Label_0x10de;
10d2:   77 b9           IO[ADMUX] = r23;
10d4:   7c ec           r23 = 204;                          ; 0xcc
10d6:   76 b9           IO[ADCSR] = r23;
10d8:   cf 91           pop     r28
10da:   1f be           IO[SREG] = r1;
10dc:   18 95           ireturn;


; Referenced from offset 0x10d0 by rjmp
Label_0x10de:
10de:   94 9b           skipif (IO_BIT[PORTD,4])            ; 0x10 = 16
10e0:   06 c0           goto Label_0x10ee;
; pin D4 is DAC CS
10e2:   94 98           IO_BIT[PORTD,4] = false;            ; 0x10 = 16
10e4:   74 e0           r23 = 4;                            ; 0x04
10e6:   70 93 08 02     spi_transfer_length = r23;          ; 0x0208
10ea:   70 91 00 05     r23 = spdr_value_0;                 ; 0x0500

; Referenced from offset 0x10e0 by rjmp
Label_0x10ee:
10ee:   7f b9           IO[SPDR] = r23;
; unset r17[bit3-adc-running]
10f0:   17 7f           r17 &= 247;                         ; 0xf7
10f2:   cf 91           pop     r28
10f4:   1f be           IO[SREG] = r1;
10f6:   18 95           ireturn;


; Referenced from offset 0x28 by jmp
SPI_Transfer_Complete:
10f8:   1f b6           r1 = IO[SREG];
10fa:   70 91 08 02     r23 = spi_transfer_length;          ; 0x0208
10fe:   75 30           cmp(r23, 0x05);                     ; 5
1100:   c0 f5           if (!Carry) goto Label_0x1172;
1102:   77 23           (r23 == 0) || (r23 < 0);            ; test r23
1104:   b1 f1           if (c1 == c2) goto Label_0x1172;
1106:   7a 95           r23--;
1108:   70 93 08 02     spi_transfer_length = r23;          ; 0x0208
110c:   91 f1           if (c1 == c2) goto Label_0x1172;
110e:   72 30           cmp(r23, 0x02);                     ; 2
1110:   29 f0           if (c1 == c2) goto Label_0x111c;
1112:   5c f1           if (c1 (signed)< c2) goto Label_0x116a;
1114:   70 91 01 05     r23 = spdr_value_1;                 ; 0x0501
1118:   7f b9           IO[SPDR] = r23;
111a:   2c c0           goto Label_0x1174;

; Referenced from offset 0x1110 by breq
Label_0x111c:
111c:   94 9a           IO_BIT[PORTD,4] = true;             ; 0x10 = 16
; pin D4 is DAC CS
111e:   00 00           nop
1120:   94 98           IO_BIT[PORTD,4] = false;            ; 0x10 = 16
1122:   70 91 05 02     r23 = channel_a_dac_level;          ; 0x0205
; r7 is [xA5] Channel A: Current Intensity Modulation Value
1126:   87 2d           r24 = r7;
1128:   0f 92           push    r0
112a:   1f 92           push    r1
112c:   78 9f           r1:r0 = r23 * r24;                  ; Unsigned
112e:   10 94           com     r1
1130:   91 2d           r25 = r1;
1132:   9f 70           r25 &= 15;                          ; 0x0f
1134:   92 95           r25 = ((r25 & 0xf0) >> 4) | ((r25 & 0x0f) << 4); ; swap nibbles
1136:   90 93 01 05     spdr_value_1 = r25;                 ; 0x0501
113a:   91 2d           r25 = r1;
113c:   90 7f           r25 &= 240;                         ; 0xf0
113e:   92 95           r25 = ((r25 & 0xf0) >> 4) | ((r25 & 0x0f) << 4); ; swap nibbles
1140:   90 6a           r25 |= 160;                         ; 0xa0
1142:   90 93 00 05     spdr_value_0 = r25;                 ; 0x0500
1146:   70 91 06 02     r23 = channel_b_dac_level;          ; 0x0206
; r12 is [x1A5] Channel B: Current Intensity Modulation Value
114a:   8c 2d           r24 = r12;
114c:   78 9f           r1:r0 = r23 * r24;                  ; Unsigned
114e:   10 94           com     r1
1150:   91 2d           r25 = r1;
1152:   9f 70           r25 &= 15;                          ; 0x0f
1154:   92 95           r25 = ((r25 & 0xf0) >> 4) | ((r25 & 0x0f) << 4); ; swap nibbles
1156:   90 93 03 05     spdr_value_3 = r25;                 ; 0x0503
115a:   91 2d           r25 = r1;
115c:   90 7f           r25 &= 240;                         ; 0xf0
115e:   92 95           r25 = ((r25 & 0xf0) >> 4) | ((r25 & 0x0f) << 4); ; swap nibbles
1160:   90 69           r25 |= 144;                         ; 0x90
1162:   9f b9           IO[SPDR] = r25;
1164:   1f 90           pop     r1
1166:   0f 90           pop     r0
1168:   05 c0           goto Label_0x1174;

; Referenced from offset 0x1112 by brlt
Label_0x116a:
116a:   70 91 03 05     r23 = spdr_value_3;                 ; 0x0503
116e:   7f b9           IO[SPDR] = r23;
1170:   01 c0           goto Label_0x1174;

; Referenced from offset 0x1100 by brcc
; Referenced from offset 0x1104 by breq
; Referenced from offset 0x110c by breq
Label_0x1172:
1172:   94 9a           IO_BIT[PORTD,4] = true;             ; 0x10 = 16

; Referenced from offset 0x111a by rjmp
; Referenced from offset 0x1168 by rjmp
; Referenced from offset 0x1170 by rjmp
Label_0x1174:
1174:   1f be           IO[SREG] = r1;
1176:   18 95           ireturn;


; Referenced from offset 0x2c by jmp
USART_RX_Complete:
1178:   1f b6           r1 = IO[SREG];
117a:   ef 93           push    r30
117c:   ff 93           push    r31
; Already got a command but it's not been handled yet? ignore input (r17[bit5-received-serial-command])
117e:   15 fd           skipif (!bit(r17,5))
1180:   1f c0           goto USART_RX_Complete_error;
1182:   8b b1           r24 = IO[UCSRA];
1184:   88 71           r24 &= 24;                          ; 0x18
1186:   e1 f4           if (c1 != c2) goto USART_RX_Complete_error;
1188:   7c b1           r23 = IO[UDR];
118a:   80 91 13 02     r24 = cipher_key;                   ; 0x0213
118e:   78 27           r23 ^= r24;
1190:   f2 e0           r31 = 2;                            ; 0x02
1192:   e0 91 f2 01     r30 = counter_for_0x220;            ; 0x01f2
1196:   ec 32           cmp(r30, 0x2c);                     ; 44
; is our receive buffer full? ignore the byte
1198:   98 f4           if (!Carry) goto USART_RX_Complete_error;
119a:   71 93           Memory[[r30:r31]++] = r23;
119c:   e0 93 f2 01     counter_for_0x220 = r30;            ; 0x01f2
11a0:   e1 32           cmp(r30, 0x21);                     ; 33
11a2:   21 f4           if (c1 != c2) goto Label_0x11ac;
; the high nibble of the first received byte is the length of the serial instruction
11a4:   72 95           r23 = ((r23 & 0xf0) >> 4) | ((r23 & 0x0f) << 4); ; swap nibbles
11a6:   7f 70           r23 &= 15;                          ; 0x0f
11a8:   70 93 12 02     serial_instruction_expected_length = r23; ; 0x0212

; Referenced from offset 0x11a2 by brne
Label_0x11ac:
11ac:   70 91 12 02     r23 = serial_instruction_expected_length; ; 0x0212
; add 0x21
11b0:   7f 5d           r23 -= 223;                         ; 0xdf, no carry
; look to see if we've received all the bytes we need
11b2:   e7 17           cmp(r30, r23);
11b4:   08 f0           if (Carry) goto USART_RX_Complete_done;
; set r17[bit5-received-serial-command] as our instruction is complete
11b6:   10 62           r17 |= 32;                          ; 0x20

; Referenced from offset 0x11b4 by brcs
; Referenced from offset 0x11c6 by rjmp
USART_RX_Complete_done:
11b8:   ff 91           pop     r31
11ba:   ef 91           pop     r30
11bc:   1f be           IO[SREG] = r1;
11be:   18 95           ireturn;


; Referenced from offset 0x1180 by rjmp
; Referenced from offset 0x1186 by brne
; Referenced from offset 0x1198 by brcc
USART_RX_Complete_error:
11c0:   10 66           r17 |= 96;                          ; 0x60
; above set r17[bit5-received-serial-command], set r17[bit6]
11c2:   a8 e1           r26 = 24;                           ; 0x18
; enable RXEN and TXEN in USART control register (no interrupts)
11c4:   aa b9           IO[UCSRB] = r26;
11c6:   f8 cf           goto USART_RX_Complete_done;

; Referenced from offset 0x1514 by rcall
initialize_lcd:
11c8:   b4 e0           r27 = 4;                            ; 0x04

; Referenced from offset 0x11da by brne
Label_0x11ca:
11ca:   a0 e3           r26 = 48;                           ; 0x30
11cc:   a5 bb           IO[PORTC] = r26;
11ce:   aa 9a           IO_BIT[PORTC,2] = true;             ; 0x04 = 4
11d0:   00 00           nop
11d2:   aa 98           IO_BIT[PORTC,2] = false;            ; 0x04 = 4
11d4:   a2 e2           r26 = 34;                           ; 0x22
11d6:   07 da           sleep();                            ; Parameter r26
11d8:   ba 95           r27--;
11da:   b9 f7           if (c1 != c2) goto Label_0x11ca;
11dc:   a0 e2           r26 = 32;                           ; 0x20
11de:   a5 bb           IO[PORTC] = r26;
11e0:   aa 9a           IO_BIT[PORTC,2] = true;             ; 0x04 = 4
11e2:   00 00           nop
11e4:   aa 98           IO_BIT[PORTC,2] = false;            ; 0x04 = 4
11e6:   a2 e2           r26 = 34;                           ; 0x22
11e8:   fe d9           sleep();                            ; Parameter r26
11ea:   f8 e2           r31 = 40;                           ; 0x28
11ec:   05 d0           set_lcd_position();                 ; Parameter r31
11ee:   fc e0           r31 = 12;                           ; 0x0c
11f0:   03 d0           set_lcd_position();                 ; Parameter r31
11f2:   f1 e0           r31 = 1;                            ; 0x01
11f4:   01 d0           set_lcd_position();                 ; Parameter r31
11f6:   08 95           return;


; Referenced from offset 0xb12 by rcall
; Referenced from offset 0xb1a by rcall
; Referenced from offset 0x11ec by rcall
; Referenced from offset 0x11f0 by rcall
; Referenced from offset 0x11f4 by rcall
; Referenced from offset 0x127c by rcall
; Referenced from offset 0x12aa by rcall
; Referenced from offset 0x12c0 by rcall
; Referenced from offset 0x130a by rcall
set_lcd_position:     ; Parameter r31
11f8:   23 d0           wait_for_lcd();
11fa:   bf 93           push    r27
11fc:   ab 98           IO_BIT[PORTC,3] = false;            ; 0x08 = 8
11fe:   aa 9a           IO_BIT[PORTC,2] = true;             ; 0x04 = 4
1200:   bf 2f           r27 = r31;
1202:   b0 7f           r27 &= 240;                         ; 0xf0
1204:   b4 60           r27 |= 4;                           ; 0x04
1206:   b5 bb           IO[PORTC] = r27;
1208:   aa 98           IO_BIT[PORTC,2] = false;            ; 0x04 = 4
120a:   00 00           nop
120c:   aa 9a           IO_BIT[PORTC,2] = true;             ; 0x04 = 4
120e:   f2 95           r31 = ((r31 & 0xf0) >> 4) | ((r31 & 0x0f) << 4); ; swap nibbles
1210:   f0 7f           r31 &= 240;                         ; 0xf0
1212:   f4 60           r31 |= 4;                           ; 0x04
1214:   f5 bb           IO[PORTC] = r31;
1216:   aa 98           IO_BIT[PORTC,2] = false;            ; 0x04 = 4
1218:   bf 91           pop     r27
121a:   08 95           return;


; Referenced from offset 0x127e by rcall
; Referenced from offset 0x12ae by rcall
; Referenced from offset 0x12b4 by rcall
; Referenced from offset 0x12ce by rcall
; Referenced from offset 0x134c by rcall
output_char_to_lcd:     ; Parameter r30
121c:   11 d0           wait_for_lcd();
121e:   bf 93           push    r27
1220:   ab 9a           IO_BIT[PORTC,3] = true;             ; 0x08 = 8
1222:   aa 9a           IO_BIT[PORTC,2] = true;             ; 0x04 = 4
1224:   be 2f           r27 = r30;
1226:   b0 7f           r27 &= 240;                         ; 0xf0
1228:   bc 60           r27 |= 12;                          ; 0x0c
122a:   b5 bb           IO[PORTC] = r27;
122c:   aa 98           IO_BIT[PORTC,2] = false;            ; 0x04 = 4
122e:   00 00           nop
1230:   aa 9a           IO_BIT[PORTC,2] = true;             ; 0x04 = 4
1232:   e2 95           r30 = ((r30 & 0xf0) >> 4) | ((r30 & 0x0f) << 4); ; swap nibbles
1234:   e0 7f           r30 &= 240;                         ; 0xf0
1236:   ec 60           r30 |= 12;                          ; 0x0c
1238:   e5 bb           IO[PORTC] = r30;
123a:   aa 98           IO_BIT[PORTC,2] = false;            ; 0x04 = 4
123c:   bf 91           pop     r27
123e:   08 95           return;


; Referenced from offset 0x11f8 by rcall
; Referenced from offset 0x121c by rcall
wait_for_lcd:
1240:   af 93           push    r26
1242:   bf 93           push    r27
1244:   b5 b3           r27 = IO[PORTC];
1246:   af e0           r26 = 15;                           ; 0x0f
1248:   a4 bb           IO[DDRC] = r26;
124a:   a2 e0           r26 = 2;                            ; 0x02
124c:   a5 bb           IO[PORTC] = r26;

; Referenced from offset 0x126a by brne
Label_0x124e:
124e:   00 00           nop
1250:   00 00           nop
1252:   aa 9a           IO_BIT[PORTC,2] = true;             ; 0x04 = 4
1254:   00 00           nop
1256:   00 00           nop
1258:   a3 b3           r26 = IO[PINC];
125a:   aa 98           IO_BIT[PORTC,2] = false;            ; 0x04 = 4
125c:   00 00           nop
125e:   aa 9a           IO_BIT[PORTC,2] = true;             ; 0x04 = 4
1260:   00 00           nop
1262:   00 00           nop
1264:   00 00           nop
1266:   aa 98           IO_BIT[PORTC,2] = false;            ; 0x04 = 4
1268:   a0 78           r26 &= 128;                         ; 0x80
126a:   89 f7           if (c1 != c2) goto Label_0x124e;
126c:   b5 bb           IO[PORTC] = r27;
126e:   af ef           r26 = 0xff;                         ; 255
1270:   a4 bb           IO[DDRC] = r26;
1272:   bf 91           pop     r27
1274:   af 91           pop     r26
1276:   08 95           return;


; Referenced from offset 0xaf6 by rcall
; Referenced from offset 0x17f4 by rcall
; Referenced from offset 0x1810 by rcall
; Referenced from offset 0x1836 by rcall
display_char_r30_at_position_r31_on_display:     ; Parameter r30, r31
1278:   ff 93           push    r31
127a:   f0 68           r31 |= 128;                         ; 0x80
127c:   bd df           set_lcd_position();                 ; Parameter r31
127e:   ce df           output_char_to_lcd();               ; Parameter r30
1280:   ff 91           pop     r31
1282:   08 95           return;


; Referenced from offset 0x7e8 by rcall
; Referenced from offset 0x7ee by rcall
; Referenced from offset 0x1830 by rcall
display_number_on_display_scaled:     ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-99)
1284:   af 93           push    r26
1286:   bf 93           push    r27
1288:   0f 2e           r0 = r31;
128a:   be 2f           r27 = r30;
128c:   f3 e0           r31 = 3;                            ; 0x03
128e:   7e d0           divide();                           ; Parameter r31 r30: r30 /= r31, r31 = r30 % r31
1290:   ae 2f           r26 = r30;
1292:   eb 2f           r30 = r27;
1294:   f2 e1           r31 = 18;                           ; 0x12
1296:   7a d0           divide();                           ; Parameter r31 r30: r30 /= r31, r31 = r30 % r31
1298:   ea 0f           r30 += r26;                         ; No carry
129a:   e2 36           cmp(r30, 0x62);                     ; 98
129c:   09 f4           if (c1 != c2) goto Label_0x12a0;
129e:   e3 e6           r30 = 99;                           ; 0x63

; Referenced from offset 0x129c by brne
; Referenced from offset 0x12d4 by rjmp
Label_0x12a0:
12a0:   fa e0           r31 = 10;                           ; 0x0a
12a2:   74 d0           divide();                           ; Parameter r31 r30: r30 /= r31, r31 = r30 % r31
12a4:   af 2f           r26 = r31;
12a6:   f0 2d           r31 = r0;
12a8:   f0 68           r31 |= 128;                         ; 0x80
12aa:   a6 df           set_lcd_position();                 ; Parameter r31
12ac:   e0 63           r30 |= 48;                          ; 0x30
12ae:   b6 df           output_char_to_lcd();               ; Parameter r30
12b0:   ea 2f           r30 = r26;
12b2:   e0 63           r30 |= 48;                          ; 0x30
12b4:   b3 df           output_char_to_lcd();               ; Parameter r30
12b6:   0f c0           goto Label_0x12d6;

; Referenced from offset 0x80a by rcall
; Referenced from offset 0xa62 by rcall
; Referenced from offset 0xb02 by rcall
; Referenced from offset 0xbaa by rcall
; Referenced from offset 0x1684 by rcall
; Referenced from offset 0x175c by rcall
; Referenced from offset 0x176a by rcall
; Referenced from offset 0x1776 by rcall
; Referenced from offset 0x177c by rcall
; Referenced from offset 0x1782 by rcall
; Referenced from offset 0x178a by rcall
; Referenced from offset 0x1790 by rcall
; Referenced from offset 0x1796 by rcall
display_number_on_display:     ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
12b8:   af 93           push    r26
12ba:   bf 93           push    r27
12bc:   0f 2e           r0 = r31;
12be:   f0 68           r31 |= 128;                         ; 0x80
12c0:   9b df           set_lcd_position();                 ; Parameter r31
12c2:   f4 e6           r31 = 100;                          ; 0x64
12c4:   63 d0           divide();                           ; Parameter r31 r30: r30 /= r31, r31 = r30 % r31
12c6:   e0 63           r30 |= 48;                          ; 0x30
12c8:   e0 33           cmp(r30, 0x30);                     ; 48
12ca:   09 f4           if (c1 != c2) goto Label_0x12ce;
12cc:   e0 e2           r30 = 32;                           ; 0x20

; Referenced from offset 0x12ca by brne
Label_0x12ce:
12ce:   a6 df           output_char_to_lcd();               ; Parameter r30
12d0:   ef 2f           r30 = r31;
12d2:   03 94           r0++;
12d4:   e5 cf           goto Label_0x12a0;

; Referenced from offset 0x12b6 by rjmp
Label_0x12d6:
12d6:   bf 91           pop     r27
12d8:   af 91           pop     r26
12da:   08 95           return;


; Referenced from offset 0x7d2 by rcall
; Referenced from offset 0x7fc by rcall
; Referenced from offset 0x818 by rcall
; Referenced from offset 0x82e by rcall
; Referenced from offset 0x932 by rcall
; Referenced from offset 0xa26 by rcall
; Referenced from offset 0x1688 by rcall
; Referenced from offset 0x1814 by rcall
; Referenced from offset 0x183a by rcall
; Referenced from offset 0x188c by rcall
show_Text_on_Display2:     ; Parameter r26
12dc:   ef 93           push    r30
12de:   ff 93           push    r31
12e0:   bf 93           push    r27
12e2:   cf 93           push    r28
12e4:   2f 93           push    r18
12e6:   bb 27           r27 = 0x00;                         ; 0
12e8:   f0 ec           r31 = 192;                          ; 0xc0
12ea:   0f c0           goto Label_0x130a;

; Referenced from offset 0x592 by rcall
; Referenced from offset 0x596 by rcall
; Referenced from offset 0x7ce by rcall
; Referenced from offset 0x7e2 by rcall
; Referenced from offset 0x82a by rcall
; Referenced from offset 0x84a by rcall
; Referenced from offset 0x85e by rcall
; Referenced from offset 0x872 by rcall
; Referenced from offset 0x888 by rcall
; Referenced from offset 0x8a6 by rcall
; Referenced from offset 0x8b2 by rcall
; Referenced from offset 0x8da by rcall
; Referenced from offset 0x8e8 by rcall
; Referenced from offset 0x92a by rcall
; Referenced from offset 0x92e by rcall
; Referenced from offset 0x954 by rcall
; Referenced from offset 0x958 by rcall
; Referenced from offset 0x970 by rcall
; Referenced from offset 0x97c by rcall
; Referenced from offset 0x9a6 by rcall
; Referenced from offset 0xa22 by rcall
; Referenced from offset 0xb0a by rcall
; Referenced from offset 0x167a by rcall
; Referenced from offset 0x167e by rcall
; Referenced from offset 0x17ee by rcall
; Referenced from offset 0x1802 by rcall
; Referenced from offset 0x1824 by rcall
; Referenced from offset 0x1828 by rcall
; Referenced from offset 0x1890 by rcall
; Referenced from offset 0x1894 by rcall
show_Text_on_Display:     ; Parameter r26
12ec:   ef 93           push    r30
; if string# < 0x64 then our string is displayed on the left, it's 16 chars long, and the address is 0x1cc8 + 16*string#
12ee:   ff 93           push    r31
; if string# >= 0x64 and < 0xc8 then our string is displayed on the right, it's 8 characters, at 0x1dd8 + 16*string#
12f0:   bf 93           push    r27
; if string# >= 0xc8 then string is on the left, it's 8 characters, at 0x1dd8 + 16*(string#-0x64)
12f2:   cf 93           push    r28
12f4:   2f 93           push    r18
12f6:   bb 27           r27 = 0x00;                         ; 0
12f8:   a8 3c           cmp(r26, 0xc8);                     ; 200
12fa:   18 f0           if (Carry) goto Label_0x1302;
12fc:   f0 e8           r31 = 128;                          ; 0x80
12fe:   a4 56           r26 -= 100;                         ; 0x64, no carry
1300:   01 c0           goto Label_0x1304;

; Referenced from offset 0x12fa by brcs
Label_0x1302:
1302:   f8 e8           r31 = 136;                          ; 0x88

; Referenced from offset 0x1300 by rjmp
Label_0x1304:
1304:   a4 36           cmp(r26, 0x64);                     ; 100
1306:   08 f4           if (!Carry) goto Label_0x130a;
1308:   f0 e8           r31 = 128;                          ; 0x80

; Referenced from offset 0x12ea by rjmp
; Referenced from offset 0x1306 by brcc
Label_0x130a:
130a:   76 df           set_lcd_position();                 ; Parameter r31
130c:   a4 36           cmp(r26, 0x64);                     ; 100
130e:   70 f0           if (Carry) goto Label_0x132c;
1310:   c8 e0           r28 = 8;                            ; 0x08
1312:   2c 2f           r18 = r28;
1314:   a4 56           r26 -= 100;                         ; 0x64, no carry
1316:   c3 e0           r28 = 3;                            ; 0x03

; Referenced from offset 0x1320 by brne
Label_0x1318:
1318:   88 94           clc
131a:   aa 1f           r26 += r26;                         ; With carry
131c:   bb 1f           r27 += r27;                         ; With carry
131e:   ca 95           r28--;
1320:   d9 f7           if (c1 != c2) goto Label_0x1318;
1322:   c8 ed           r28 = 216;                          ; 0xd8
1324:   ac 0f           r26 += r28;                         ; No carry
1326:   cd e1           r28 = 29;                           ; 0x1d
1328:   bc 1f           r27 += r28;                         ; With carry
132a:   0c c0           goto Label_0x1344;

; Referenced from offset 0x130e by brcs
Label_0x132c:
132c:   c0 e1           r28 = 16;                           ; 0x10
132e:   2c 2f           r18 = r28;
1330:   c4 e0           r28 = 4;                            ; 0x04

; Referenced from offset 0x133a by brne
Label_0x1332:
1332:   88 94           clc
1334:   aa 1f           r26 += r26;                         ; With carry
1336:   bb 1f           r27 += r27;                         ; With carry
1338:   ca 95           r28--;
133a:   d9 f7           if (c1 != c2) goto Label_0x1332;
133c:   c8 ec           r28 = 200;                          ; 0xc8
133e:   ac 0f           r26 += r28;                         ; No carry
1340:   cc e1           r28 = 28;                           ; 0x1c
1342:   bc 1f           r27 += r28;                         ; With carry

; Referenced from offset 0x132a by rjmp
; Referenced from offset 0x1354 by rjmp
Label_0x1344:
1344:   ea 2f           r30 = r26;
1346:   fb 2f           r31 = r27;
1348:   c8 95           r0 = Flash[r30:r31];
134a:   e0 2d           r30 = r0;
134c:   67 df           output_char_to_lcd();               ; Parameter r30
134e:   2a 95           r18--;
1350:   11 f0           if (c1 == c2) goto Label_0x1356;
1352:   11 96           [r27:r26]++;
1354:   f7 cf           goto Label_0x1344;

; Referenced from offset 0x1350 by breq
Label_0x1356:
1356:   2f 91           pop     r18
1358:   cf 91           pop     r28
135a:   bf 91           pop     r27
135c:   ff 91           pop     r31
135e:   ef 91           pop     r30
1360:   08 95           return;


; Referenced from offset 0x536 by rcall
; Referenced from offset 0x560 by rcall
; Referenced from offset 0x15d6 by rcall
; Referenced from offset 0x1630 by rcall
; Referenced from offset 0x1714 by rcall
; Referenced from offset 0x1a98 by rcall
multiplyr30r31:     ; Parameter r30:r31,returns r30:31 = r30 * r31
1362:   af 93           push    r26
1364:   bf 93           push    r27
1366:   bb 27           r27 = 0x00;                         ; 0
1368:   a8 e0           r26 = 8;                            ; 0x08
136a:   e6 95           r30 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)

; Referenced from offset 0x1376 by brne
Label_0x136c:
136c:   08 f4           if (!Carry) goto Label_0x1370;
136e:   bf 0f           r27 += r31;                         ; No carry

; Referenced from offset 0x136c by brcc
Label_0x1370:
1370:   b7 95           r27 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1372:   e7 95           r30 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1374:   aa 95           r26--;
1376:   d1 f7           if (c1 != c2) goto Label_0x136c;
1378:   fb 2f           r31 = r27;
137a:   bf 91           pop     r27
137c:   af 91           pop     r26
137e:   08 95           return;


; Referenced from offset 0x1388 by brne
; Referenced from offset 0x1666 by rcall
multiply:     ; Parameter r30:r31, r26: r30:r31 *= r26
1380:   88 94           clc
1382:   ee 1f           r30 += r30;                         ; With carry
1384:   ff 1f           r31 += r31;                         ; With carry
1386:   aa 95           r26--;
1388:   d9 f7           if (c1 != c2) goto multiply;
138a:   08 95           return;


; Referenced from offset 0xb76 by rcall
; Referenced from offset 0xb7e by rcall
; Referenced from offset 0x128e by rcall
; Referenced from offset 0x1296 by rcall
; Referenced from offset 0x12a2 by rcall
; Referenced from offset 0x12c4 by rcall
; Referenced from offset 0x15d0 by rcall
divide:     ; Parameter r31 r30: r30 /= r31, r31 = r30 % r31
138c:   af 93           push    r26
138e:   bf 93           push    r27
1390:   ff 23           (r31 == 0) || (r31 < 0);            ; test r31
1392:   11 f4           if (c1 != c2) goto Label_0x1398;
1394:   af e0           r26 = 15;                           ; 0x0f
1396:   6f c1           goto error_handler;

; Referenced from offset 0x1392 by brne
Label_0x1398:
1398:   aa 1b           r26 -= r26;                         ; No carry
139a:   b9 e0           r27 = 9;                            ; 0x09

; Referenced from offset 0x13ae by rjmp
; Referenced from offset 0x13b2 by rjmp
Label_0x139c:
139c:   ee 1f           r30 += r30;                         ; With carry
139e:   ba 95           r27--;
13a0:   09 f4           if (c1 != c2) goto Label_0x13a4;
13a2:   08 c0           goto Label_0x13b4;

; Referenced from offset 0x13a0 by brne
Label_0x13a4:
13a4:   aa 1f           r26 += r26;                         ; With carry
13a6:   af 1b           r26 -= r31;                         ; No carry
13a8:   18 f4           if (!Carry) goto Label_0x13b0;
13aa:   af 0f           r26 += r31;                         ; No carry
13ac:   88 94           clc
13ae:   f6 cf           goto Label_0x139c;

; Referenced from offset 0x13a8 by brcc
Label_0x13b0:
13b0:   08 94           sec
13b2:   f4 cf           goto Label_0x139c;

; Referenced from offset 0x13a2 by rjmp
Label_0x13b4:
13b4:   fa 2f           r31 = r26;
13b6:   bf 91           pop     r27
13b8:   af 91           pop     r26
13ba:   08 95           return;


; Referenced from offset 0x546 by rcall
; Referenced from offset 0x570 by rcall
; Referenced from offset 0xa5e by rcall
; Referenced from offset 0x165a by rcall
; Referenced from offset 0x166c by rcall
divide_word:     ; Parameter r26:r27 r30:r31: r30:r31 /= r26:r27, r26:r27 = r30:r31 % r26:r27
13bc:   bd 17           cmp(r27, r29);
13be:   ad 07           cmp(r26, r29);                      ; with carry
13c0:   11 f4           if (c1 != c2) goto Label_0x13c6;
13c2:   af e0           r26 = 15;                           ; 0x0f
13c4:   58 c1           goto error_handler;

; Referenced from offset 0x13c0 by brne
Label_0x13c6:
13c6:   2f 93           push    r18
13c8:   2f 92           push    r2
13ca:   cf 93           push    r28
13cc:   22 27           r18 = 0x00;                         ; 0
13ce:   22 18           r2 -= r2;                           ; No carry
13d0:   c1 e1           r28 = 17;                           ; 0x11

; Referenced from offset 0x13ec by rjmp
; Referenced from offset 0x13f0 by rjmp
Label_0x13d2:
13d2:   ee 1f           r30 += r30;                         ; With carry
13d4:   ff 1f           r31 += r31;                         ; With carry
13d6:   ca 95           r28--;
13d8:   09 f4           if (c1 != c2) goto Label_0x13dc;
13da:   0b c0           goto Label_0x13f2;

; Referenced from offset 0x13d8 by brne
Label_0x13dc:
13dc:   22 1f           r18 += r18;                         ; With carry
13de:   22 1c           r2 += r2;                           ; With carry
13e0:   2a 1b           r18 -= r26;                         ; No carry
13e2:   2b 0a           r2 += r27;                          ; With carry
13e4:   20 f4           if (!Carry) goto Label_0x13ee;
13e6:   2a 0f           r18 += r26;                         ; No carry
13e8:   2b 1e           r2 += r27;                          ; With carry
13ea:   88 94           clc
13ec:   f2 cf           goto Label_0x13d2;

; Referenced from offset 0x13e4 by brcc
Label_0x13ee:
13ee:   08 94           sec
13f0:   f0 cf           goto Label_0x13d2;

; Referenced from offset 0x13da by rjmp
Label_0x13f2:
13f2:   cf 91           pop     r28
13f4:   2f 90           pop     r2
13f6:   2f 91           pop     r18
13f8:   08 95           return;


; Referenced from offset 0x1402 by brne
; Referenced from offset 0x15da by rcall
; Referenced from offset 0x162c by rcall
; Referenced from offset 0x1634 by rcall
rotate_right:     ; Parameter r30:r31 r26
13fa:   88 94           clc
13fc:   f7 95           r31 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
13fe:   e7 95           r30 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1400:   aa 95           r26--;
1402:   d9 f7           if (c1 != c2) goto rotate_right;
1404:   08 95           return;


; Referenced from offset 0x1722 by rcall
FET_calibration_runs_at_startup:
1406:   af ef           r26 = 0xff;                         ; 255
; r6 is [x9C] Mode Switch Ramp Value Counter
1408:   6a 2e           r6 = r26;
; r11 is a copy of [x19C] Channel B: Mode Switch Ramp Value Counter
140a:   ba 2e           r11 = r26;
; Looks like this routine sets up the DAC, enables the FETs a pair at a time, and measures the residual current to use as offset later
140c:   00 27           r16 = 0x00;                         ; 0
140e:   bb 27           r27 = 0x00;                         ; 0
; 1.5 boxes set this to 83 instead
1410:   a4 e6           r26 = 100;                          ; 0x64
1412:   ac 83           Memory[[r28:r29]+4] = r26;
1414:   ad 83           Memory[[r28:r29]+5] = r26;

; Referenced from offset 0x1482 by rjmp
Label_0x1416:
1416:   d0 d0           setup_dac_levels_0x205_x206_based_on_pot_and_ramp_and_levels();
1418:   3e d0           send_data_to_spdr();
141a:   a4 e0           r26 = 4;                            ; 0x04
141c:   e4 d8           sleep();                            ; Parameter r26
; Do a one time ADC run /64 with no interrupts for ADC0
141e:   d7 b9           IO[ADMUX] = r29;
1420:   a3 ec           r26 = 195;                          ; 0xc3
1422:   a6 b9           IO[ADCSR] = r26;
1424:   a0 e4           r26 = 64;                           ; 0x40
1426:   df d8           sleep();                            ; Parameter r26
1428:   d7 b9           IO[ADMUX] = r29;
142a:   a3 ec           r26 = 195;                          ; 0xc3
142c:   a6 b9           IO[ADCSR] = r26;
142e:   a0 e8           r26 = 128;                          ; 0x80
1430:   da d8           sleep();                            ; Parameter r26

; Referenced from offset 0x1470 by rjmp
; Referenced from offset 0x1474 by rjmp
Label_0x1432:
1432:   c2 d0           setup_dac_levels_0x205_x206_based_on_pot_and_ramp_and_levels();
1434:   30 d0           send_data_to_spdr();
1436:   a3 e0           r26 = 3;                            ; 0x03
1438:   d6 d8           sleep();                            ; Parameter r26
143a:   00 30           cmp(r16, 0);
143c:   19 f4           if (c1 != c2) goto Label_0x1444;
143e:   ac e0           r26 = 12;                           ; 0x0c
; q5=1 q6=1 q8=0 q7=0
1440:   a8 bb           IO[PORTB] = r26;
1442:   02 c0           goto Label_0x1448;

; Referenced from offset 0x143c by brne
Label_0x1444:
1444:   a3 e0           r26 = 3;                            ; 0x03
; q5=0 q6=0 q8=1 q7=1
1446:   a8 bb           IO[PORTB] = r26;

; Referenced from offset 0x1442 by rjmp
Label_0x1448:
1448:   a2 e0           r26 = 2;                            ; 0x02
144a:   cd d8           sleep();                            ; Parameter r26
; Do a one time ADC run /64 with no interrupts for ADC0
144c:   a6 ec           r26 = 198;                          ; 0xc6
144e:   a6 b9           IO[ADCSR] = r26;
1450:   a0 e4           r26 = 64;                           ; 0x40

; Referenced from offset 0x1454 by brne
Label_0x1452:
1452:   aa 95           r26--;
1454:   f1 f7           if (c1 != c2) goto Label_0x1452;
; q5,6,7,8=0
1456:   d8 bb           IO[PORTB] = r29;

; Referenced from offset 0x145a by rjmp
wait_until_adc0_conversion:
1458:   36 99           skipif (!IO_BIT[ADCSR,6])           ; 0x40 = 64
145a:   fe cf           goto wait_until_adc0_conversion;
145c:   a4 b1           r26 = IO[ADCL];
145e:   f5 b1           r31 = IO[ADCH];
1460:   a0 31           cmp(r26, 0x10);                     ; 16
1462:   48 f4           if (!Carry) goto Label_0x1476         bug? the 1.5 bootloader jumps here;
1464:   b3 95           r27++;
1466:   b0 34           cmp(r27, 0x40);                     ; 64
1468:   a0 f4           if (!Carry) goto fet_calibration_failed;
146a:   00 30           cmp(r16, 0);
146c:   11 f4           if (c1 != c2) goto fet_calibration_failed;
; 0x6b-0x406b-channela-fet-calibration
146e:   bb 87           Memory[[r28:r29]+11] = r27;
1470:   e0 cf           goto Label_0x1432;

; Referenced from offset 0x146c by brne
; 0x6c-0x406c-channelb-fet-calibration
1472:   bc 87           Memory[[r28:r29]+12] = r27;
1474:   de cf           goto Label_0x1432;

; Referenced from offset 0x1462 by brcc
Label_0x1476         bug? the 1.5 bootloader jumps here:
1476:   b0 30           cmp(r27, 0);
1478:   61 f0           if (c1 == c2) goto fet_calibration_failed;
147a:   00 30           cmp(r16, 0);
147c:   19 f4           if (c1 != c2) goto finished_fet_calibration;
; Do the same again with the other set of FETs
147e:   01 e0           r16 = 1;                            ; 0x01
1480:   bb 27           r27 = 0x00;                         ; 0
1482:   c9 cf           goto Label_0x1416;

; Referenced from offset 0x147c by brne
finished_fet_calibration:
1484:   dc 83           Memory[[r28:r29]+4] = r29;
1486:   dd 83           Memory[[r28:r29]+5] = r29;
1488:   97 d0           setup_dac_levels_0x205_x206_based_on_pot_and_ramp_and_levels();
148a:   05 d0           send_data_to_spdr();
148c:   af ef           r26 = 0xff;                         ; 255
148e:   ab d8           sleep();                            ; Parameter r26
1490:   08 95           return;


; Referenced from offset 0x1468 by brcc
; Referenced from offset 0x1478 by breq
fet_calibration_failed:
1492:   a4 e1           r26 = 20;                           ; 0x14
1494:   f0 c0           goto error_handler;

; Referenced from offset 0x60a by rcall
; Referenced from offset 0x1418 by rcall
; Referenced from offset 0x1434 by rcall
; Referenced from offset 0x148a by rcall
; Referenced from offset 0x179a by rcall
send_data_to_spdr:
1496:   94 98           IO_BIT[PORTD,4] = false;            ; 0x10 = 16
; pin D4 is DAC CS
1498:   a4 e0           r26 = 4;                            ; 0x04
149a:   a0 93 08 02     spi_transfer_length = r26;          ; 0x0208
149e:   a0 91 00 05     r26 = spdr_value_0;                 ; 0x0500
14a2:   af b9           IO[SPDR] = r26;
14a4:   08 95           return;


; Referenced from offset 0x00 by jmp
; Referenced from offset 0x0c by jmp
; Referenced from offset 0x10 by jmp
; Referenced from offset 0x14 by jmp
; Referenced from offset 0x20 by jmp
; Referenced from offset 0x30 by jmp
; Referenced from offset 0x34 by jmp
; Referenced from offset 0x3c by jmp
; Referenced from offset 0x40 by jmp
; Referenced from offset 0x44 by jmp
; Referenced from offset 0x48 by jmp
; Referenced from offset 0x4c by jmp
; Referenced from offset 0x50 by jmp
; Referenced from offset 0x1a7a by rjmp
RESET:
14a6:   f8 94           Disable_Interrupts();
14a8:   ee 27           r30 = 0x00;                         ; 0
; q5,6,7,8=0
14aa:   e8 bb           IO[PORTB] = r30;
14ac:   ff 27           r31 = 0x00;                         ; 0
14ae:   00 24           r0 = 0x00;                          ; 0

; Referenced from offset 0x14b4 by brne
Label_0x14b0:
14b0:   01 92           Memory[[r30:r31]++] = r0;
14b2:   ee 31           cmp(r30, 0x1e);                     ; 30
14b4:   e9 f7           if (c1 != c2) goto Label_0x14b0;
14b6:   d2 e0           r29 = 2;                            ; 0x02
14b8:   c0 e6           r28 = 96;                           ; 0x60
14ba:   e0 e2           r30 = 32;                           ; 0x20

; Referenced from offset 0x14c2 by brne
Label_0x14bc:
14bc:   01 92           Memory[[r30:r31]++] = r0;
14be:   ec 17           cmp(r30, r28);
14c0:   fd 07           cmp(r31, r29);                      ; with carry
14c2:   e1 f7           if (c1 != c2) goto Label_0x14bc;
14c4:   ef ef           r30 = 0xff;                         ; 255
14c6:   ff e3           r31 = 63;                           ; 0x3f
14c8:   c8 95           r0 = Flash[r30:r31];
; Read the OCDR byte from 0x3ff and write it to the register (timing, 8MHz)
14ca:   01 be           IO[OCDR] = r0;
14cc:   ef e5           r30 = 95;                           ; 0x5f
; Set stack to 0x45f
14ce:   ed bf           IO[SPL] = r30;
14d0:   f4 e0           r31 = 4;                            ; 0x04
14d2:   fe bf           IO[SPH] = r31;
14d4:   dd 27           r29 = 0x00;                         ; 0
14d6:   db bb           IO[PORTA] = r29;
14d8:   af eb           r26 = 191;                          ; 0xbf
; Set DDRB to 1 0 1 1 1 1 1 1  DDRC to 1 1 1 1 1 1 1 1  DDRD to 1 1 1 1 0 0 1 0
14da:   a7 bb           IO[DDRB] = r26;
14dc:   af ef           r26 = 0xff;                         ; 255
14de:   a4 bb           IO[DDRC] = r26;
14e0:   a2 ef           r26 = 242;                          ; 0xf2
14e2:   a1 bb           IO[DDRD] = r26;
14e4:   a0 e7           r26 = 112;                          ; 0x70
; set portd[bit4,bit5,bit6]
14e6:   a2 bb           IO[PORTD] = r26;
14e8:   a0 e1           r26 = 16;                           ; 0x10
; set pin b4 high
14ea:   a8 bb           IO[PORTB] = r26;
14ec:   a0 e8           r26 = 128;                          ; 0x80
; disable the Analog Comparator
14ee:   a8 b9           IO[ACSR] = r26;
14f0:   a8 95           wdr
14f2:   a8 e1           r26 = 24;                           ; 0x18
; disable the watchdog timer
14f4:   a1 bd           IO[WDTCR] = r26;
14f6:   a0 e1           r26 = 16;                           ; 0x10
14f8:   a1 bd           IO[WDTCR] = r26;
14fa:   a0 ed           r26 = 208;                          ; 0xd0
; set SPCR : Enable SPI interrupts, Enable SPI, MSB first, SPI Master mode
14fc:   ad b9           IO[SPCR] = r26;
14fe:   c0 e6           r28 = 96;                           ; 0x60
1500:   a3 e0           r26 = 3;                            ; 0x03
; setup timer0 as clk/64, setup timer 1b as clk/8, setup timer2 as external clock on t0 pin (rising edge)
1502:   a3 bf           IO[TCCR0] = r26;
1504:   a2 e0           r26 = 2;                            ; 0x02
1506:   ae bd           IO[TCCR1B] = r26;
1508:   a7 e0           r26 = 7;                            ; 0x07
150a:   a5 bd           IO[TCCR2] = r26;
150c:   af ef           r26 = 0xff;                         ; 255
150e:   a0 93 00 05     spdr_value_0 = r26;                 ; 0x0500
1512:   78 94           Enable_Interrupts();
1514:   59 de           initialize_lcd();
1516:   1a d0           set_initial_module_parameters_and_setup_r4-14_with_a_and_b_values(); ; CallTable_24
1518:   3b d0           get_advanced_settings_from_firmware_defaults_to_memory();
151a:   ce d0           startup_checks_battery_checks_reset_displays_msgs(); ; Parameter r28:r29
151c:   f8 94           Disable_Interrupts();
; setup MCUCR (int0 and int1 trigger on rising edge)
151e:   af e0           r26 = 15;                           ; 0x0f
1520:   a5 bf           IO[MCUCR] = r26;
1522:   a9 e1           r26 = 25;                           ; 0x19
; setup serial port frequency (0x19) [8MHz at 19200], control reg: enable RX interrupt, rx and tx enable
1524:   a9 b9           IO[UBRRL] = r26;
1526:   a8 e9           r26 = 152;                          ; 0x98
1528:   aa b9           IO[UCSRB] = r26;
152a:   af ef           r26 = 0xff;                         ; 255
152c:   a8 bf           IO[TIFR] = r26;
152e:   a9 e1           r26 = 25;                           ; 0x19
; setup timer interrupt mask: ocie1a, ocie1b, toie0 (overflow on timer 0), watchdog to 32k cycles
1530:   a9 bf           IO[TIMSK] = r26;
1532:   78 94           Enable_Interrupts();
1534:   a1 e0           r26 = 1;                            ; 0x01
; 0x6d-$406d-menu-state set to 1 (in a startup screen or menu)
1536:   ad 87           Memory[[r28:r29]+13] = r26;
1538:   09 d0           set_initial_module_parameters_and_setup_r4-14_with_a_and_b_values(); ; CallTable_24
153a:   1f d0           copy_eeprom_and_flash_defaults_to_memory(); ; CallTable_28
153c:   af ef           r26 = 0xff;                         ; 255
; $4070-execute_command and $4071-execute_command = 0xff (no commands)
153e:   a8 8b           Memory[[r28:r29]+16] = r26;
1540:   a9 8b           Memory[[r28:r29]+17] = r26;
1542:   a8 95           wdr
1544:   a9 e0           r26 = 9;                            ; 0x09
1546:   a1 bd           IO[WDTCR] = r26;
; finished with the setup, goto main loop
1548:   0c 94 2a 00     goto Main;

; Referenced from offset 0x606 by rcall
; Referenced from offset 0x1516 by rcall
; Referenced from offset 0x1538 by rcall
set_initial_module_parameters_and_setup_r4-14_with_a_and_b_values:     ; CallTable_24
154c:   ec e9           r30 = 156;                          ; 0x9c
; copy_flash_0x1f9c_0x1fa4_to_memory_0x80_0x0188_and_call_CallTable_29
154e:   ff e1           r31 = 31;                           ; 0x1f
1550:   bb 27           r27 = 0x00;                         ; 0
1552:   a0 e8           r26 = 128;                          ; 0x80

; Referenced from offset 0x155c by brcs
Label_0x1554:
1554:   c8 95           r0 = Flash[r30:r31];
1556:   0d 92           Memory[[r26:r27]++] = r0;
1558:   31 96           [r31:r30]++;
155a:   a0 3c           cmp(r26, 0xc0);                     ; 192
155c:   d8 f3           if (Carry) goto Label_0x1554;
155e:   e4 ea           r30 = 164;                          ; 0xa4
1560:   ff e1           r31 = 31;                           ; 0x1f
1562:   a8 e8           r26 = 136;                          ; 0x88
1564:   b1 e0           r27 = 1;                            ; 0x01

; Referenced from offset 0x156e by brcs
Label_0x1566:
1566:   c8 95           r0 = Flash[r30:r31];
1568:   0d 92           Memory[[r26:r27]++] = r0;
156a:   31 96           [r31:r30]++;
156c:   a0 3c           cmp(r26, 0xc0);                     ; 192
156e:   d8 f3           if (Carry) goto Label_0x1566;
1570:   c0 e6           r28 = 96;                           ; 0x60
1572:   a6 e0           r26 = 6;                            ; 0x06
1574:   0e 94 a9 01     CallTable_29_set_up_r4-14_with_a_and_b_values(); ; Parameter r28:r29
1578:   08 95           return;


; Referenced from offset 0x153a by rcall
copy_eeprom_and_flash_defaults_to_memory:     ; CallTable_28
157a:   0a d0           get_advanced_settings_from_firmware_defaults_to_memory();
; copy_flash_0x1fdc_to_memory_0x1f0_and_copy_eeprom_0x08_to_0x1f3
157c:   e3 ef           r30 = 243;                          ; 0xf3
157e:   f1 e0           r31 = 1;                            ; 0x01
1580:   a8 e0           r26 = 8;                            ; 0x08
1582:   b0 e0           r27 = 0;                            ; 0x00

; Referenced from offset 0x158c by brne
Label_0x1584:
1584:   2b d2           read_from_eeprom();                 ; Parameter r26:r27, returns r0
1586:   01 92           Memory[[r30:r31]++] = r0;
1588:   11 96           [r27:r26]++;
158a:   e0 30           cmp(r30, 0);
158c:   d9 f7           if (c1 != c2) goto Label_0x1584;
158e:   08 95           return;


; Referenced from offset 0x942 by rcall
; Referenced from offset 0x1518 by rcall
; Referenced from offset 0x157a by rcall
; Referenced from offset 0x17da by rcall
; Referenced from offset 0x17e4 by rcall
; Referenced from offset 0x1896 by rcall
get_advanced_settings_from_firmware_defaults_to_memory:
1590:   a0 ef           r26 = 240;                          ; 0xf0
; copy flash 0x1fdc to memory 0x01f0 (16 bytes)
1592:   b1 e0           r27 = 1;                            ; 0x01
1594:   ec ed           r30 = 220;                          ; 0xdc
1596:   ff e1           r31 = 31;                           ; 0x1f

; Referenced from offset 0x15a0 by brne
Label_0x1598:
1598:   c8 95           r0 = Flash[r30:r31];
159a:   0d 92           Memory[[r26:r27]++] = r0;
159c:   31 96           [r31:r30]++;
159e:   a0 30           cmp(r26, 0);
15a0:   d9 f7           if (c1 != c2) goto Label_0x1598;
15a2:   08 95           return;


; Referenced from offset 0x926 by rcall
; Referenced from offset 0x944 by rcall
; Referenced from offset 0x17dc by rcall
; Referenced from offset 0x17e6 by rcall
store_advanced_settings_from_memory_to_eeprom:
15a4:   e3 ef           r30 = 243;                          ; 0xf3
; copy memory 0x01f3 to eeprom 0x8 (12 bytes)
15a6:   f1 e0           r31 = 1;                            ; 0x01
15a8:   a8 e0           r26 = 8;                            ; 0x08
15aa:   b0 e0           r27 = 0;                            ; 0x00

; Referenced from offset 0x15b4 by brne
Label_0x15ac:
15ac:   01 90           r0 = Memory[[r30:r31]++];
15ae:   21 d2           write_to_eeprom();                  ; Parameter r26:r27 (address), r0 (value)
15b0:   11 96           [r27:r26]++;
15b2:   e0 30           cmp(r30, 0);
15b4:   d9 f7           if (c1 != c2) goto Label_0x15ac;
15b6:   08 95           return;


; Referenced from offset 0x316 by call
; Referenced from offset 0x608 by rcall
; Referenced from offset 0x1416 by rcall
; Referenced from offset 0x1432 by rcall
; Referenced from offset 0x1488 by rcall
; Referenced from offset 0x1798 by rcall
setup_dac_levels_0x205_x206_based_on_pot_and_ramp_and_levels:
15b8:   af 93           push    r26
15ba:   bf 93           push    r27
; 0x4064-Level Pot A - CBLOCK_POT_A_OFFSET (ADC4)
15bc:   ec 81           r30 = Memory[[r28:r29]+4];
; r6 is [x9C] Mode Switch Ramp Value Counter
15be:   26 2d           r18 = r6;
; 0x6b-0x406b-channela-fet-calibration
15c0:   2b 84           r2 = Memory[[r28:r29]+11];
15c2:   00 24           r0 = 0x00;                          ; 0

; Referenced from offset 0x15ec by rjmp
Label_0x15c4:
15c4:   a0 91 f4 01     r26 = COMM_POWER_LEVEL;             ; 0x01f4
15c8:   a4 30           cmp(r26, 0x04);                     ; 4
15ca:   b0 f4           if (!Carry) goto Label_0x15f8;
15cc:   f5 e0           r31 = 5;                            ; 0x05
15ce:   fa 1b           r31 -= r26;                         ; No carry
; divide A pot level by power level and add $406b, multiply by ramp value, then same for B pot and $406c, results into 0x205 and 0x206
15d0:   dd de           divide();                           ; Parameter r31 r30: r30 /= r31, r31 = r30 % r31
15d2:   e2 0d           r30 += r2;                          ; No carry
15d4:   f2 2f           r31 = r18;
15d6:   c5 de           multiplyr30r31();                   ; Parameter r30:r31,returns r30:31 = r30 * r31
15d8:   a8 e0           r26 = 8;                            ; 0x08
15da:   0f df           rotate_right();                     ; Parameter r30:r31 r26
15dc:   00 20           (r0 == 0) || (r0 < 0);              ; test r0
15de:   39 f4           if (c1 != c2) goto Label_0x15ee;
15e0:   e0 93 05 02     channel_a_dac_level = r30;          ; 0x0205
15e4:   03 94           r0++;
15e6:   ed 81           r30 = Memory[[r28:r29]+5];
15e8:   fb 2d           r31 = r11;
; 0x6c-0x406c-channelb-fet-calibration
15ea:   2c 84           r2 = Memory[[r28:r29]+12];
15ec:   eb cf           goto Label_0x15c4;

; Referenced from offset 0x15de by brne
Label_0x15ee:
15ee:   e0 93 06 02     channel_b_dac_level = r30;          ; 0x0206
15f2:   bf 91           pop     r27
15f4:   af 91           pop     r26
15f6:   08 95           return;


; Referenced from offset 0x15ca by brcc
Label_0x15f8:
15f8:   a0 e1           r26 = 16;                           ; 0x10
15fa:   3d c0           goto error_handler;

; Referenced from offset 0x312 by call
setup_ma_value_in_0x20d_from_knob_after_averaging_and_scaling:
15fc:   e9 81           r30 = Memory[[r28:r29]+1];
; r30 is $4061 Multi Adjust Offset, unless [$4074-random1] says we're in random1 mode,in that case read r30 from ranom byte stored in 0x0184
15fe:   ac 89           r26 = Memory[[r28:r29]+20];
1600:   aa 23           (r26 == 0) || (r26 < 0);            ; test r26
1602:   11 f0           if (c1 == c2) goto Label_0x1608;
1604:   e0 91 84 01     r30 = Memory[0x0184];               ; 388

; Referenced from offset 0x1602 by breq
Label_0x1608:
1608:   a0 91 f0 01     r26 = counter_for_MA_averaging_0x1c0-0x1cf; ; 0x01f0
; store MA at location 100+mem[1f0].
160c:   b1 e0           r27 = 1;                            ; 0x01
; increment mem[1f0] which is a counter that runs from c0 to cf
160e:   ed 93           Memory[[r26:r27]++] = r30;
1610:   a0 3d           cmp(r26, 0xd0);                     ; 208
1612:   08 f0           if (Carry) goto Label_0x1616;
1614:   a0 ec           r26 = 192;                          ; 0xc0

; Referenced from offset 0x1612 by brcs
Label_0x1616:
1616:   a0 93 f0 01     counter_for_MA_averaging_0x1c0-0x1cf = r26; ; 0x01f0
161a:   ee 27           r30 = 0x00;                         ; 0
161c:   ff 27           r31 = 0x00;                         ; 0
161e:   a0 ed           r26 = 208;                          ; 0xd0

; Referenced from offset 0x1628 by brne
Label_0x1620:
1620:   2e 91           r18 = Memory[--[r26:r27]];
1622:   e2 0f           r30 += r18;                         ; No carry
1624:   fd 1f           r31 += r29;                         ; With carry
1626:   a0 3c           cmp(r26, 0xc0);                     ; 192
1628:   d9 f7           if (c1 != c2) goto Label_0x1620;
; add up the last 16 MA values into r30:r31 then divide by 16, multiply by 48, divide by 16
162a:   a4 e0           r26 = 4;                            ; 0x04
162c:   e6 de           rotate_right();                     ; Parameter r30:r31 r26
162e:   f0 e3           r31 = 48;                           ; 0x30
1630:   98 de           multiplyr30r31();                   ; Parameter r30:r31,returns r30:31 = r30 * r31
1632:   a4 e0           r26 = 4;                            ; 0x04
1634:   e2 de           rotate_right();                     ; Parameter r30:r31 r26
1636:   ff 23           (r31 == 0) || (r31 < 0);            ; test r31
1638:   09 f4           if (c1 != c2) goto Label_0x163c;
163a:   01 c0           goto Label_0x163e;

; Referenced from offset 0x1638 by brne
Label_0x163c:
163c:   ef ef           r30 = 0xff;                         ; 255

; Referenced from offset 0x163a by rjmp
Label_0x163e:
163e:   e0 95           com     r30
1640:   2e 2e           r2 = r30;
; r27=$4086-ma-high-end, r26=$4087-ma-low-end
1642:   be a1           r27 = Memory[[r28:r29]+38];
1644:   af a1           r26 = Memory[[r28:r29]+39];
1646:   04 d0           scale_r2_between_r26_and_r27_result_in_r30();
; 0x0f-$400f r15[bit0-disable-pots]
1648:   f0 fe           skipif (bit(r15,0))
164a:   e0 93 0d 02     current_multi_adjust_value = r30;   ; 0x020d
164e:   08 95           return;


; Referenced from offset 0x1646 by rcall
scale_r2_between_r26_and_r27_result_in_r30:
1650:   2b 2f           r18 = r27;
1652:   ab 1b           r26 -= r27;                         ; No carry
1654:   ff e7           r31 = 127;                          ; 0x7f
1656:   e0 e8           r30 = 128;                          ; 0x80
1658:   bb 27           r27 = 0x00;                         ; 0
165a:   b0 de           divide_word();                      ; Parameter r26:r27 r30:r31: r30:r31 /= r26:r27, r26:r27 = r30:r31 % r26:r27
165c:   ef 93           push    r30
165e:   ff 93           push    r31
1660:   e2 2d           r30 = r2;
1662:   ff 27           r31 = 0x00;                         ; 0
1664:   a7 e0           r26 = 7;                            ; 0x07
1666:   8c de           multiply();                         ; Parameter r30:r31, r26: r30:r31 *= r26
1668:   bf 91           pop     r27
166a:   af 91           pop     r26
166c:   a7 de           divide_word();                      ; Parameter r26:r27 r30:r31: r30:r31 /= r26:r27, r26:r27 = r30:r31 % r26:r27
166e:   e2 0f           r30 += r18;                         ; No carry
1670:   08 f4           if (!Carry) goto Label_0x1674;
1672:   ef ef           r30 = 0xff;                         ; 255

; Referenced from offset 0x1670 by brcc
Label_0x1674:
1674:   08 95           return;


; Referenced from offset 0x3ea by jmp
; Referenced from offset 0x796 by rjmp
; Referenced from offset 0x914 by rcall
; Referenced from offset 0xb70 by rcall
; Referenced from offset 0xbba by rjmp
; Referenced from offset 0x1396 by rjmp
; Referenced from offset 0x13c4 by rjmp
; Referenced from offset 0x1494 by rjmp
; Referenced from offset 0x15fa by rjmp
; Referenced from offset 0x16e4 by rjmp
; Referenced from offset 0x1a1e by rjmp
error_handler:     ; CallTable_23_37_38_39
1676:   2a 2f           r18 = r26;
1678:   a4 e6           r26 = 100;                          ; 0x64
; display "Failure", spaces, failure num
167a:   38 de           show_Text_on_Display();             ; Parameter r26
167c:   ab ec           r26 = 203;                          ; 0xcb
167e:   36 de           show_Text_on_Display();             ; Parameter r26
1680:   f8 e0           r31 = 8;                            ; 0x08
1682:   e2 2f           r30 = r18;
1684:   19 de           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)

; Referenced from offset 0x598 by jmp
display_shut_off_power_and_halt:
1686:   a0 e0           r26 = 0;                            ; 0x00
; display "Shut off power"
1688:   29 de           show_Text_on_Display2();            ; Parameter r26
168a:   f8 94           Disable_Interrupts();
168c:   d9 bf           IO[TIMSK] = r29;
; disable interrupts
168e:   db bf           IO[GICR] = r29;
1690:   a0 ee           r26 = 224;                          ; 0xe0
; turns off D
1692:   a2 bb           IO[PORTD] = r26;
1694:   a8 bb           IO[PORTB] = r26;
1696:   a8 e1           r26 = 24;                           ; 0x18
1698:   a1 bd           IO[WDTCR] = r26;
169a:   a0 e1           r26 = 16;                           ; 0x10
169c:   a1 bd           IO[WDTCR] = r26;
169e:   a0 e6           r26 = 96;                           ; 0x60
16a0:   a5 bf           IO[MCUCR] = r26;

; Referenced from offset 0x16b6 by rjmp
Label_0x16a2:
16a2:   24 e0           r18 = 4;                            ; 0x04

; Referenced from offset 0x16aa by brne
Label_0x16a4:
16a4:   af ef           r26 = 0xff;                         ; 255
16a6:   cb d0           rough_delay_no_timer_r26_times_28050ish_clockcycles(); ; Parameter r26
16a8:   2a 95           r18--;
16aa:   e1 f7           if (c1 != c2) goto Label_0x16a4;
16ac:   d2 bb           IO[PORTD] = r29;
16ae:   a4 e0           r26 = 4;                            ; 0x04
16b0:   c6 d0           rough_delay_no_timer_r26_times_28050ish_clockcycles(); ; Parameter r26
16b2:   a0 ee           r26 = 224;                          ; 0xe0
16b4:   a2 bb           IO[PORTD] = r26;
16b6:   f5 cf           goto Label_0x16a2;

; Referenced from offset 0x151a by rcall
startup_checks_battery_checks_reset_displays_msgs:     ; Parameter r28:r29
16b8:   a6 e5           r26 = 86;                           ; 0x56
; $4062-adc2-psu-voltage is 0x56 and $4063-adc3-battery-voltage is 0x85 (defaults)
16ba:   aa 83           Memory[[r28:r29]+2] = r26;
16bc:   a5 e8           r26 = 133;                          ; 0x85
16be:   ab 83           Memory[[r28:r29]+3] = r26;
16c0:   2e da           enable_ADC_and_set_r17[3]();        ; CallTable_34

; Referenced from offset 0x16c4 by rjmp
Label_0x16c2:
16c2:   13 fd           skipif (!bit(r17,3))
16c4:   fe cf           goto Label_0x16c2;
16c6:   2b da           enable_ADC_and_set_r17[3]();        ; CallTable_34

; Referenced from offset 0x16ca by rjmp
Label_0x16c8:
16c8:   13 fd           skipif (!bit(r17,3))
16ca:   fe cf           goto Label_0x16c8;
; run ADC 3 times, look to see what we have in $4063-adc3-battery-voltage, if it's less than 0x8e jump to battery_low display and halt
16cc:   28 da           enable_ADC_and_set_r17[3]();        ; CallTable_34

; Referenced from offset 0x16d0 by rjmp
Label_0x16ce:
16ce:   13 fd           skipif (!bit(r17,3))
16d0:   fe cf           goto Label_0x16ce;
16d2:   ab 81           r26 = Memory[[r28:r29]+3];
16d4:   ae 38           cmp(r26, 0x8e);                     ; 142
16d6:   10 f4           if (!Carry) goto Label_0x16dc;
16d8:   0c 94 c8 02     goto display_battery_low;

; Referenced from offset 0x16d6 by brcc
Label_0x16dc:
16dc:   ba 81           r27 = Memory[[r28:r29]+2];
; look at $4062-adc2-psu-voltage, if it's greater than 0x92 then error 21, halt (psu voltage too high!)
16de:   b2 39           cmp(r27, 0x92);                     ; 146
16e0:   10 f0           if (Carry) goto Label_0x16e6;
16e2:   a5 e1           r26 = 21;                           ; 0x15
16e4:   c8 cf           goto error_handler;

; Referenced from offset 0x16e0 by brcs
Label_0x16e6:
16e6:   ee 27           r30 = 0x00;                         ; 0
16e8:   a2 3b           cmp(r26, 0xb2);                     ; 178
; our box has a battery
16ea:   08 f4           if (!Carry) goto Label_0x16ee;
16ec:   e1 60           r30 |= 1;                           ; 0x01

; Referenced from offset 0x16ea by brcc
Label_0x16ee:
16ee:   b0 34           cmp(r27, 0x40);                     ; 64
16f0:   20 f0           if (Carry) goto Label_0x16fa;
16f2:   e2 60           r30 |= 2;                           ; 0x02
16f4:   b3 36           cmp(r27, 0x63);                     ; 99
16f6:   10 f4           if (!Carry) goto Label_0x16fc;
16f8:   0c 94 c8 02     goto display_battery_low;

; Referenced from offset 0x16f6 by brcc
Label_0x16fc:
16fc:   e0 93 15 02     power_status_bits = r30;            ; 0x0215
; above sets power status bits [bit0] if we have a battery, [bit1] is PSU is connected, next figure out battery percentage
1700:   b2 e9           r27 = 146;                          ; 0x92
1702:   e1 ff           skipif (bit(r30,1))
1704:   b4 50           r27 -= 4;                           ; 0x04, no carry
1706:   ea 2f           r30 = r26;
1708:   eb 1b           r30 -= r27;                         ; No carry
170a:   08 f4           if (!Carry) goto Label_0x170e;
170c:   ee 27           r30 = 0x00;                         ; 0

; Referenced from offset 0x170a by brcc
Label_0x170e:
170e:   e3 31           cmp(r30, 0x13);                     ; 19
1710:   18 f4           if (!Carry) goto Label_0x1718;
1712:   fe e0           r31 = 14;                           ; 0x0e
1714:   26 de           multiplyr30r31();                   ; Parameter r30:r31,returns r30:31 = r30 * r31
1716:   01 c0           goto Label_0x171a;

; Referenced from offset 0x1710 by brcc
Label_0x1718:
1718:   ef ef           r30 = 0xff;                         ; 255

; Referenced from offset 0x1716 by rjmp
Label_0x171a:
171a:   e0 93 03 02     battery_level_percentage = r30;     ; 0x0203
171e:   a0 e1           r26 = 16;                           ; 0x10
1720:   a2 bb           IO[PORTD] = r26;
1722:   71 de           FET_calibration_runs_at_startup();
1724:   9d d1           look_for_keypress();
; look for key push 1100 (factory reset up+down)
1726:   b1 3c           cmp(r27, 0xc1);                     ; 193
1728:   39 f0           if (c1 == c2) goto Label_0x1738;
172a:   a1 e0           r26 = 1;                            ; 0x01
172c:   b0 e0           r27 = 0;                            ; 0x00
172e:   56 d1           read_from_eeprom();                 ; Parameter r26:r27, returns r0
; look for magic word in eeprom, if eeprom[1]!=0x55 then do factory reset stuff
1730:   e5 e5           r30 = 85;                           ; 0x55
1732:   0e 16           cmp(r0, r30);
1734:   09 f4           if (c1 != c2) goto Label_0x1738;
1736:   53 c0           goto Label_0x17de;

; Referenced from offset 0x1728 by breq
; Referenced from offset 0x1734 by brne
Label_0x1738:
1738:   91 9a           IO_BIT[PORTD,1] = true;             ; 0x02 = 2
173a:   a2 e0           r26 = 2;                            ; 0x02
173c:   80 d0           rough_delay_no_timer_r26_times_28050ish_clockcycles(); ; Parameter r26
; our eeprom[byte1] isn't 0x55 or we selected factory reset on boot, look to see if rx and tx are joined, if so do some debug menu
173e:   80 9b           skipif (IO_BIT[PIND,0])             ; 0x01 = 1
1740:   30 c0           goto make_a_serial_number;
1742:   91 98           IO_BIT[PORTD,1] = false;            ; 0x02 = 2
1744:   a2 e0           r26 = 2;                            ; 0x02
1746:   7b d0           rough_delay_no_timer_r26_times_28050ish_clockcycles(); ; Parameter r26
1748:   80 99           skipif (!IO_BIT[PIND,0])            ; 0x01 = 1
174a:   2b c0           goto make_a_serial_number;

; Referenced from offset 0x17a0 by rjmp
Label_0x174c:
174c:   89 d1           look_for_keypress();
; loop display debug values until we get a keypress 1010
174e:   b1 3a           cmp(r27, 0xa1);                     ; 161
1750:   41 f1           if (c1 == c2) goto make_a_serial_number;
1752:   e8 b3           r30 = IO[PORTB];
1754:   e5 60           r30 |= 5;                           ; 0x05
1756:   e8 bb           IO[PORTB] = r30;
1758:   eb 2f           r30 = r27;
175a:   f0 e0           r31 = 0;                            ; 0x00
175c:   ad dd           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
175e:   e8 b3           r30 = IO[PORTB];
1760:   ea 7f           r30 &= 250;                         ; 0xfa
1762:   ea 60           r30 |= 10;                          ; 0x0a
1764:   e8 bb           IO[PORTB] = r30;
; display 0x4063 (Battery Voltage ADC3)
1766:   eb 81           r30 = Memory[[r28:r29]+3];
1768:   f4 e0           r31 = 4;                            ; 0x04
176a:   a6 dd           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
176c:   e8 b3           r30 = IO[PORTB];
176e:   e0 7f           r30 &= 240;                         ; 0xf0
1770:   e8 bb           IO[PORTB] = r30;
; display 0x4067 (Audio A half wave ADC7)
1772:   ef 81           r30 = Memory[[r28:r29]+7];
1774:   f8 e0           r31 = 8;                            ; 0x08
1776:   a0 dd           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
; display 0x4066 (Audio B half wave ADC6)
1778:   ee 81           r30 = Memory[[r28:r29]+6];
177a:   fc e0           r31 = 12;                           ; 0x0c
177c:   9d dd           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
; display 0x406b-channela-fet-calibration
177e:   eb 85           r30 = Memory[[r28:r29]+11];
1780:   f0 e4           r31 = 64;                           ; 0x40
1782:   9a dd           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
; display 0x406c-channelb-fet-calibration
1784:   ec 85           r30 = Memory[[r28:r29]+12];
1786:   f4 e4           r31 = 68;                           ; 0x44
1788:   ca d9           enable_ADC_and_set_r17[3]();        ; CallTable_34
178a:   96 dd           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
; display 0x4061 (Multi Adjust Offset ADC1)
178c:   e9 81           r30 = Memory[[r28:r29]+1];
178e:   f8 e4           r31 = 72;                           ; 0x48
1790:   93 dd           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
1792:   e1 b7           r30 = IO[OCDR];
1794:   fc e4           r31 = 76;                           ; 0x4c
; display OCDR
1796:   90 dd           display_number_on_display();        ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-255)
1798:   0f df           setup_dac_levels_0x205_x206_based_on_pot_and_ramp_and_levels();
179a:   7d de           send_data_to_spdr();
179c:   aa e0           r26 = 10;                           ; 0x0a
179e:   4f d0           rough_delay_no_timer_r26_times_28050ish_clockcycles(); ; Parameter r26
17a0:   d5 cf           goto Label_0x174c;

; Referenced from offset 0x1740 by rjmp
; Referenced from offset 0x174a by rjmp
; Referenced from offset 0x1750 by breq
make_a_serial_number:     ; write random bytes to eeprom[2] and eeprom[3] (serial number)
17a2:   c3 d9           prng_next();                        ; Result in r26 and X[18]
17a4:   0a 2e           r0 = r26;
17a6:   b0 e0           r27 = 0;                            ; 0x00
17a8:   a2 e0           r26 = 2;                            ; 0x02
17aa:   23 d1           write_to_eeprom();                  ; Parameter r26:r27 (address), r0 (value)
17ac:   be d9           prng_next();                        ; Result in r26 and X[18]
17ae:   0a 2e           r0 = r26;
17b0:   a3 e0           r26 = 3;                            ; 0x03
17b2:   1f d1           write_to_eeprom();                  ; Parameter r26:r27 (address), r0 (value)
17b4:   91 98           IO_BIT[PORTD,1] = false;            ; 0x02 = 2
; clear eeprom with 0 bytes 4-32
17b6:   a4 e0           r26 = 4;                            ; 0x04
17b8:   b0 e0           r27 = 0;                            ; 0x00

; Referenced from offset 0x17c2 by brcs
Label_0x17ba:
17ba:   0d 2e           r0 = r29;
17bc:   1a d1           write_to_eeprom();                  ; Parameter r26:r27 (address), r0 (value)
17be:   a3 95           r26++;
17c0:   a0 32           cmp(r26, 0x20);                     ; 32
17c2:   d8 f3           if (Carry) goto Label_0x17ba;
; write a 0x55 to eeprom[1], write 0x1 to eeprom[6] write 0x1 to eeprom[7]
17c4:   a5 e5           r26 = 85;                           ; 0x55
17c6:   0a 2e           r0 = r26;
17c8:   a1 e0           r26 = 1;                            ; 0x01
17ca:   b0 e0           r27 = 0;                            ; 0x00
17cc:   12 d1           write_to_eeprom();                  ; Parameter r26:r27 (address), r0 (value)
17ce:   a1 e0           r26 = 1;                            ; 0x01
17d0:   0a 2e           r0 = r26;
17d2:   a6 e0           r26 = 6;                            ; 0x06
17d4:   0e d1           write_to_eeprom();                  ; Parameter r26:r27 (address), r0 (value)
17d6:   a7 e0           r26 = 7;                            ; 0x07
17d8:   0c d1           write_to_eeprom();                  ; Parameter r26:r27 (address), r0 (value)
17da:   da de           get_advanced_settings_from_firmware_defaults_to_memory();
17dc:   e3 de           store_advanced_settings_from_memory_to_eeprom();

; Referenced from offset 0x1736 by rjmp
Label_0x17de:
17de:   40 d1           look_for_keypress();
; key press 1010
17e0:   b1 3a           cmp(r27, 0xa1);                     ; 161
17e2:   11 f4           if (c1 != c2) goto Label_0x17e8;
17e4:   d5 de           get_advanced_settings_from_firmware_defaults_to_memory();
17e6:   de de           store_advanced_settings_from_memory_to_eeprom();

; Referenced from offset 0x17e2 by brne
Label_0x17e8:
17e8:   a0 e7           r26 = 112;                          ; 0x70
17ea:   a2 bb           IO[PORTD] = r26;
17ec:   a2 e0           r26 = 2;                            ; 0x02
; display "Copyright"
17ee:   7e dd           show_Text_on_Display();             ; Parameter r26
17f0:   f0 e4           r31 = 64;                           ; 0x40

; Referenced from offset 0x17fe by brcs
Label_0x17f2:
17f2:   ef ef           r30 = 0xff;                         ; 255
17f4:   41 dd           display_char_r30_at_position_r31_on_display(); ; Parameter r30, r31
17f6:   a6 e0           r26 = 6;                            ; 0x06
; draw the self-test bargraph with a delay between characters
17f8:   22 d0           rough_delay_no_timer_r26_times_28050ish_clockcycles(); ; Parameter r26
17fa:   f3 95           r31++;
17fc:   f0 35           cmp(r31, 0x50);                     ; 80
17fe:   c8 f3           if (Carry) goto Label_0x17f2;
1800:   a3 e0           r26 = 3;                            ; 0x03
; display "Product Name"
1802:   74 dd           show_Text_on_Display();             ; Parameter r26
; display a B at end of product name (if 0x0215[bit0] is set, we have a battery)
1804:   a0 91 15 02     r26 = power_status_bits;            ; 0x0215
1808:   a0 ff           skipif (bit(r26,0))
180a:   03 c0           goto Label_0x1812;
180c:   ff e0           r31 = 15;                           ; 0x0f
180e:   e2 e4           r30 = 66;                           ; 0x42
1810:   33 dd           display_char_r30_at_position_r31_on_display(); ; Parameter r30, r31

; Referenced from offset 0x180a by rjmp
Label_0x1812:
1812:   a1 e0           r26 = 1;                            ; 0x01
; display "SelfTest OK"
1814:   63 dd           show_Text_on_Display2();            ; Parameter r26
1816:   af e7           r26 = 127;                          ; 0x7f
1818:   12 d0           rough_delay_no_timer_r26_times_28050ish_clockcycles(); ; Parameter r26
181a:   a0 91 15 02     r26 = power_status_bits;            ; 0x0215
181e:   a1 70           r26 &= 1;                           ; 0x01
1820:   59 f0           if (c1 == c2) goto rough_delay_no_timer_r26_times_28050ish_clockcycles;
1822:   aa ec           r26 = 202;                          ; 0xca
; display "Battery" and spaces, battery percent from 0x0203, "%"
1824:   63 dd           show_Text_on_Display();             ; Parameter r26
1826:   a4 e6           r26 = 100;                          ; 0x64
1828:   61 dd           show_Text_on_Display();             ; Parameter r26
182a:   f9 e0           r31 = 9;                            ; 0x09
182c:   e0 91 03 02     r30 = battery_level_percentage;     ; 0x0203
1830:   29 dd           display_number_on_display_scaled(); ; Parameter r31 (position), r30 (number from 0-255, will be displayed as 0-99)
1832:   fb e0           r31 = 11;                           ; 0x0b
1834:   e5 e2           r30 = 37;                           ; 0x25
1836:   20 dd           display_char_r30_at_position_r31_on_display(); ; Parameter r30, r31

; Referenced from offset 0x1820 by breq
; display "Press any key"
1838:   a4 e0           r26 = 4;                            ; 0x04
183a:   50 dd           show_Text_on_Display2();            ; Parameter r26
183c:   08 95           return;


; Referenced from offset 0x16a6 by rcall
; Referenced from offset 0x16b0 by rcall
; Referenced from offset 0x173c by rcall
; Referenced from offset 0x1746 by rcall
; Referenced from offset 0x179e by rcall
; Referenced from offset 0x17f8 by rcall
; Referenced from offset 0x1818 by rcall
rough_delay_no_timer_r26_times_28050ish_clockcycles:     ; Parameter r26
183e:   bf 93           push    r27
1840:   cf 93           push    r28

; Referenced from offset 0x1850 by brne
Label_0x1842:
1842:   ce e6           r28 = 110;                          ; 0x6e

; Referenced from offset 0x184c by brne
Label_0x1844:
1844:   bf ef           r27 = 0xff;                         ; 255

; Referenced from offset 0x1848 by brne
Label_0x1846:
1846:   ba 95           r27--;
1848:   f1 f7           if (c1 != c2) goto Label_0x1846;
184a:   ca 95           r28--;
184c:   d9 f7           if (c1 != c2) goto Label_0x1844;
184e:   aa 95           r26--;
1850:   c1 f7           if (c1 != c2) goto Label_0x1842;
1852:   cf 91           pop     r28
1854:   bf 91           pop     r27
1856:   08 95           return;


; Referenced from offset 0x66 by call
handle_received_serial_command:
1858:   c4 9a           IO_BIT[PORTB,4] = true;             ; 0x10 = 16
; above pin B4 isn't used
185a:   cf 93           push    r28
; if r17[bit6] is set then an error happened so send a handshake byte
185c:   16 fd           skipif (!bit(r17,6))
185e:   98 c0           goto serial_protocol_write_handshake_to_com_buffer;
1860:   e0 e2           r30 = 32;                           ; 0x20
1862:   f2 e0           r31 = 2;                            ; 0x02
; get first byte of serial command (r0 full, r28 lower nibble)
1864:   c1 91           r28 = Memory[[r30:r31]++];
1866:   0c 2e           r0 = r28;
1868:   cf 70           r28 &= 15;                          ; 0x0f
186a:   b0 91 12 02     r27 = serial_instruction_expected_length; ; 0x0212
186e:   bb 23           (r27 == 0) || (r27 < 0);            ; test r27
1870:   31 f5           if (c1 != c2) goto handle_multibyte_serial_instruction;
; it's a single byte command, and if 0x6 or less send handshake byte
1872:   c6 30           cmp(r28, 0x06);                     ; 6
1874:   08 f4           if (!Carry) goto Label_0x1878;
1876:   8c c0           goto serial_protocol_write_handshake_to_com_buffer;

; Referenced from offset 0x1874 by brcc
Label_0x1878:
1878:   c9 30           cmp(r28, 0x09);                     ; 9
187a:   08 f4           if (!Carry) goto Label_0x187e;
; got 0x7 or 0x8 or 0x9? ignore it
187c:   82 c0           goto handle_received_serial_command_done;

; Referenced from offset 0x187a by brcc
Label_0x187e:
187e:   ce 30           cmp(r28, 0x0e);                     ; 14
1880:   51 f4           if (c1 != c2) goto Label_0x1896;
; if we got a 0x0e we're a slave box, send back a 0x05 and set r16[bit2-we-are-slave]
1882:   a5 e0           r26 = 5;                            ; 0x05
1884:   ac b9           IO[UDR] = r26;
1886:   a4 e0           r26 = 4;                            ; 0x04
1888:   0a 2b           r16 |= r26;
188a:   a3 e0           r26 = 3;                            ; 0x03
; display "Product Name", spaces
188c:   27 dd           show_Text_on_Display2();            ; Parameter r26
188e:   a4 e6           r26 = 100;                          ; 0x64
1890:   2d dd           show_Text_on_Display();             ; Parameter r26
1892:   a8 ef           r26 = 248;                          ; 0xf8
; display "Linked"
1894:   2b dd           show_Text_on_Display();             ; Parameter r26

; Referenced from offset 0x1880 by brne
Label_0x1896:
1896:   7c de           get_advanced_settings_from_firmware_defaults_to_memory();
1898:   74 c0           goto handle_received_serial_command_done;
serial_protocol_dead_code:
189a:   01 fe           skipif (bit(r0,1))
189c:   06 c0           goto serial_protocol_dead_code_2;
189e:   c0 e9           r28 = 144;                          ; 0x90
18a0:   a8 81           r26 = Memory[r28:r29];
18a2:   a0 6a           r26 |= 160;                         ; 0xa0
18a4:   a8 83           Memory[r28:r29] = r26;
; r5 is [x90] Channel A: Current Gate Value (0 when no output)
18a6:   5a 2e           r5 = r26;
18a8:   de da           IRQ0_Handler();

; Referenced from offset 0x189c by rjmp
serial_protocol_dead_code_2:
18aa:   00 fe           skipif (bit(r0,0))
18ac:   68 c0           goto serial_protocol_write_success_to_com_buffer;
18ae:   a0 e9           r26 = 144;                          ; 0x90
18b0:   b1 e0           r27 = 1;                            ; 0x01
18b2:   cc 91           r28 = Memory[r26:r27];
18b4:   c0 6a           r28 |= 160;                         ; 0xa0
18b6:   cc 93           Memory[r26:r27] = r28;
18b8:   ac 2e           r10 = r28;
18ba:   e0 da           IRQ1_Handler();
18bc:   60 c0           goto serial_protocol_write_success_to_com_buffer;

; Referenced from offset 0x1870 by brne
handle_multibyte_serial_instruction:
18be:   b0 5e           r27 -= 224;                         ; 0xe0, no carry
18c0:   2b 2e           r2 = r27;

; Referenced from offset 0x18c8 by brcs
calculate_checksum:
18c2:   a1 91           r26 = Memory[[r30:r31]++];
18c4:   0a 0e           r0 += r26;                          ; No carry
18c6:   eb 17           cmp(r30, r27);
18c8:   e0 f3           if (Carry) goto calculate_checksum;
18ca:   a0 81           r26 = Memory[r30:r31];
18cc:   a0 15           cmp(r26, r0);
18ce:   09 f0           if (c1 == c2) goto serial_protocol_checksum_ok;
; checksum error
18d0:   5f c0           goto serial_protocol_write_handshake_to_com_buffer;

; Referenced from offset 0x18ce by breq
serial_protocol_checksum_ok:
18d2:   cf 30           cmp(r28, 0x0f);                     ; 15
18d4:   89 f4           if (c1 != c2) goto Label_0x18f8;
serial_protocol_command_f_is_key_synchronization:
18d6:   a1 e2           r26 = 33;                           ; 0x21
18d8:   96 d0           write_r26_to_com_buffer();          ; Parameters r26
18da:   e1 e2           r30 = 33;                           ; 0x21

; Referenced from offset 0x18ea by breq
Label_0x18dc:
18dc:   b0 81           r27 = Memory[r30:r31];
18de:   b2 95           r27 = ((r27 & 0xf0) >> 4) | ((r27 & 0x0f) << 4); ; swap nibbles
18e0:   24 d9           prng_next();                        ; Result in r26 and X[18]
18e2:   ba 27           r27 ^= r26;
18e4:   c5 e5           r28 = 85;                           ; 0x55
18e6:   bc 27           r27 ^= r28;
; if we ended up with a cipher_key of 0, repeat until we don't
18e8:   bb 23           (r27 == 0) || (r27 < 0);            ; test r27
18ea:   c1 f3           if (c1 == c2) goto Label_0x18dc;
18ec:   b0 93 13 02     cipher_key = r27;                   ; 0x0213
18f0:   8a d0           write_r26_to_com_buffer();          ; Parameters r26
18f2:   af 5d           r26 -= 223;                         ; 0xdf, no carry
18f4:   88 d0           write_r26_to_com_buffer();          ; Parameters r26
18f6:   45 c0           goto handle_received_serial_command_done;

; Referenced from offset 0x18d4 by brne
Label_0x18f8:
18f8:   c8 30           cmp(r28, 0x08);                     ; 8
18fa:   31 f4           if (c1 != c2) goto Label_0x1908;
; if we get a 0x18 0xaa over serial then reset the box
18fc:   ea 95           r30--;
18fe:   b0 81           r27 = Memory[r30:r31];
1900:   ba 3a           cmp(r27, 0xaa);                     ; 170
1902:   09 f4           if (c1 != c2) goto Label_0x1906;
1904:   b8 c0           goto reset_device;

; Referenced from offset 0x1902 by brne
Label_0x1906:
1906:   44 c0           goto serial_protocol_write_handshake_to_com_buffer;

; Referenced from offset 0x18fa by brne
Label_0x1908:
1908:   cc 30           cmp(r28, 0x0c);                     ; 12
190a:   b9 f4           if (c1 != c2) goto Label_0x193a;
serial_protocol_command_c_is_peek:
190c:   a2 e2           r26 = 34;                           ; 0x22
190e:   7b d0           write_r26_to_com_buffer();          ; Parameters r26
1910:   e1 e2           r30 = 33;                           ; 0x21
1912:   b1 91           r27 = Memory[[r30:r31]++];
1914:   a0 81           r26 = Memory[r30:r31];
1916:   cb 2f           r28 = r27;
1918:   c0 7c           r28 &= 192;                         ; 0xc0
191a:   21 f0           if (c1 == c2) goto serial_protocol_write_flash_to_com_buffer;
191c:   c0 34           cmp(r28, 0x40);                     ; 64
191e:   31 f0           if (c1 == c2) goto Label_0x192c;
1920:   5d d0           read_from_eeprom();                 ; Parameter r26:r27, returns r0
1922:   06 c0           goto Label_0x1930;

; Referenced from offset 0x191a by breq
serial_protocol_write_flash_to_com_buffer:     ; Writes flash address at 0x1f00-0x1fff (chosen via r26) to com buffer
1924:   ff e1           r31 = 31;                           ; 0x1f
1926:   ea 2f           r30 = r26;
1928:   c8 95           r0 = Flash[r30:r31];
192a:   02 c0           goto Label_0x1930;

; Referenced from offset 0x191e by breq
Label_0x192c:
192c:   b3 70           r27 &= 3;                           ; 0x03
192e:   0c 90           r0 = Memory[r26:r27];

; Referenced from offset 0x1922 by rjmp
; Referenced from offset 0x192a by rjmp
Label_0x1930:
1930:   a0 2d           r26 = r0;
1932:   69 d0           write_r26_to_com_buffer();          ; Parameters r26
1934:   ae 5d           r26 -= 222;                         ; 0xde, no carry
1936:   67 d0           write_r26_to_com_buffer();          ; Parameters r26
1938:   24 c0           goto handle_received_serial_command_done;

; Referenced from offset 0x190a by brne
Label_0x193a:
193a:   cd 30           cmp(r28, 0x0d);                     ; 13
193c:   09 f0           if (c1 == c2) goto serial_protocol_command_d_is_poke;
193e:   28 c0           goto serial_protocol_write_handshake_to_com_buffer;

; Referenced from offset 0x193c by breq
serial_protocol_command_d_is_poke:
1940:   e1 e2           r30 = 33;                           ; 0x21
1942:   b1 91           r27 = Memory[[r30:r31]++];
1944:   a1 91           r26 = Memory[[r30:r31]++];
1946:   a4 30           cmp(r26, 0x04);                     ; 4
1948:   39 f0           if (c1 == c2) goto serial_protocol_command_poke_flash;
194a:   aa 30           cmp(r26, 0x0a);                     ; 10
194c:   29 f0           if (c1 == c2) goto serial_protocol_command_poke_flash;
194e:   c0 91 13 02     r28 = cipher_key;                   ; 0x0213
1952:   cc 23           (r28 == 0) || (r28 < 0);            ; test r28
1954:   09 f4           if (c1 != c2) goto serial_protocol_command_poke_flash;
; if cipher_key is 0 then we've not exchanged keys so don't allow the poke
1956:   1c c0           goto serial_protocol_write_handshake_to_com_buffer;

; Referenced from offset 0x1948 by breq
; Referenced from offset 0x194c by breq
; Referenced from offset 0x1954 by brne
serial_protocol_command_poke_flash:
1958:   cb 2f           r28 = r27;
195a:   b3 70           r27 &= 3;                           ; 0x03
195c:   c0 7c           r28 &= 192;                         ; 0xc0
195e:   c0 34           cmp(r28, 0x40);                     ; 64
1960:   49 f0           if (c1 == c2) goto serial_protocol_write_com_buffer_to_sram;
1962:   c0 38           cmp(r28, 0x80);                     ; 128
1964:   09 f0           if (c1 == c2) goto serial_protocol_write_com_buffer_to_eeprom;
1966:   14 c0           goto serial_protocol_write_handshake_to_com_buffer;

; Referenced from offset 0x1964 by breq
; Referenced from offset 0x1970 by brcs
serial_protocol_write_com_buffer_to_eeprom:     ; Writes flash address at 0x1f00-0x1fff (chosen via r26) to com buffer
1968:   01 90           r0 = Memory[[r30:r31]++];
196a:   43 d0           write_to_eeprom();                  ; Parameter r26:r27 (address), r0 (value)
196c:   11 96           [r27:r26]++;
196e:   e2 15           cmp(r30, r2);
1970:   d8 f3           if (Carry) goto serial_protocol_write_com_buffer_to_eeprom;
1972:   05 c0           goto serial_protocol_write_success_to_com_buffer;

; Referenced from offset 0x1960 by breq
; Referenced from offset 0x197a by brcs
serial_protocol_write_com_buffer_to_sram:     ; Writes data (up to 8 bytes) from com buffer into sram
1974:   01 90           r0 = Memory[[r30:r31]++];
1976:   0d 92           Memory[[r26:r27]++] = r0;
1978:   e2 15           cmp(r30, r2);
197a:   e0 f3           if (Carry) goto serial_protocol_write_com_buffer_to_sram;
197c:   00 c0           goto serial_protocol_write_success_to_com_buffer;

; Referenced from offset 0x18ac by rjmp
; Referenced from offset 0x18bc by rjmp
; Referenced from offset 0x1972 by rjmp
; Referenced from offset 0x197c by rjmp
serial_protocol_write_success_to_com_buffer:     ; Writes a 0x6 (success code) to the com buffer
197e:   a6 e0           r26 = 6;                            ; 0x06
1980:   42 d0           write_r26_to_com_buffer();          ; Parameters r26

; Referenced from offset 0x187c by rjmp
; Referenced from offset 0x1898 by rjmp
; Referenced from offset 0x18f6 by rjmp
; Referenced from offset 0x1938 by rjmp
; Referenced from offset 0x1994 by rjmp
handle_received_serial_command_done:
1982:   1f 79           r17 &= 159;                         ; 0x9f
; above unset r17[bit5-received-serial-command]. set r17[bit6]
1984:   a0 e2           r26 = 32;                           ; 0x20
1986:   a0 93 f2 01     counter_for_0x220 = r26;            ; 0x01f2
198a:   cf 91           pop     r28
; pin B4 isn't used
198c:   c4 98           IO_BIT[PORTB,4] = false;            ; 0x10 = 16
198e:   08 95           return;


; Referenced from offset 0x185e by rjmp
; Referenced from offset 0x1876 by rjmp
; Referenced from offset 0x18d0 by rjmp
; Referenced from offset 0x1906 by rjmp
; Referenced from offset 0x193e by rjmp
; Referenced from offset 0x1956 by rjmp
; Referenced from offset 0x1966 by rjmp
serial_protocol_write_handshake_to_com_buffer:     ; Puts 0x7 into com buffer until a 0x0 is received back
1990:   a7 e0           r26 = 7;                            ; 0x07
1992:   39 d0           write_r26_to_com_buffer();          ; Parameters r26
1994:   f6 cf           goto handle_received_serial_command_done;
1996:   cf 91           pop     r28
1998:   0c 94 2a 00     goto Main;
199c:   08 95           return;

199e:   cf 93           push    r28
19a0:   ca 2f           r28 = r26;
19a2:   c1 71           r28 &= 17;                          ; 0x11
19a4:   c1 31           cmp(r28, 0x11);                     ; 17
19a6:   09 f4           if (c1 != c2) goto Label_0x19aa;
19a8:   a2 95           r26 = ((r26 & 0xf0) >> 4) | ((r26 & 0x0f) << 4); ; swap nibbles

; Referenced from offset 0x19a6 by brne
Label_0x19aa:
19aa:   ac 27           r26 ^= r28;
19ac:   cf 91           pop     r28
19ae:   08 95           return;

19b0:   08 95           return;

19b2:   af 93           push    r26
19b4:   a0 91 13 02     r26 = cipher_key;                   ; 0x0213
19b8:   ca 27           r28 ^= r26;
19ba:   ac 2f           r26 = r28;
19bc:   a1 71           r26 &= 17;                          ; 0x11
19be:   c1 31           cmp(r28, 0x11);                     ; 17
19c0:   09 f4           if (c1 != c2) goto Label_0x19c4;
19c2:   c2 95           r28 = ((r28 & 0xf0) >> 4) | ((r28 & 0x0f) << 4); ; swap nibbles

; Referenced from offset 0x19c0 by brne
Label_0x19c4:
19c4:   af 91           pop     r26
19c6:   08 95           return;

19c8:   ff 27           r31 = 0x00;                         ; 0

; Referenced from offset 0x19da by rjmp
Label_0x19ca:
19ca:   e7 eb           r30 = 183;                          ; 0xb7
19cc:   a0 81           r26 = Memory[r30:r31];

; Referenced from offset 0x19d4 by brne
Label_0x19ce:
19ce:   aa 95           r26--;
19d0:   c8 95           r0 = Flash[r30:r31];
19d2:   b0 81           r27 = Memory[r30:r31];
19d4:   e1 f7           if (c1 != c2) goto Label_0x19ce;
19d6:   08 95           return;

19d8:   f1 e0           r31 = 1;                            ; 0x01
19da:   f7 cf           goto Label_0x19ca;

; Referenced from offset 0x756 by call
; Referenced from offset 0x1584 by rcall
; Referenced from offset 0x172e by rcall
; Referenced from offset 0x1920 by rcall
read_from_eeprom:     ; Parameter r26:r27, returns r0
19dc:   cf 93           push    r28

; Referenced from offset 0x19e2 by brne
Label_0x19de:
19de:   cc b3           r28 = IO[EECR];
19e0:   c3 70           r28 &= 3;                           ; 0x03
19e2:   e9 f7           if (c1 != c2) goto Label_0x19de;
19e4:   bf bb           IO[EEARH] = r27;
19e6:   ae bb           IO[EEAR] = r26;
19e8:   e0 9a           IO_BIT[EECR,0] = true;              ; 0x01 = 1
19ea:   00 00           nop
19ec:   0d b2           r0 = IO[EEDR];
19ee:   cf 91           pop     r28
19f0:   08 95           return;


; Referenced from offset 0x8ce by call
; Referenced from offset 0x15ae by rcall
; Referenced from offset 0x17aa by rcall
; Referenced from offset 0x17b2 by rcall
; Referenced from offset 0x17bc by rcall
; Referenced from offset 0x17cc by rcall
; Referenced from offset 0x17d4 by rcall
; Referenced from offset 0x17d8 by rcall
; Referenced from offset 0x196a by rcall
write_to_eeprom:     ; Parameter r26:r27 (address), r0 (value)
19f2:   a8 95           wdr

; Referenced from offset 0x19f8 by brne
Label_0x19f4:
19f4:   2c b3           r18 = IO[EECR];
19f6:   23 70           r18 &= 3;                           ; 0x03
19f8:   e9 f7           if (c1 != c2) goto Label_0x19f4;
19fa:   bf bb           IO[EEARH] = r27;
19fc:   ae bb           IO[EEAR] = r26;
19fe:   0d ba           IO[EEDR] = r0;
1a00:   e2 9a           IO_BIT[EECR,2] = true;              ; 0x04 = 4
1a02:   e1 9a           IO_BIT[EECR,1] = true;              ; 0x02 = 2
1a04:   08 95           return;


; Referenced from offset 0x400 by call
; Referenced from offset 0x406 by call
; Referenced from offset 0x416 by call
; Referenced from offset 0x424 by call
; Referenced from offset 0x430 by call
; Referenced from offset 0x8fa by call
; Referenced from offset 0x18d8 by rcall
; Referenced from offset 0x18f0 by rcall
; Referenced from offset 0x18f4 by rcall
; Referenced from offset 0x190e by rcall
; Referenced from offset 0x1932 by rcall
; Referenced from offset 0x1936 by rcall
; Referenced from offset 0x1980 by rcall
; Referenced from offset 0x1992 by rcall
write_r26_to_com_buffer:     ; Parameters r26
1a06:   ef 93           push    r30
1a08:   ff 93           push    r31
1a0a:   e0 91 14 02     r30 = com_buffer_incrementer;       ; 0x0214
1a0e:   ea 0f           r30 += r26;                         ; No carry
1a10:   e0 93 14 02     com_buffer_incrementer = r30;       ; 0x0214
1a14:   e0 91 f1 01     r30 = counter_for_0x22C;            ; 0x01f1
1a18:   e8 33           cmp(r30, 0x38);                     ; 56
1a1a:   10 f0           if (Carry) goto Label_0x1a20;
1a1c:   a8 e4           r26 = 72;                           ; 0x48
1a1e:   2b ce           goto error_handler;

; Referenced from offset 0x1a1a by brcs
Label_0x1a20:
1a20:   f2 e0           r31 = 2;                            ; 0x02
1a22:   a1 93           Memory[[r30:r31]++] = r26;
1a24:   e0 93 f1 01     counter_for_0x22C = r30;            ; 0x01f1
1a28:   ff 91           pop     r31
1a2a:   ef 91           pop     r30
1a2c:   08 95           return;


; Referenced from offset 0x60 by call
; Referenced from offset 0x8fe by call
send_com_buffer_to_USART:
1a2e:   5d 9b           skipif (IO_BIT[UCSRA,5])            ; 0x20 = 32
1a30:   08 95           return;

1a32:   ec e2           r30 = 44;                           ; 0x2c
1a34:   f2 e0           r31 = 2;                            ; 0x02
1a36:   a0 81           r26 = Memory[r30:r31];
; pin B4 isn't used
1a38:   c4 9a           IO_BIT[PORTB,4] = true;             ; 0x10 = 16
1a3a:   ac b9           IO[UDR] = r26;
1a3c:   c4 98           IO_BIT[PORTB,4] = false;            ; 0x10 = 16
1a3e:   a0 91 f1 01     r26 = counter_for_0x22C;            ; 0x01f1
1a42:   aa 95           r26--;
1a44:   a0 93 f1 01     counter_for_0x22C = r26;            ; 0x01f1
1a48:   ad 32           cmp(r26, 0x2d);                     ; 45
1a4a:   08 f4           if (!Carry) goto Label_0x1a4e;
1a4c:   08 95           return;


; Referenced from offset 0x1a4a by brcc
Label_0x1a4e:
1a4e:   ab e0           r26 = 11;                           ; 0x0b
1a50:   2a 2e           r2 = r26;
1a52:   ad e2           r26 = 45;                           ; 0x2d
1a54:   b2 e0           r27 = 2;                            ; 0x02

; Referenced from offset 0x1a5c by brne
Label_0x1a56:
1a56:   2d 91           r18 = Memory[[r26:r27]++];
1a58:   21 93           Memory[[r30:r31]++] = r18;
1a5a:   2a 94           r2--;
1a5c:   e1 f7           if (c1 != c2) goto Label_0x1a56;
1a5e:   08 95           return;


; Referenced from offset 0x1724 by rcall
; Referenced from offset 0x174c by rcall
; Referenced from offset 0x17de by rcall
look_for_keypress:
1a60:   a1 ef           r26 = 241;                          ; 0xf1
1a62:   a5 bb           IO[PORTC] = r26;
1a64:   af e0           r26 = 15;                           ; 0x0f
1a66:   a4 bb           IO[DDRC] = r26;
1a68:   00 00           nop
1a6a:   00 00           nop
1a6c:   b3 b3           r27 = IO[PINC];
1a6e:   d5 bb           IO[PORTC] = r29;
1a70:   af ef           r26 = 0xff;                         ; 255
1a72:   a4 bb           IO[DDRC] = r26;
1a74:   08 95           return;


; Referenced from offset 0x946 by jmp
; Referenced from offset 0x1904 by rjmp
reset_device:
1a76:   f8 94           Disable_Interrupts();
1a78:   d8 bb           IO[PORTB] = r29;
1a7a:   15 cd           goto RESET;

; Referenced from offset 0x30e by call
setup_mark_space_based_on_modulation:     ; Parameters r9,r8,r7
1a7c:   e8 94           clt
1a7e:   aa 27           r26 = 0x00;                         ; 0
; r8 is min(9,[xAE] Channel A: Current Frequency Modulation Value)
1a80:   b8 2d           r27 = r8;
; r7 is [xA5] Channel A: Current Intensity Modulation Value
1a82:   e7 2d           r30 = r7;
; r9 is min(50,[xB7] Channel A: Current Width Modulation Value)
1a84:   f9 2d           r31 = r9;

; Referenced from offset 0x1af0 by rjmp
Label_0x1a86:
1a86:   ee 5c           r30 -= 206;                         ; 0xce, no carry
1a88:   08 f4           if (!Carry) goto Label_0x1a8c;
1a8a:   ee 27           r30 = 0x00;                         ; 0

; Referenced from offset 0x1a88 by brcc
Label_0x1a8c:
1a8c:   f2 53           r31 -= 50;                          ; 0x32, no carry
1a8e:   08 f4           if (!Carry) goto Label_0x1a92;
1a90:   f1 e0           r31 = 1;                            ; 0x01

; Referenced from offset 0x1a8e by brcc
Label_0x1a92:
1a92:   f4 3a           cmp(r31, 0xa4);                     ; 164
1a94:   08 f0           if (Carry) goto Label_0x1a98;
1a96:   f3 ea           r31 = 163;                          ; 0xa3

; Referenced from offset 0x1a94 by brcs
Label_0x1a98:
1a98:   64 dc           multiplyr30r31();                   ; Parameter r30:r31,returns r30:31 = r30 * r31
1a9a:   00 24           r0 = 0x00;                          ; 0
1a9c:   22 24           r2 = 0x00;                          ; 0
1a9e:   20 e1           r18 = 16;                           ; 0x10
1aa0:   f6 95           r31 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
1aa2:   e7 95           r30 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)

; Referenced from offset 0x1ab4 by brne
Label_0x1aa4:
1aa4:   10 f4           if (!Carry) goto Label_0x1aaa;
1aa6:   2a 0e           r2 += r26;                          ; No carry
1aa8:   0b 1e           r0 += r27;                          ; With carry

; Referenced from offset 0x1aa4 by brcc
Label_0x1aaa:
1aaa:   07 94           r0 >>= 1;                           ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1aac:   27 94           r2 >>= 1;                           ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1aae:   f7 95           r31 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1ab0:   e7 95           r30 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1ab2:   2a 95           r18--;
1ab4:   b9 f7           if (c1 != c2) goto Label_0x1aa4;
1ab6:   2d e0           r18 = 13;                           ; 0x0d

; Referenced from offset 0x1ac4 by brne
Label_0x1ab8:
1ab8:   88 94           clc
1aba:   07 94           r0 >>= 1;                           ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1abc:   27 94           r2 >>= 1;                           ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1abe:   f7 95           r31 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1ac0:   e7 95           r30 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
1ac2:   2a 95           r18--;
1ac4:   c9 f7           if (c1 != c2) goto Label_0x1ab8;
1ac6:   29 e1           r18 = 25;                           ; 0x19
1ac8:   e2 0f           r30 += r18;                         ; No carry
1aca:   fd 1f           r31 += r29;                         ; With carry
1acc:   96 f0           if (T == 1) goto store_z_pointer_at_0x020e_and_move_r13_to_r2_and_set_r18_to_negative_r30;
1ace:   e0 93 09 02     channel_a_pwm_mark[0] = r30;        ; 0x0209
1ad2:   f0 93 0a 02     channel_a_pwm_mark[1] = r31;        ; 0x020a
1ad6:   22 27           r18 = 0x00;                         ; 0
; r8 is min(9,[xAE] Channel A: Current Frequency Modulation Value)
1ad8:   28 2c           r2 = r8;
1ada:   2e 1b           r18 -= r30;                         ; No carry
1adc:   2f 0a           r2 += r31;                          ; With carry
1ade:   20 93 0b 02     channel_a_pwm_space[0] = r18;       ; 0x020b
1ae2:   20 92 0c 02     channel_a_pwm_space[1] = r2;        ; 0x020c
1ae6:   68 94           set
1ae8:   aa 27           r26 = 0x00;                         ; 0
1aea:   bd 2d           r27 = r13;
; r12 is [x1A5] Channel B: Current Intensity Modulation Value
1aec:   ec 2d           r30 = r12;
; r14 is min(50,[x1B7]) Channel B: Current Width Modulation Value)
1aee:   fe 2d           r31 = r14;
1af0:   ca cf           goto Label_0x1a86;

; Referenced from offset 0x1acc by brts
store_z_pointer_at_0x020e_and_move_r13_to_r2_and_set_r18_to_negative_r30:
1af2:   e0 93 0e 02     channel_b_pwm_mark[0] = r30;        ; 0x020e
1af6:   f0 93 0f 02     channel_b_pwm_mark[1] = r31;        ; 0x020f
1afa:   22 27           r18 = 0x00;                         ; 0
1afc:   2d 2c           r2 = r13;
1afe:   2e 1b           r18 -= r30;                         ; No carry
subtract_r31_from_r2_save_r18_at_memory_0x0210_and_r2_at_memory_0x0211:
1b00:   2f 0a           r2 += r31;                          ; With carry
1b02:   20 93 10 02     channel_b_pwm_space[0] = r18;       ; 0x0210
1b06:   20 92 11 02     channel_b_pwm_space[1] = r2;        ; 0x0211
1b0a:   08 95           return;

; Inline PGM data: 2 words starting at 0x1b0c (FFFF)
.word 0xffff
.word 0xffff

; Inline PGM data: 4 strings starting at 0x1b10 (fla_unknown_0x1b10)
String_0x1b10_fla_unknown_0x1b10_0:    ; Address 0x1b10 (6928)
.ascii "r923098werliu0923oiwuer0897tdunetoldmnnds\0"

String_0x1b10_fla_unknown_0x1b10_1:    ; Address 0x1b3a (6970)
.ascii "sdfj09238urjfsdf8r2yui34uowejcvbi348cvbweuioj402cvb3789ui039w8euidj3908e7r0w89e7idj\0"

String_0x1b10_fla_unknown_0x1b10_2:    ; Address 0x1b8e (7054)
.ascii "sofj09238urjfsdf8r2yui34uowejcvbi348cvbweuioj402cvb3789ui039w8euidj3908e7r0w89e7idj\0"

String_0x1b10_fla_unknown_0x1b10_3:    ; Address 0x1be2 (7138)
.ascii "sdoj09238urjfsdf8r2yui34uowejcvbi348cvbweuioj402cvb3789ui039w8euidj3908e7r0w89e7idj\0"


; Inline PGM data: 4 words starting at 0x1c36 (FFFF)
.word 0xffff
.word 0xffff
.word 0xffff
.word 0xffff

; Inline PGM data: 1 byte starting at 0x1c3e (module_lookup_0x1c3e+0)
.byte 0x7a

; Inline PGM data: 1 byte starting at 0x1c3f (module_lookup_0x1c3e+1)
.byte 0x7c

; Inline PGM data: 1 byte starting at 0x1c40 (module_lookup_0x1c3e+2_intenseb)
.byte 0x7e

; Inline PGM data: 1 byte starting at 0x1c41 (module_lookup_0x1c3e+3_strokeb)
.byte 0x82

; Inline PGM data: 1 byte starting at 0x1c42 (module_lookup_0x1c3e+4_strokeb)
.byte 0xc2

; Inline PGM data: 1 byte starting at 0x1c43 (module_lookup_0x1c3e+5_climba)
.byte 0xcb

; Inline PGM data: 1 byte starting at 0x1c44 (module_lookup_0x1c3e+6)
.byte 0xd3

; Inline PGM data: 1 byte starting at 0x1c45 (module_lookup_0x1c3e+7)
.byte 0xd7

; Inline PGM data: 1 byte starting at 0x1c46 (module_lookup_0x1c3e+8_climbb)
.byte 0xdb

; Inline PGM data: 1 byte starting at 0x1c47 (module_lookup_0x1c3e+9_b_variant_of_6)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1c48 (module_lookup_0x1c3e+10_b_vairant_of_7)
.byte 0x05

; Inline PGM data: 1 byte starting at 0x1c49 (module_lookup_0x1c3e+11_wavesa)
.byte 0x0a

; Inline PGM data: 1 byte starting at 0x1c4a (module_lookup_0x1c3e+12_wavesb)
.byte 0x13

; Inline PGM data: 1 byte starting at 0x1c4b (module_lookup_0x1c3e+13_comboa)
.byte 0x16

; Inline PGM data: 1 byte starting at 0x1c4c (module_lookup_0x1c3e+14_intensea)
.byte 0x1f

; Inline PGM data: 1 byte starting at 0x1c4d (module_lookup_0x1c3e+15_rhythm)
.byte 0x21

; Inline PGM data: 1 byte starting at 0x1c4e (module_lookup_0x1c3e+16_rhythm_part2)
.byte 0x31

; Inline PGM data: 1 byte starting at 0x1c4f (module_lookup_0x1c3e+17_rhythm_part3)
.byte 0x35

; Inline PGM data: 1 byte starting at 0x1c50 (module_lookup_0x1c3e+18_toggle)
.byte 0x38

; Inline PGM data: 1 byte starting at 0x1c51 (module_lookup_0x1c3e+19_toggle_part2)
.byte 0x43

; Inline PGM data: 1 byte starting at 0x1c52 (module_lookup_0x1c3e+20_phase1a)
.byte 0x4b

; Inline PGM data: 1 byte starting at 0x1c53 (module_lookup_0x1c3e+21_phase2a)
.byte 0x51

; Inline PGM data: 1 byte starting at 0x1c54 (module_lookup_0x1c3e+22_phase3)
.byte 0x53

; Inline PGM data: 1 byte starting at 0x1c55 (module_lookup_0x1c3e+23_audio12)
.byte 0x5b

; Inline PGM data: 1 byte starting at 0x1c56 (module_lookup_0x1c3e+24_orgasm)
.byte 0x5e

; Inline PGM data: 1 byte starting at 0x1c57 (module_lookup_0x1c3e+25_orgasm_part2)
.byte 0x68

; Inline PGM data: 1 byte starting at 0x1c58 (module_lookup_0x1c3e+26_orgasm_part3)
.byte 0x70

; Inline PGM data: 1 byte starting at 0x1c59 (module_lookup_0x1c3e+27_orgasm_part4)
.byte 0x74

; Inline PGM data: 1 byte starting at 0x1c5a (module_lookup_0x1c3e+28_torment)
.byte 0x8d

; Inline PGM data: 1 byte starting at 0x1c5b (module_lookup_0x1c3e+29_torment_a_on)
.byte 0xa1

; Inline PGM data: 1 byte starting at 0x1c5c (module_lookup_0x1c3e+30_torment_b_on)
.byte 0xa6

; Inline PGM data: 1 byte starting at 0x1c5d (module_lookup_0x1c3e+31_torment_a_on)
.byte 0xab

; Inline PGM data: 1 byte starting at 0x1c5e (module_lookup_0x1c3e+32_random2)
.byte 0xb0

; Inline PGM data: 1 byte starting at 0x1c5f (module_lookup_0x1c3e+33_combob)
.byte 0x1c

; Inline PGM data: 1 byte starting at 0x1c60 (module_lookup_0x1c3e+34_audio3)
.byte 0xc7

; Inline PGM data: 1 byte starting at 0x1c61 (module_lookup_0x1c3e+35_phase2b)
.byte 0x11

; Inline PGM data: 7 words starting at 0x1c62 (FFFF)
.word 0xffff
.word 0xffff
.word 0xffff
.word 0xffff
.word 0xffff
.word 0xffff
.word 0xffff

; Inline PGM data: 40 words starting at 0x1c70 (CallTable)
.word 0x03df
.word 0x03de
.word 0x03f0
.word 0x0449
.word 0x050e
.word 0x03df
.word 0x04cd
.word 0x04d2
.word 0x041f
.word 0x0429
.word 0x0410
.word 0x04b4
.word 0x04c4
.word 0x0533
.word 0x054a
.word 0x04a7
.word 0x0433
.word 0x043e
.word 0x02ff
.word 0x0577
.word 0x057d
.word 0x0583
.word 0x05cc
.word 0x0d3b
.word 0x0aa6
.word 0x056c
.word 0x055c
.word 0x0564
.word 0x0abd
.word 0x01a9
.word 0x0677
.word 0x03c8
.word 0x04f3
.word 0x04ff
.word 0x058f
.word 0x0587
.word 0x058b
.word 0x0b3b
.word 0x0b3b
.word 0x0b3b

; Inline PGM data: 4 words starting at 0x1cc0 (FFFF)
.word 0xffff
.word 0xffff
.word 0xffff
.word 0xffff

; Inline PGM data: 1 string starting at 0x1cc8 (00-Shut Off Power!!)
String_0x1cc8_00_Shut_Off_Power___0:    ; Address 0x1cc8 (7368)
.ascii "Shut Off Power!!"

; Inline PGM data: 1 string starting at 0x1cd8 (01-SelfTest OK V1.6)
String_0x1cd8_01_SelfTest_OK_V1_6_0:    ; Address 0x1cd8 (7384)
.ascii "SelfTest OK V1.6"

; Inline PGM data: 1 string starting at 0x1ce8 (02-Copyright)
String_0x1ce8_02_Copyright_0:    ; Address 0x1ce8 (7400)
.ascii "(c) '04 Eros Tek"

; Inline PGM data: 1 string starting at 0x1cf8 (03-Product Name)
String_0x1cf8_03_Product_Name_0:    ; Address 0x1cf8 (7416)
.ascii "Eros Tek ET-312 "

; Inline PGM data: 1 string starting at 0x1d08 (04-Press any key)
String_0x1d08_04_Press_any_key_0:    ; Address 0x1d08 (7432)
.ascii "Press Any Key..."

; Inline PGM data: 1 string starting at 0x1d18 (05-Selects Mode)
String_0x1d18_05_Selects_Mode_0:    ; Address 0x1d18 (7448)
.byte 0xb3
.ascii " "
.byte 0xb4
.ascii " Selects Mode"

; Inline PGM data: 1 string starting at 0x1d28 (06-Press or OK)
String_0x1d28_06_Press_or_OK_0:    ; Address 0x1d28 (7464)
.ascii "Press "
.byte 0xb3
.ascii " "
.byte 0xb4
.ascii " or OK "

; Inline PGM data: 1 string starting at 0x1d38 (07-Start Ramp Up)
String_0x1d38_07_Start_Ramp_Up_0:    ; Address 0x1d38 (7480)
.ascii "Start Ramp Up?  "

; Inline PGM data: 1 string starting at 0x1d48 (08-Set Split Mode)
String_0x1d48_08_Set_Split_Mode_0:    ; Address 0x1d48 (7496)
.ascii "Set Split Mode? "

; Inline PGM data: 1 string starting at 0x1d58 (09-Set As Favorite)
String_0x1d58_09_Set_As_Favorite_0:    ; Address 0x1d58 (7512)
.ascii "Set As Favorite?"

; Inline PGM data: 1 string starting at 0x1d68 (0A-Set Pwr Level)
String_0x1d68_0A_Set_Pwr_Level_0:    ; Address 0x1d68 (7528)
.ascii "Set Pwr Level?  "

; Inline PGM data: 1 string starting at 0x1d78 (0B-Link Slave Unit)
String_0x1d78_0B_Link_Slave_Unit_0:    ; Address 0x1d78 (7544)
.ascii "Link Slave Unit?"

; Inline PGM data: 1 string starting at 0x1d88 (0C-Save Settings)
String_0x1d88_0C_Save_Settings_0:    ; Address 0x1d88 (7560)
.ascii "Save Settings?  "

; Inline PGM data: 1 string starting at 0x1d98 (0D-Reset Settings)
String_0x1d98_0D_Reset_Settings_0:    ; Address 0x1d98 (7576)
.ascii "Reset Settings? "

; Inline PGM data: 1 string starting at 0x1da8 (0E-Adjust Advanced)
String_0x1da8_0E_Adjust_Advanced_0:    ; Address 0x1da8 (7592)
.ascii "Adjust Advanced?"

; Inline PGM data: 1 string starting at 0x1db8 (0F-Ramp Mode)
String_0x1db8_0F_Ramp_Mode_0:    ; Address 0x1db8 (7608)
.ascii "Ramp:    "
.byte 0xb3
.byte 0xb4
.ascii "=Mode"

; Inline PGM data: 1 string starting at 0x1dc8 (10-Space16)
String_0x1dc8_10_Space16_0:    ; Address 0x1dc8 (7624)
.ascii "                "

; Inline PGM data: 1 string starting at 0x1dd8 (64-Space8)
String_0x1dd8_64_Space8_0:    ; Address 0x1dd8 (7640)
.ascii "        "

; Inline PGM data: 1 string starting at 0x1de0 (65-Select)
String_0x1de0_65_Select_0:    ; Address 0x1de0 (7648)
.ascii "Select: "

; Inline PGM data: 1 string starting at 0x1de8 (66-CA-Battery)
String_0x1de8_66_CA_Battery_0:    ; Address 0x1de8 (7656)
.ascii "Battery:"

; Inline PGM data: 1 string starting at 0x1df0 (67-CB-Failure)
String_0x1df0_67_CB_Failure_0:    ; Address 0x1df0 (7664)
.ascii "Failure "

; Inline PGM data: 1 string starting at 0x1df8 (68-CC-Pwr Lev)
String_0x1df8_68_CC_Pwr_Lev_0:    ; Address 0x1df8 (7672)
.ascii "Pwr Lev:"

; Inline PGM data: 1 string starting at 0x1e00 (69-Adjust)
String_0x1e00_69_Adjust_0:    ; Address 0x1e00 (7680)
.ascii " Adjust?"

; Inline PGM data: 1 string starting at 0x1e08 (6A-Menus)
String_0x1e08_6A_Menus_0:    ; Address 0x1e08 (7688)
.ascii "Menus:  "

; Inline PGM data: 1 string starting at 0x1e10 (6B-Low)
String_0x1e10_6B_Low_0:    ; Address 0x1e10 (7696)
.ascii " Low    "

; Inline PGM data: 1 string starting at 0x1e18 (6C-Normal)
String_0x1e18_6C_Normal_0:    ; Address 0x1e18 (7704)
.ascii " Normal "

; Inline PGM data: 1 string starting at 0x1e20 (6D-High)
String_0x1e20_6D_High_0:    ; Address 0x1e20 (7712)
.ascii " High   "

; Inline PGM data: 1 string starting at 0x1e28 (6E-D2-RampLevl)
String_0x1e28_6E_D2_RampLevl_0:    ; Address 0x1e28 (7720)
.ascii "RampLevl"

; Inline PGM data: 1 string starting at 0x1e30 (6F-D3-RampTime)
String_0x1e30_6F_D3_RampTime_0:    ; Address 0x1e30 (7728)
.ascii "RampTime"

; Inline PGM data: 1 string starting at 0x1e38 (70-D4-Depth)
String_0x1e38_70_D4_Depth_0:    ; Address 0x1e38 (7736)
.ascii "   Depth"

; Inline PGM data: 1 string starting at 0x1e40 (71-D5-Tempo)
String_0x1e40_71_D5_Tempo_0:    ; Address 0x1e40 (7744)
.ascii "   Tempo"

; Inline PGM data: 1 string starting at 0x1e48 (72-D6-Freq)
String_0x1e48_72_D6_Freq_0:    ; Address 0x1e48 (7752)
.ascii "   Freq."

; Inline PGM data: 1 string starting at 0x1e50 (73-D7-Effect)
String_0x1e50_73_D7_Effect_0:    ; Address 0x1e50 (7760)
.ascii "  Effect"

; Inline PGM data: 1 string starting at 0x1e58 (74-D8-Width)
String_0x1e58_74_D8_Width_0:    ; Address 0x1e58 (7768)
.ascii "   Width"

; Inline PGM data: 1 string starting at 0x1e60 (75-D9-Pace)
String_0x1e60_75_D9_Pace_0:    ; Address 0x1e60 (7776)
.ascii "    Pace"

; Inline PGM data: 1 string starting at 0x1e68 (76-Waves)
String_0x1e68_76_Waves_0:    ; Address 0x1e68 (7784)
.ascii " Waves  "

; Inline PGM data: 1 string starting at 0x1e70 (77-Stroke)
String_0x1e70_77_Stroke_0:    ; Address 0x1e70 (7792)
.ascii " Stroke "

; Inline PGM data: 1 string starting at 0x1e78 (78-Climb)
String_0x1e78_78_Climb_0:    ; Address 0x1e78 (7800)
.ascii " Climb  "

; Inline PGM data: 1 string starting at 0x1e80 (79-Combo)
String_0x1e80_79_Combo_0:    ; Address 0x1e80 (7808)
.ascii " Combo  "

; Inline PGM data: 1 string starting at 0x1e88 (7A-Intense)
String_0x1e88_7A_Intense_0:    ; Address 0x1e88 (7816)
.ascii " Intense"

; Inline PGM data: 1 string starting at 0x1e90 (7B-Rhythm)
String_0x1e90_7B_Rhythm_0:    ; Address 0x1e90 (7824)
.ascii " Rhythm "

; Inline PGM data: 1 string starting at 0x1e98 (7C-Audio1)
String_0x1e98_7C_Audio1_0:    ; Address 0x1e98 (7832)
.ascii " Audio 1"

; Inline PGM data: 1 string starting at 0x1ea0 (7D-Audio2)
String_0x1ea0_7D_Audio2_0:    ; Address 0x1ea0 (7840)
.ascii " Audio 2"

; Inline PGM data: 1 string starting at 0x1ea8 (7E-Audio3)
String_0x1ea8_7E_Audio3_0:    ; Address 0x1ea8 (7848)
.ascii " Audio 3"

; Inline PGM data: 1 string starting at 0x1eb0 (7F-Split)
String_0x1eb0_7F_Split_0:    ; Address 0x1eb0 (7856)
.ascii " Split  "

; Inline PGM data: 1 string starting at 0x1eb8 (80-Random1)
String_0x1eb8_80_Random1_0:    ; Address 0x1eb8 (7864)
.ascii " Random1"

; Inline PGM data: 1 string starting at 0x1ec0 (81-Random2)
String_0x1ec0_81_Random2_0:    ; Address 0x1ec0 (7872)
.ascii " Random2"

; Inline PGM data: 1 string starting at 0x1ec8 (82-Toggle)
String_0x1ec8_82_Toggle_0:    ; Address 0x1ec8 (7880)
.ascii " Toggle "

; Inline PGM data: 1 string starting at 0x1ed0 (83-Orgasm)
String_0x1ed0_83_Orgasm_0:    ; Address 0x1ed0 (7888)
.ascii " Orgasm "

; Inline PGM data: 1 string starting at 0x1ed8 (84-Torment)
String_0x1ed8_84_Torment_0:    ; Address 0x1ed8 (7896)
.ascii " Torment"

; Inline PGM data: 1 string starting at 0x1ee0 (85-Phase1)
String_0x1ee0_85_Phase1_0:    ; Address 0x1ee0 (7904)
.ascii " Phase 1"

; Inline PGM data: 1 string starting at 0x1ee8 (86-Phase2)
String_0x1ee8_86_Phase2_0:    ; Address 0x1ee8 (7912)
.ascii " Phase 2"

; Inline PGM data: 1 string starting at 0x1ef0 (87-Phase3)
String_0x1ef0_87_Phase3_0:    ; Address 0x1ef0 (7920)
.ascii " Phase 3"

; Inline PGM data: 1 string starting at 0x1ef8 (88-User1)
String_0x1ef8_88_User1_0:    ; Address 0x1ef8 (7928)
.ascii " User 1 "

; Inline PGM data: 1 string starting at 0x1f00 (89-User2)
String_0x1f00_89_User2_0:    ; Address 0x1f00 (7936)
.ascii " User 2 "

; Inline PGM data: 1 string starting at 0x1f08 (8A-User3)
String_0x1f08_8A_User3_0:    ; Address 0x1f08 (7944)
.ascii " User 3 "

; Inline PGM data: 1 string starting at 0x1f10 (8B-User4)
String_0x1f10_8B_User4_0:    ; Address 0x1f10 (7952)
.ascii " User 4 "

; Inline PGM data: 1 string starting at 0x1f18 (8C-User5)
String_0x1f18_8C_User5_0:    ; Address 0x1f18 (7960)
.ascii " User 5 "

; Inline PGM data: 1 string starting at 0x1f20 (8D-User6)
String_0x1f20_8D_User6_0:    ; Address 0x1f20 (7968)
.ascii " User 6 "

; Inline PGM data: 1 string starting at 0x1f28 (8E-User7)
String_0x1f28_8E_User7_0:    ; Address 0x1f28 (7976)
.ascii " User 7 "

; Inline PGM data: 1 string starting at 0x1f30 (F3-SplitA)
String_0x1f30_F3_SplitA_0:    ; Address 0x1f30 (7984)
.ascii "Split A:"

; Inline PGM data: 1 string starting at 0x1f38 (F4-SplitB)
String_0x1f38_F4_SplitB_0:    ; Address 0x1f38 (7992)
.ascii "Split B:"

; Inline PGM data: 1 string starting at 0x1f40 (Sel Fav)
String_0x1f40_Sel_Fav_0:    ; Address 0x1f40 (8000)
.ascii "Sel Fav:"

; Inline PGM data: 1 string starting at 0x1f48 (Ramping)
String_0x1f48_Ramping_0:    ; Address 0x1f48 (8008)
.ascii "Ramping "

; Inline PGM data: 1 string starting at 0x1f50 (F7-Saved)
String_0x1f50_F7_Saved_0:    ; Address 0x1f50 (8016)
.ascii "Saved!  "

; Inline PGM data: 1 string starting at 0x1f58 (F8-Linked)
String_0x1f58_F8_Linked_0:    ; Address 0x1f58 (8024)
.ascii "Linked! "

; Inline PGM data: 1 string starting at 0x1f60 (Master)
String_0x1f60_Master_0:    ; Address 0x1f60 (8032)
.ascii "Master  "

; Inline PGM data: 1 string starting at 0x1f68 (Slave)
String_0x1f68_Slave_0:    ; Address 0x1f68 (8040)
.ascii "Slave   "

; Inline PGM data: 1 string starting at 0x1f70 (Percent)
String_0x1f70_Percent_0:    ; Address 0x1f70 (8048)
.ascii "    %   "

; Inline PGM data: 1 string starting at 0x1f78 (FC-A B)
String_0x1f78_FC_A_B_0:    ; Address 0x1f78 (8056)
.ascii "A   B   "

; Inline PGM data: 1 string starting at 0x1f80 (Ramp)
String_0x1f80_Ramp_0:    ; Address 0x1f80 (8064)
.ascii "Ramp:   "

; Inline PGM data: 1 string starting at 0x1f88 (Space8_2)
String_0x1f88_Space8_2_0:    ; Address 0x1f88 (8072)
.ascii "        "

; Inline PGM data: 1 string starting at 0x1f90 (Space8_3)
String_0x1f90_Space8_3_0:    ; Address 0x1f90 (8080)
.ascii "        "

; Inline PGM data: 2 words starting at 0x1f98 (FFFF)
.word 0xffff
.word 0xffff

; Inline PGM data: 1 byte starting at 0x1f9c (Initial value of x80-$4080)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1f9d (Initial value of x80-$4081)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1f9e (Initial value of x80-$4082)
.byte 0x02

; Inline PGM data: 1 byte starting at 0x1f9f (Initial value of x80-$4083)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fa0 (Initial value of x80-$4084)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fa1 (Initial value of x80-$4085)
.byte 0x03

; Inline PGM data: 1 byte starting at 0x1fa2 (Initial value of x80-$4086)
.byte 0x0f

; Inline PGM data: 1 byte starting at 0x1fa3 (Initial value of x80-$4087)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fa4 (Initial value of x80-$4088 routine timer low, x81-$4188 )
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fa5 (Initial value of x80-$4089 routine timer mid, x81-$4189)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fa6 (Initial value of x80-$408a routine timer high, x81-$418a)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fa7 (Initial value of x80-$408b routine timer slower, x81-$418b)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fa8 (Initial value of x80-$408c, x81-$418c)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fa9 (Initial value of x80-$408d-random-min, x81-$418d)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1faa (Initial value of x80-$408e-random-max, x81-$418e)
.byte 0x08

; Inline PGM data: 1 byte starting at 0x1fab (Initial value of x80-$408f-unknown, x81-$418f)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fac (Initial value of x80-$4090, x81-$4190 current gate select)
.byte 0x06

; Inline PGM data: 1 byte starting at 0x1fad (Initial value of x80-$4091, x81-$4191)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fae (Initial value of x80-$4092, x81-$4192)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1faf (Initial value of x80-$4093, x81-$4193)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fb0 (Initial value of x80-$4094, x81-$4194)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fb1 (Initial value of x80-$4095, x81-$4195)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fb2 (Initial value of x80-$4096, x81-$4196)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fb3 (Initial value of x80-$4097, x81-$4197)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fb4 (Initial value of x80-$4098, x81-$4198)
.byte 0x3e

; Inline PGM data: 1 byte starting at 0x1fb5 (Initial value of x80-$4099, x81-$4199)
.byte 0x3e

; Inline PGM data: 1 byte starting at 0x1fb6 (Initial value of x80-$409a, x81-$419a)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fb7 (Initial value of x80-$409b, x81-$419b)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fb8 (Initial value of x80-$409c, x81-$419c mode switch ramp value counter)
.byte 0x9c

; Inline PGM data: 1 byte starting at 0x1fb9 (Initial value of x80-$409d, x81-$419d)
.byte 0x9c

; Inline PGM data: 1 byte starting at 0x1fba (Initial value of x80-$409e, x81-$419e)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fbb (Initial value of x80-$409f, x81-$419f)
.byte 0x07

; Inline PGM data: 1 byte starting at 0x1fbc (Initial value of x80-$40a0, x81-$41a0)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1fbd (Initial value of x80-$40a1, x81-$41a1)
.byte 0xfc

; Inline PGM data: 1 byte starting at 0x1fbe (Initial value of x80-$40a2, x81-$41a2)
.byte 0xfc

; Inline PGM data: 1 byte starting at 0x1fbf (Initial value of x80-$40a3, x81-$41a3)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1fc0 (Initial value of x80-$40a4, x81-$41a4)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fc1 (Initial value of x80-$40a5, x81-$41a5)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fc2 (Initial value of x80-$40a6, x81-$41a6)
.byte 0xcd

; Inline PGM data: 1 byte starting at 0x1fc3 (Initial value of x80-$40a7, x81-$41a7)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fc4 (Initial value of x80-$40a8, x81-$41a8)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1fc5 (Initial value of x80-$40a9, x81-$41a9)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1fc6 (Initial value of x80-$40aa, x81-$41aa)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fc7 (Initial value of x80-$40ab, x81-$41ab)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fc8 (Initial value of x80-$40ac, x81-$41ac)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fc9 (Initial value of x80-$40ad, x81-$41ad)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fca (Initial value of x80-$40ae, x81-$41ae)
.byte 0x16

; Inline PGM data: 1 byte starting at 0x1fcb (Initial value of x80-$40af, x81-$41af)
.byte 0x09

; Inline PGM data: 1 byte starting at 0x1fcc (Initial value of x80-$40b0, x81-$41b0)
.byte 0x64

; Inline PGM data: 1 byte starting at 0x1fcd (Initial value of x80-$40b1, x81-$41b1)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1fce (Initial value of x80-$40b2, x81-$41b2)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1fcf (Initial value of x80-$40b3, x81-$41b3)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fd0 (Initial value of x80-$40b4, x81-$41b4)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fd1 (Initial value of x80-$40b5, x81-$41b5)
.byte 0x08

; Inline PGM data: 1 byte starting at 0x1fd2 (Initial value of x80-$40b6, x81-$41b6)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fd3 (Initial value of x80-$40b7, x81-$41b7)
.byte 0x82

; Inline PGM data: 1 byte starting at 0x1fd4 (Initial value of x80-$40b8, x81-$41b8)
.byte 0x32

; Inline PGM data: 1 byte starting at 0x1fd5 (Initial value of x80-$40b9, x81-$41b9)
.byte 0xc8

; Inline PGM data: 1 byte starting at 0x1fd6 (Initial value of x80-$40ba, x81-$41ba)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1fd7 (Initial value of x80-$40bb, x81-$41bb)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1fd8 (Initial value of x80-$40bc, x81-$41bc)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fd9 (Initial value of x80-$40bd, x81-$41bd)
.byte 0xff

; Inline PGM data: 1 byte starting at 0x1fda (Initial value of x80-$40be, x81-$41be)
.byte 0x04

; Inline PGM data: 1 byte starting at 0x1fdb (Initial value of x80-$40bf, x81-$41bf)
.byte 0x00

; Inline PGM data: 1 byte starting at 0x1fdc (Copied to 0x1f0-$41f0-unknown)
.byte 0xc0

; Inline PGM data: 1 byte starting at 0x1fdd (Copied to 0x1f1-$41f1-serial-output-buffer-pointer)
.byte 0x2c

; Inline PGM data: 1 byte starting at 0x1fde (Copied to 0x1f2-$41f2-serial-input-buffer-pointer)
.byte 0x20

; Inline PGM data: 1 byte starting at 0x1fdf (Copied to 0x1f3-$41f3-current-top-mode)
.byte 0x87

; Inline PGM data: 1 byte starting at 0x1fe0 (Copied to 0x1f4-$41f4-power-level)
.byte 0x02

; Inline PGM data: 1 byte starting at 0x1fe1 (Copied to 0x1f5-$41f5-split-mode-a)
.byte 0x77

; Inline PGM data: 1 byte starting at 0x1fe2 (Copied to 0x1f6-$41f6-split-mode-b)
.byte 0x76

; Inline PGM data: 1 byte starting at 0x1fe3 (Copied to 0x1f7-$41f7-favourite-mode)
.byte 0x76

; Inline PGM data: 1 byte starting at 0x1fe4 (Copied to 0x1f8-$41f8-advanced-ramplevel)
.byte 0xe1

; Inline PGM data: 1 byte starting at 0x1fe5 (Copied to 0x1f9-$41f9-advanced-ramptime)
.byte 0x14

; Inline PGM data: 1 byte starting at 0x1fe6 (Copied to 0x1fa-$41fa-advanced-depth)
.byte 0xd7

; Inline PGM data: 1 byte starting at 0x1fe7 (Copied to 0x1fb-$41fb-advanced-tempo)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1fe8 (Copied to 0x1fc-$41fc-advanced-freq)
.byte 0x19

; Inline PGM data: 1 byte starting at 0x1fe9 (Copied to 0x1fd-$41fd-advanced-effect)
.byte 0x05

; Inline PGM data: 1 byte starting at 0x1fea (Copied to 0x1fe-$41fe-advanced-width)
.byte 0x82

; Inline PGM data: 1 byte starting at 0x1feb (Copied to 0x1ff-$41ff-advanced-pace)
.byte 0x05

; Inline PGM data: 2 bytes starting at 0x1fec (ramp-level-range)
.byte 0xcd
.byte 0xff

; Inline PGM data: 2 bytes starting at 0x1fee (ramp-time-range)
.byte 0x01
.byte 0x78

; Inline PGM data: 2 bytes starting at 0x1ff0 (intensity-depth-range)
.byte 0xa5
.byte 0xff

; Inline PGM data: 2 bytes starting at 0x1ff2 (tempo-range)
.byte 0x01
.byte 0x64

; Inline PGM data: 2 bytes starting at 0x1ff4 (frequency-range)
.byte 0x0f
.byte 0xfa

; Inline PGM data: 2 bytes starting at 0x1ff6 (effect-range)
.byte 0x01
.byte 0x64

; Inline PGM data: 2 bytes starting at 0x1ff8 (width-range)
.byte 0x46
.byte 0xfa

; Inline PGM data: 2 bytes starting at 0x1ffa (pace-range)
.byte 0x01
.byte 0x64

; Inline PGM data: 1 byte starting at 0x1ffc (box_model_always_0c)
.byte 0x0c

; Inline PGM data: 1 byte starting at 0x1ffd (firmware_version_major)
.byte 0x01

; Inline PGM data: 1 byte starting at 0x1ffe (firmware_version_minor)
.byte 0x06

; Inline PGM data: 1 byte starting at 0x1fff (firmware_version_release)
.byte 0x00

; Inline PGM data: 10 bytes starting at 0x2000 (module_climbc_blockb)
.byte 0x85
.byte 0x02
.byte 0xb2
.byte 0x02
.byte 0xae
.byte 0xff
.byte 0xb3
.byte 0x0a
.byte 0x00
.byte 0x00

; Inline PGM data: 10 bytes starting at 0x200a (module_climbc_blockc)
.byte 0x85
.byte 0x02
.byte 0xb2
.byte 0x05
.byte 0xae
.byte 0xff
.byte 0xb3
.byte 0x08
.byte 0x00
.byte 0x00

; Inline PGM data: 14 bytes starting at 0x2014 (module_strokeb)
.byte 0x86
.byte 0x01
.byte 0x87
.byte 0x40
.byte 0xbe
.byte 0x41
.byte 0xbb
.byte 0x02
.byte 0xb5
.byte 0x41
.byte 0xb0
.byte 0x80
.byte 0x00
.byte 0x00

; Inline PGM data: 4 bytes starting at 0x2022 (module_phase2)
.byte 0xac
.byte 0x25
.byte 0x00
.byte 0x00

; Inline PGM data: 6 bytes starting at 0x2026 (module_wavesb)
.byte 0xfb
.byte 0x03
.byte 0xf0
.byte 0x40
.byte 0x00
.byte 0x00

; Inline PGM data: 12 bytes starting at 0x202c (module_comboa)
.byte 0x86
.byte 0x00
.byte 0x87
.byte 0x40
.byte 0x9a
.byte 0x4a
.byte 0xb5
.byte 0x02
.byte 0xbe
.byte 0x26
.byte 0x00
.byte 0x00

; Inline PGM data: 6 bytes starting at 0x2038 (module_combob)
.byte 0xf2
.byte 0x02
.byte 0xfb
.byte 0x02
.byte 0x00
.byte 0x00

; Inline PGM data: 4 bytes starting at 0x203e (module_intensea)
.byte 0x86
.byte 0x09
.byte 0x00
.byte 0x00

; Inline PGM data: 32 bytes starting at 0x2042 (module_rhythm)
.byte 0x95
.byte 0x1f
.byte 0x95
.byte 0x1f
.byte 0x9a
.byte 0x49
.byte 0x96
.byte 0x02
.byte 0xa5
.byte 0xe0
.byte 0x97
.byte 0x10
.byte 0x86
.byte 0x01
.byte 0x87
.byte 0x17
.byte 0xb7
.byte 0x46
.byte 0xab
.byte 0xfd
.byte 0xbe
.byte 0x00
.byte 0xab
.byte 0xfd
.byte 0xa9
.byte 0x00
.byte 0xac
.byte 0x01
.byte 0xa6
.byte 0xe0
.byte 0x00
.byte 0x00

; Inline PGM data: 14 bytes starting at 0x2062 (module_rhythm_blockb)
.byte 0xb7
.byte 0xb4
.byte 0x97
.byte 0x11
.byte 0x50
.byte 0xa5
.byte 0x01
.byte 0x00
.byte 0xb7
.byte 0x46
.byte 0x97
.byte 0x10
.byte 0x00
.byte 0x00

; Inline PGM data: 22 bytes starting at 0x2070 (module_toggle)
.byte 0xb5
.byte 0x04
.byte 0x96
.byte 0x02
.byte 0x42
.byte 0x0d
.byte 0x44
.byte 0x95
.byte 0x97
.byte 0x13
.byte 0xbf
.byte 0x04
.byte 0x87
.byte 0x7f
.byte 0x90
.byte 0x07
.byte 0xd0
.byte 0x06
.byte 0x86
.byte 0x00
.byte 0x00
.byte 0x00

; Inline PGM data: 16 bytes starting at 0x2086 (module_toggle_blockb)
.byte 0x85
.byte 0x01
.byte 0x90
.byte 0x06
.byte 0x85
.byte 0x03
.byte 0x97
.byte 0x12
.byte 0xd0
.byte 0x07
.byte 0x42
.byte 0x0d
.byte 0x44
.byte 0x95
.byte 0x00
.byte 0x00

; Inline PGM data: 12 bytes starting at 0x2096 (module_phase1a)
.byte 0x86
.byte 0x01
.byte 0x87
.byte 0x20
.byte 0xb5
.byte 0x04
.byte 0xbe
.byte 0x00
.byte 0xb7
.byte 0x7d
.byte 0x00
.byte 0x00

; Inline PGM data: 4 bytes starting at 0x20a2 (module_phase2a)
.byte 0xb7
.byte 0x79
.byte 0x00
.byte 0x00

; Inline PGM data: 16 bytes starting at 0x20a6 (module_phase3)
.byte 0x83
.byte 0x08
.byte 0xd0
.byte 0xa0
.byte 0xac
.byte 0x01
.byte 0x86
.byte 0xcd
.byte 0x87
.byte 0xd4
.byte 0xb5
.byte 0x04
.byte 0xec
.byte 0x09
.byte 0x00
.byte 0x00

; Inline PGM data: 6 bytes starting at 0x20b6 (module_audio12)
.byte 0xb5
.byte 0x04
.byte 0xbe
.byte 0x00
.byte 0x00
.byte 0x00

; Inline PGM data: 20 bytes starting at 0x20bc (module_orgasm)
.byte 0xac
.byte 0x00
.byte 0xb7
.byte 0x32
.byte 0xbb
.byte 0x04
.byte 0xba
.byte 0x01
.byte 0xb8
.byte 0x32
.byte 0x85
.byte 0x01
.byte 0xbe
.byte 0x01
.byte 0xbd
.byte 0x19
.byte 0xfe
.byte 0x00
.byte 0x00
.byte 0x00

; Inline PGM data: 24 bytes starting at 0x20d0 (module_orgasm_blockb)
.byte 0x85
.byte 0x01
.byte 0xbb
.byte 0xff
.byte 0xbc
.byte 0x1a
.byte 0xfe
.byte 0x01
.byte 0xfd
.byte 0xff
.byte 0x85
.byte 0x03
.byte 0x50
.byte 0xb8
.byte 0x02
.byte 0x00
.byte 0x85
.byte 0x01
.byte 0xbe
.byte 0x00
.byte 0xfc
.byte 0x1b
.byte 0x00
.byte 0x00

; Inline PGM data: 12 bytes starting at 0x20e8 (module_orgasm_blockd)
.byte 0x85
.byte 0x01
.byte 0xbe
.byte 0x01
.byte 0xfe
.byte 0x00
.byte 0xbb
.byte 0x01
.byte 0xfb
.byte 0x01
.byte 0x00
.byte 0x00

; Inline PGM data: 4 bytes starting at 0x20f4 (module_program1)
.byte 0x90
.byte 0x06
.byte 0x00
.byte 0x00

; Inline PGM data: 4 bytes starting at 0x20f8 (unknown)
.byte 0x90
.byte 0x07
.byte 0x00
.byte 0x00

; Inline PGM data: 8 bytes starting at 0x20fc (module_intenseb)
.byte 0xd8
.byte 0x3f
.byte 0xd9
.byte 0x3f
.byte 0xda
.byte 0x01
.byte 0x00
.byte 0x00

; Inline PGM data: 22 bytes starting at 0x2104 (module_climbc_blockc)
.byte 0xa9
.byte 0x02
.byte 0xac
.byte 0x55
.byte 0xb5
.byte 0x00
.byte 0x86
.byte 0x00
.byte 0x87
.byte 0x20
.byte 0x90
.byte 0x05
.byte 0xaa
.byte 0xfe
.byte 0xab
.byte 0xfe
.byte 0xbe
.byte 0x00
.byte 0xb7
.byte 0xff
.byte 0x00
.byte 0x00

; Inline PGM data: 40 bytes starting at 0x211a (module_climbc_torment)
.byte 0x85
.byte 0x03
.byte 0xac
.byte 0x00
.byte 0xa5
.byte 0xb0
.byte 0x90
.byte 0x06
.byte 0x8d
.byte 0x05
.byte 0x8e
.byte 0x18
.byte 0x4d
.byte 0x95
.byte 0xd6
.byte 0x03
.byte 0xab
.byte 0x1c
.byte 0x8d
.byte 0xe0
.byte 0x8e
.byte 0xff
.byte 0x4c
.byte 0xa7
.byte 0x8d
.byte 0x06
.byte 0x8e
.byte 0x3f
.byte 0x4c
.byte 0xa8
.byte 0x8d
.byte 0x1d
.byte 0x8e
.byte 0x1f
.byte 0x4d
.byte 0x97
.byte 0xab
.byte 0xff
.byte 0x00
.byte 0x00

; Inline PGM data: 10 bytes starting at 0x2142 (module_torment_blockb)
.byte 0x85
.byte 0x03
.byte 0xac
.byte 0x01
.byte 0x90
.byte 0x07
.byte 0xab
.byte 0x1c
.byte 0x00
.byte 0x00

; Inline PGM data: 10 bytes starting at 0x214c (module_torment_blockc)
.byte 0x85
.byte 0x02
.byte 0xac
.byte 0x01
.byte 0x90
.byte 0x07
.byte 0xab
.byte 0x1c
.byte 0x00
.byte 0x00

; Inline PGM data: 10 bytes starting at 0x2156 (module_torment_blockd)
.byte 0x85
.byte 0x01
.byte 0xac
.byte 0x01
.byte 0x90
.byte 0x07
.byte 0xab
.byte 0x1c
.byte 0x00
.byte 0x00

; Inline PGM data: 36 bytes starting at 0x2160 (module_torment_random2)
.byte 0x8d
.byte 0x01
.byte 0x8e
.byte 0x04
.byte 0x4d
.byte 0xb2
.byte 0x4c
.byte 0xa8
.byte 0x4d
.byte 0xa8
.byte 0x4c
.byte 0xb1
.byte 0x4d
.byte 0xb1
.byte 0x4c
.byte 0xba
.byte 0x4d
.byte 0xba
.byte 0xbe
.byte 0x01
.byte 0xb5
.byte 0x02
.byte 0xac
.byte 0x02
.byte 0xd6
.byte 0x03
.byte 0xd7
.byte 0x20
.byte 0x8d
.byte 0x05
.byte 0x8e
.byte 0x1f
.byte 0x4d
.byte 0x95
.byte 0x00
.byte 0x00

; Inline PGM data: 10 bytes starting at 0x2184 (module_strokeb)
.byte 0xec
.byte 0x41
.byte 0xe6
.byte 0xe6
.byte 0xf7
.byte 0xd8
.byte 0xe9
.byte 0x01
.byte 0x00
.byte 0x00

; Inline PGM data: 8 bytes starting at 0x218e (module_audio3)
.byte 0xb5
.byte 0x00
.byte 0xbe
.byte 0x00
.byte 0xae
.byte 0x0a
.byte 0x00
.byte 0x00

; Inline PGM data: 16 bytes starting at 0x2196 (module_climba)
.byte 0x86
.byte 0x01
.byte 0x87
.byte 0x64
.byte 0xb5
.byte 0x41
.byte 0xb3
.byte 0x06
.byte 0xb0
.byte 0xff
.byte 0xae
.byte 0xff
.byte 0xb2
.byte 0x01
.byte 0x00
.byte 0x00

; Inline PGM data: 8 bytes starting at 0x21a6 (module_climba_blockb)
.byte 0xb2
.byte 0x02
.byte 0xae
.byte 0xff
.byte 0xb3
.byte 0x07
.byte 0x00
.byte 0x00

; Inline PGM data: 8 bytes starting at 0x21ae (module_climba_blockc)
.byte 0xb2
.byte 0x04
.byte 0xae
.byte 0xff
.byte 0xb3
.byte 0x05
.byte 0x00
.byte 0x00

; Inline PGM data: 18 bytes starting at 0x21b6 (module_climbb)
.byte 0x85
.byte 0x02
.byte 0x86
.byte 0x01
.byte 0x87
.byte 0x64
.byte 0xb5
.byte 0x41
.byte 0xb3
.byte 0x09
.byte 0xb0
.byte 0xff
.byte 0xae
.byte 0xff
.byte 0xb2
.byte 0x01
.byte 0x00
.byte 0x00

; Inline PGM data: 3717 words starting at 0x21c8 (random_unused)
.word 0xb9ff
.word 0xd3ae
.word 0x18ff
.word 0xe57e
.word 0x000e
.word 0x654c
.word 0xdc95
.word 0xe25e
.word 0x8c9c
.word 0x6465
.word 0x7825
.word 0x13ee
.word 0xd5cb
.word 0x2625
.word 0x379b
.word 0x0fd2
.word 0x5832
.word 0xe58d
.word 0x2718
.word 0x1145
.word 0x145d
.word 0x3df1
.word 0x9b72
.word 0x7994
.word 0x0f4a
.word 0xb077
.word 0xa9b1
.word 0x4ba2
.word 0xd1ec
.word 0x239c
.word 0xab92
.word 0xad65
.word 0xe5aa
.word 0x60b1
.word 0xc006
.word 0x6a66
.word 0x5ddf
.word 0x9557
.word 0x4ab2
.word 0x7343
.word 0x4d5a
.word 0xd109
.word 0x6f6f
.word 0x5b2e
.word 0x4cde
.word 0x8c91
.word 0x9bc9
.word 0xd96d
.word 0xf9a1
.word 0x1e90
.word 0xfa81
.word 0x49da
.word 0x72ce
.word 0x45f8
.word 0x000d
.word 0x2962
.word 0xdd05
.word 0xa193
.word 0xe316
.word 0x9d88
.word 0xe1d8
.word 0x397c
.word 0x1ef7
.word 0xede1
.word 0x2b4e
.word 0xf6a2
.word 0xee42
.word 0x0498
.word 0xec61
.word 0x254b
.word 0xd63c
.word 0xf1ea
.word 0x5782
.word 0xf78d
.word 0x1d5e
.word 0x68a9
.word 0x2612
.word 0x02d4
.word 0x4cd4
.word 0x40bb
.word 0x14e9
.word 0xc061
.word 0xb300
.word 0xf49a
.word 0x62d1
.word 0x0dc7
.word 0xe4f6
.word 0x24d3
.word 0x5409
.word 0xab6e
.word 0x3400
.word 0x1489
.word 0xb3c5
.word 0xc012
.word 0x3f19
.word 0x2af1
.word 0x4baa
.word 0x5443
.word 0x6273
.word 0x72d6
.word 0x6d55
.word 0xd5e5
.word 0x41f4
.word 0x1b15
.word 0x6cd3
.word 0x95af
.word 0x41b2
.word 0xf920
.word 0x2128
.word 0x49ae
.word 0x0c7d
.word 0x037d
.word 0x69ca
.word 0x8ac2
.word 0x1254
.word 0xd445
.word 0xa425
.word 0x551d
.word 0x05ec
.word 0x2ca7
.word 0x3617
.word 0x8dc9
.word 0x5b2f
.word 0x6f65
.word 0x0873
.word 0x7620
.word 0xceb8
.word 0x2355
.word 0x0680
.word 0x3a54
.word 0xdc5a
.word 0x74df
.word 0xa07a
.word 0x66e7
.word 0x4998
.word 0xb183
.word 0x4b0d
.word 0x6b32
.word 0x9b2c
.word 0xce52
.word 0xffdf
.word 0x20e0
.word 0x9b83
.word 0xe271
.word 0xb905
.word 0x3c71
.word 0xd83d
.word 0xa89c
.word 0xf88a
.word 0xdeba
.word 0x25af
.word 0x009f
.word 0x42ee
.word 0x0762
.word 0x1863
.word 0x6edd
.word 0x9fa3
.word 0x1d65
.word 0x8b95
.word 0x98cb
.word 0x1a90
.word 0x6893
.word 0x1db5
.word 0xca73
.word 0x458f
.word 0x9710
.word 0xb0ea
.word 0x73f4
.word 0xb4f1
.word 0x3ad3
.word 0xeb8b
.word 0xa7ff
.word 0x7ff7
.word 0x4629
.word 0xb7a6
.word 0x9d59
.word 0xc259
.word 0x9731
.word 0xc47b
.word 0x315e
.word 0x1fc1
.word 0x675f
.word 0x0300
.word 0x617a
.word 0x394e
.word 0xdafb
.word 0x2b5d
.word 0xd1b0
.word 0x3814
.word 0x74a2
.word 0x376f
.word 0x4915
.word 0x4998
.word 0x9fc2
.word 0xe446
.word 0x3453
.word 0x1d57
.word 0x2820
.word 0x36a9
.word 0x2229
.word 0x683e
.word 0xc053
.word 0xf18f
.word 0x45e7
.word 0x6131
.word 0x7e48
.word 0x22a6
.word 0xf5f5
.word 0x4786
.word 0x59bf
.word 0x96cf
.word 0x2d4b
.word 0xd889
.word 0xb1cb
.word 0x5f9e
.word 0x0ef8
.word 0xd9f8
.word 0xc553
.word 0x55dc
.word 0x599e
.word 0x9386
.word 0x3b95
.word 0x9106
.word 0xf7f2
.word 0x525a
.word 0x9ea0
.word 0xf1cd
.word 0x733e
.word 0xe78f
.word 0xd9d7
.word 0x9995
.word 0x7ce0
.word 0x25b4
.word 0xbf73
.word 0x6ef9
.word 0x66cb
.word 0x664b
.word 0x8500
.word 0x9b44
.word 0xa903
.word 0x054c
.word 0x44dd
.word 0x0ef8
.word 0x5e24
.word 0xe3a2
.word 0x7abe
.word 0xfa49
.word 0xc6d9
.word 0xe4aa
.word 0x882b
.word 0x55a0
.word 0xc567
.word 0x71b9
.word 0x3300
.word 0x591a
.word 0x6122
.word 0xf695
.word 0x25ed
.word 0x0508
.word 0x46f4
.word 0x63f9
.word 0x6bf6
.word 0x9b6f
.word 0x43db
.word 0xad13
.word 0xf6f2
.word 0x2188
.word 0xcd6a
.word 0x4d07
.word 0x1d0e
.word 0xe23f
.word 0x7945
.word 0xbd6c
.word 0x1849
.word 0xedb6
.word 0x83a7
.word 0x00cc
.word 0x84f8
.word 0x93c1
.word 0x4cde
.word 0x1926
.word 0xe342
.word 0xeb69
.word 0xd5cb
.word 0x916e
.word 0x1ba2
.word 0x4f6b
.word 0x4765
.word 0xf409
.word 0xf46a
.word 0xdfb9
.word 0x6d35
.word 0x5254
.word 0x9d3c
.word 0xfbf6
.word 0x37da
.word 0xc01c
.word 0x2691
.word 0xcafc
.word 0x3784
.word 0xd624
.word 0x0534
.word 0xb857
.word 0x257a
.word 0x30a5
.word 0x93c6
.word 0xf2c9
.word 0x5d96
.word 0xf0c7
.word 0x8e39
.word 0xeac6
.word 0x5dc6
.word 0x392b
.word 0x9757
.word 0xd7f8
.word 0x4a8b
.word 0xb364
.word 0xb33b
.word 0x34ba
.word 0x6a7c
.word 0x0c77
.word 0xccd5
.word 0x3f9f
.word 0xa9c2
.word 0x7260
.word 0x2f69
.word 0x79ea
.word 0x169b
.word 0x1c8d
.word 0x0e0e
.word 0x2a15
.word 0x65d9
.word 0xc163
.word 0xfd31
.word 0xdc4d
.word 0x6e62
.word 0x1db7
.word 0x7711
.word 0xddf2
.word 0xaab0
.word 0x7254
.word 0x5842
.word 0xbf19
.word 0xbb51
.word 0x027a
.word 0x622d
.word 0xda0c
.word 0xe266
.word 0x975b
.word 0xbb8c
.word 0xc7c6
.word 0x8826
.word 0xfe9d
.word 0x6cf0
.word 0xe57a
.word 0xb95a
.word 0x85dd
.word 0xe13d
.word 0xd60b
.word 0xa2e0
.word 0x8329
.word 0x6d2b
.word 0x0094
.word 0x182a
.word 0xcf83
.word 0xc5c5
.word 0x0edf
.word 0x12be
.word 0x4562
.word 0x83ec
.word 0x6ef0
.word 0x2cb6
.word 0x4632
.word 0xa3d2
.word 0xd379
.word 0x253f
.word 0x36d2
.word 0x0781
.word 0xb365
.word 0x5f1d
.word 0xfe13
.word 0xf454
.word 0xc850
.word 0x6323
.word 0x8a3d
.word 0x947b
.word 0x910a
.word 0x5dbd
.word 0x4b8c
.word 0x7479
.word 0xd01a
.word 0x9a68
.word 0xb4ad
.word 0x06a7
.word 0x0c37
.word 0x0f36
.word 0xbe44
.word 0x1eb1
.word 0x0ecf
.word 0xd44d
.word 0x6667
.word 0x7715
.word 0x6683
.word 0xa267
.word 0x2c22
.word 0x2daa
.word 0xe5a6
.word 0x5b51
.word 0x94f2
.word 0x4315
.word 0x22c3
.word 0x806e
.word 0xa74d
.word 0x1d53
.word 0xf816
.word 0xbb33
.word 0x7117
.word 0x0434
.word 0x0410
.word 0x55ab
.word 0x822c
.word 0xa7dc
.word 0x29d6
.word 0xbef3
.word 0x6fda
.word 0x9642
.word 0x0ec0
.word 0x0bbd
.word 0x5066
.word 0xc7b3
.word 0x9ddc
.word 0x71cf
.word 0x4285
.word 0x134f
.word 0x846b
.word 0xcd83
.word 0xe5e2
.word 0xb888
.word 0xb561
.word 0x1d46
.word 0xdd9d
.word 0xd7a8
.word 0xe8e7
.word 0x061b
.word 0x52c7
.word 0xf649
.word 0x15da
.word 0x4e17
.word 0x72e9
.word 0x7ddd
.word 0xfd4b
.word 0x61e5
.word 0xec7d
.word 0x3a26
.word 0xa0ff
.word 0xcf42
.word 0x7571
.word 0xdfbd
.word 0xc7ef
.word 0xca7f
.word 0x45a9
.word 0x808d
.word 0x7ac7
.word 0xaa04
.word 0x987c
.word 0x1857
.word 0x8868
.word 0x6bca
.word 0x3034
.word 0x042e
.word 0x0368
.word 0x2cde
.word 0xcf90
.word 0x84fa
.word 0xc390
.word 0xb0e3
.word 0xc044
.word 0x3ff7
.word 0xe15b
.word 0xde8e
.word 0x4d75
.word 0xbe35
.word 0x3c7b
.word 0x422a
.word 0x483f
.word 0xed18
.word 0xf655
.word 0x8c13
.word 0x8431
.word 0xa0d7
.word 0xf582
.word 0x0e3d
.word 0x5bce
.word 0x0aff
.word 0x654e
.word 0x40ad
.word 0x280c
.word 0x45ef
.word 0x323b
.word 0x3efc
.word 0xcdd7
.word 0xcf5b
.word 0x907d
.word 0x47d9
.word 0x2c8d
.word 0x09cb
.word 0x757e
.word 0x3d86
.word 0xaf81
.word 0xb91c
.word 0x1b59
.word 0x2a58
.word 0xc27a
.word 0x87fc
.word 0x8261
.word 0xb73a
.word 0x5633
.word 0x8170
.word 0xea99
.word 0xb528
.word 0x5edb
.word 0x9950
.word 0x5a3b
.word 0x96b6
.word 0x5494
.word 0x23c7
.word 0x1e33
.word 0xf289
.word 0xb3f6
.word 0x5ad5
.word 0x43a3
.word 0x05da
.word 0x7c8b
.word 0xdbcf
.word 0x1b60
.word 0x2ef8
.word 0xb353
.word 0x27dc
.word 0xbd71
.word 0x70c5
.word 0xe13f
.word 0x2278
.word 0x8495
.word 0xf236
.word 0x92b8
.word 0x98f3
.word 0x8dbb
.word 0x80d5
.word 0xd718
.word 0xb5f0
.word 0x3c8a
.word 0x0a41
.word 0xc32d
.word 0x8ae8
.word 0xb6d9
.word 0x22aa
.word 0xefbb
.word 0x8da7
.word 0x6536
.word 0x8158
.word 0xf8f9
.word 0x18cc
.word 0x7961
.word 0x8123
.word 0xfe11
.word 0xe74b
.word 0x64cf
.word 0xa1fa
.word 0x25a2
.word 0x9cec
.word 0x5c2a
.word 0x065e
.word 0x153f
.word 0x3dcb
.word 0xdbce
.word 0xf7e6
.word 0x7cf0
.word 0xb2d8
.word 0x1f4b
.word 0x5ebc
.word 0x89ae
.word 0x4957
.word 0xace8
.word 0x4c1c
.word 0x71e9
.word 0x3460
.word 0xc71c
.word 0x73da
.word 0xec04
.word 0x085e
.word 0xfb15
.word 0xabda
.word 0xb7d5
.word 0x3e91
.word 0x9733
.word 0x7097
.word 0x1127
.word 0xb38e
.word 0x2b8c
.word 0x619f
.word 0x403a
.word 0x2abb
.word 0x1068
.word 0xc113
.word 0x0c40
.word 0xc7d6
.word 0xe0c4
.word 0xf72a
.word 0x40e0
.word 0x946d
.word 0xf7d1
.word 0x10ad
.word 0x2eb5
.word 0xfd66
.word 0xfa73
.word 0x397b
.word 0x2ace
.word 0x5677
.word 0x4fc5
.word 0x4804
.word 0x0c2d
.word 0x52ac
.word 0x9f92
.word 0x32cf
.word 0xb04a
.word 0x8ce6
.word 0x5adb
.word 0x94f7
.word 0x7890
.word 0x0058
.word 0x3156
.word 0x2da7
.word 0xc6dc
.word 0x900a
.word 0x9beb
.word 0x60a4
.word 0x8403
.word 0x8158
.word 0x5337
.word 0xb4c1
.word 0x9f4a
.word 0xfe72
.word 0xd60b
.word 0x566b
.word 0x85ee
.word 0x92db
.word 0xe7ec
.word 0x931d
.word 0xad9c
.word 0xb0ed
.word 0x0d92
.word 0x61ea
.word 0x0ef8
.word 0x2d51
.word 0x126c
.word 0xd5f8
.word 0xa419
.word 0xc28a
.word 0x8318
.word 0xac01
.word 0xf009
.word 0x8d69
.word 0x35ed
.word 0xc5d3
.word 0x7647
.word 0x8e97
.word 0xbc73
.word 0xa3cf
.word 0x3f46
.word 0x2c11
.word 0xf4e8
.word 0xed6c
.word 0x57ee
.word 0xb0a5
.word 0x7bbb
.word 0xf0b3
.word 0x4f18
.word 0xc778
.word 0x3212
.word 0x1ac2
.word 0xba14
.word 0x0282
.word 0xc145
.word 0x7e4b
.word 0xb225
.word 0x580e
.word 0x1263
.word 0x5514
.word 0x5201
.word 0xa03d
.word 0xd3ab
.word 0x7977
.word 0x3b53
.word 0x1a81
.word 0xf712
.word 0xe9e2
.word 0x113b
.word 0xe524
.word 0x34c1
.word 0x4a56
.word 0xfdcb
.word 0x87c1
.word 0x8495
.word 0x63ea
.word 0x2a8a
.word 0x6bc8
.word 0xa6a0
.word 0x9e46
.word 0x4bf3
.word 0x5cfc
.word 0x9ba5
.word 0x8c2a
.word 0x12f5
.word 0x0df7
.word 0x2c9e
.word 0x60e8
.word 0xb872
.word 0x93a2
.word 0x6137
.word 0x70e4
.word 0x7ac2
.word 0xe7bf
.word 0x0952
.word 0xb918
.word 0x172f
.word 0x6761
.word 0x3783
.word 0x5a94
.word 0x5579
.word 0x5471
.word 0xc194
.word 0x16f8
.word 0x7c51
.word 0x5329
.word 0xc200
.word 0xd5fa
.word 0xd8e0
.word 0xee9a
.word 0x177a
.word 0x21e5
.word 0x393f
.word 0x1228
.word 0xe365
.word 0xab16
.word 0x74ff
.word 0x900a
.word 0x0d5b
.word 0xc67f
.word 0xe1a1
.word 0x9ecd
.word 0xbea9
.word 0xe826
.word 0xdc1c
.word 0x56d1
.word 0xe6cf
.word 0x2ea5
.word 0x475c
.word 0x34c8
.word 0xb602
.word 0xd7a9
.word 0x04bf
.word 0x9b3c
.word 0x25ac
.word 0xc675
.word 0x7e99
.word 0x4e08
.word 0x6ee9
.word 0x035f
.word 0x1faf
.word 0xf9db
.word 0x8e09
.word 0x384f
.word 0xd9bd
.word 0xa7ba
.word 0xc913
.word 0x3645
.word 0xa0f2
.word 0x4b7d
.word 0x243e
.word 0x70d2
.word 0xeb71
.word 0x3a50
.word 0xe978
.word 0x7c9c
.word 0x39d0
.word 0xad32
.word 0x28e1
.word 0x97dd
.word 0x889a
.word 0x4277
.word 0x334f
.word 0x20e2
.word 0xddcf
.word 0x7a47
.word 0x1fc9
.word 0x1a8e
.word 0xc261
.word 0x3a1e
.word 0x480e
.word 0xadd6
.word 0xc1b7
.word 0x4c4c
.word 0xcc0e
.word 0xa345
.word 0xeb2c
.word 0xdd74
.word 0x0d6e
.word 0xed77
.word 0x568f
.word 0xff10
.word 0x3106
.word 0x1ea0
.word 0x98a2
.word 0x26ea
.word 0xa364
.word 0xed05
.word 0x4f9d
.word 0xada2
.word 0x9148
.word 0xb580
.word 0x9baa
.word 0x502c
.word 0x6e28
.word 0xf6fe
.word 0xa168
.word 0xb151
.word 0x70ac
.word 0xd302
.word 0x086b
.word 0xd62b
.word 0x1131
.word 0x9321
.word 0x7db9
.word 0xa8ab
.word 0x9048
.word 0x2385
.word 0x304c
.word 0x7316
.word 0x6f36
.word 0x916d
.word 0x5694
.word 0x6a81
.word 0xf473
.word 0x90aa
.word 0xa8f4
.word 0x225a
.word 0xab2d
.word 0xf921
.word 0xe143
.word 0x15e1
.word 0xe0c5
.word 0x464e
.word 0x414b
.word 0x1ea9
.word 0x274f
.word 0x17bd
.word 0x0e4b
.word 0x011a
.word 0xd714
.word 0xaf91
.word 0x1076
.word 0xe2f0
.word 0x8811
.word 0x76ff
.word 0x1373
.word 0xcbba
.word 0x9a77
.word 0x77d1
.word 0x67de
.word 0x2a5e
.word 0xaf2b
.word 0xe1e6
.word 0x61c4
.word 0x4e92
.word 0x2e46
.word 0x87ae
.word 0xd928
.word 0xef63
.word 0xc194
.word 0x62b1
.word 0xac82
.word 0xa5b0
.word 0xd617
.word 0x0c07
.word 0x393d
.word 0x6dad
.word 0x1f83
.word 0x45df
.word 0xe637
.word 0x2962
.word 0x13c1
.word 0x70fb
.word 0x9b42
.word 0x1f2c
.word 0x6d6e
.word 0x1530
.word 0x43a7
.word 0x7839
.word 0xab5c
.word 0x5fe8
.word 0x50a0
.word 0xc00e
.word 0x8e0e
.word 0x9da2
.word 0x36dc
.word 0x6a02
.word 0x9e3e
.word 0xc26e
.word 0xedfd
.word 0x4bc2
.word 0xa558
.word 0xe774
.word 0x711b
.word 0x1dce
.word 0x31fe
.word 0xc66c
.word 0x4440
.word 0xfcf8
.word 0x1584
.word 0x3f25
.word 0xe8eb
.word 0xeaea
.word 0xe773
.word 0xd500
.word 0x6890
.word 0x4c9f
.word 0x8109
.word 0x3074
.word 0xce15
.word 0x6ce6
.word 0x81b5
.word 0x9b8b
.word 0xac54
.word 0xf7e5
.word 0xcb9e
.word 0x8561
.word 0x959d
.word 0x7f91
.word 0x041b
.word 0x02a9
.word 0xa333
.word 0xf839
.word 0x1839
.word 0x482a
.word 0xf1cd
.word 0x3dfb
.word 0xb33a
.word 0x353c
.word 0x2015
.word 0x8b4b
.word 0xc912
.word 0xc64e
.word 0xd52a
.word 0x0271
.word 0x10eb
.word 0x9f61
.word 0x371f
.word 0x2909
.word 0x82a1
.word 0x888c
.word 0x737b
.word 0x6983
.word 0xde44
.word 0xeb78
.word 0x3ab9
.word 0x8ea3
.word 0x269b
.word 0x59e3
.word 0x3fc8
.word 0x4c00
.word 0x219d
.word 0x0520
.word 0xbb8b
.word 0xb687
.word 0xd8f8
.word 0x4693
.word 0xeb58
.word 0xc6f7
.word 0x1b8c
.word 0x1737
.word 0x8f7a
.word 0xda65
.word 0xfbee
.word 0x981a
.word 0x6bb1
.word 0x33b7
.word 0x50e8
.word 0x8ddd
.word 0xc8af
.word 0x762b
.word 0x32f6
.word 0xdb37
.word 0xf29b
.word 0x2dcf
.word 0x82c8
.word 0x1071
.word 0xba90
.word 0x4608
.word 0x60c5
.word 0xdae9
.word 0xf31c
.word 0x900e
.word 0xb484
.word 0x8d91
.word 0xf6c4
.word 0x436c
.word 0xa853
.word 0xa070
.word 0x207c
.word 0x7783
.word 0x29b3
.word 0x2e1e
.word 0x5031
.word 0xa906
.word 0x6cd7
.word 0x7749
.word 0x6c42
.word 0x3c7d
.word 0x662a
.word 0x5f34
.word 0xdc00
.word 0xf4c3
.word 0x50c8
.word 0xeb35
.word 0x0c34
.word 0x7b8a
.word 0x2b02
.word 0xc935
.word 0xec97
.word 0xddd5
.word 0x38dd
.word 0xc732
.word 0x715a
.word 0x0e7b
.word 0x7d91
.word 0x59be
.word 0x139d
.word 0x61a9
.word 0x450c
.word 0x167f
.word 0x4efa
.word 0x105e
.word 0x9e6f
.word 0x39af
.word 0x24fa
.word 0xb9ee
.word 0xdb8d
.word 0x229c
.word 0x979c
.word 0xdd81
.word 0x1271
.word 0xd527
.word 0x32d3
.word 0x6294
.word 0x9dd8
.word 0x7847
.word 0x7f06
.word 0x1075
.word 0x9bb1
.word 0xd684
.word 0x9090
.word 0x15c9
.word 0x6ea2
.word 0xe17e
.word 0x7940
.word 0x8307
.word 0x3c83
.word 0x2966
.word 0xd2d9
.word 0xcffc
.word 0x70e2
.word 0x6882
.word 0x3791
.word 0x5248
.word 0x3980
.word 0xf9ac
.word 0xc993
.word 0xc9dd
.word 0x08d1
.word 0x5ad2
.word 0xad7f
.word 0xd785
.word 0x147e
.word 0xaf75
.word 0x8ae7
.word 0x805b
.word 0xd7e4
.word 0x402b
.word 0x0dd2
.word 0xae4f
.word 0x9195
.word 0xf81f
.word 0x673a
.word 0xada4
.word 0xc2d4
.word 0xe68e
.word 0xcb90
.word 0xb173
.word 0xb21a
.word 0xbe4a
.word 0xf335
.word 0x4d27
.word 0xea96
.word 0x5739
.word 0x9a01
.word 0xfb01
.word 0xbaa7
.word 0x2cd4
.word 0x01be
.word 0x9a94
.word 0xb362
.word 0xddab
.word 0x6cab
.word 0xe948
.word 0x2d10
.word 0xaede
.word 0xa4fc
.word 0x0eda
.word 0xc0ae
.word 0x05a3
.word 0x7556
.word 0x13d8
.word 0xcd6e
.word 0xeec5
.word 0x3056
.word 0x6626
.word 0xf433
.word 0x9821
.word 0x2809
.word 0x577e
.word 0x9d17
.word 0xd729
.word 0x3773
.word 0x9bea
.word 0x72e6
.word 0xa262
.word 0x370a
.word 0xcd4a
.word 0xe1a2
.word 0x94e8
.word 0x8b3a
.word 0xead2
.word 0x9d00
.word 0x6de7
.word 0x96e1
.word 0xd38b
.word 0x1ce7
.word 0x9122
.word 0x41d2
.word 0xcdcf
.word 0x18f6
.word 0x866e
.word 0x7854
.word 0x02d0
.word 0x0ffc
.word 0x7836
.word 0xaba2
.word 0xfe10
.word 0xc580
.word 0xb6f7
.word 0x4f6b
.word 0x35e8
.word 0xbf39
.word 0x34c2
.word 0x5c52
.word 0x7a03
.word 0xc994
.word 0x09bf
.word 0xcf6d
.word 0x88e2
.word 0x6f33
.word 0xf0a7
.word 0x28c7
.word 0x7b58
.word 0x856b
.word 0xca47
.word 0xebe0
.word 0x550c
.word 0xa1c4
.word 0x1802
.word 0x202a
.word 0x7cfc
.word 0x9d7a
.word 0x834d
.word 0xd58c
.word 0x38f7
.word 0x1800
.word 0x5632
.word 0x99e0
.word 0x3721
.word 0xf479
.word 0x00d0
.word 0x0077
.word 0x0b71
.word 0xd840
.word 0x95d8
.word 0x2492
.word 0xa934
.word 0xad60
.word 0x4c0f
.word 0x21e9
.word 0xea89
.word 0x231a
.word 0x01d1
.word 0x9626
.word 0x0ce4
.word 0x2b63
.word 0xb28a
.word 0x2968
.word 0x308d
.word 0x7c65
.word 0x033c
.word 0x01c3
.word 0xdb21
.word 0x11fc
.word 0xbcfe
.word 0x4cbc
.word 0x760e
.word 0xa739
.word 0x487a
.word 0xb8d0
.word 0xd019
.word 0x41e1
.word 0x376c
.word 0xfcec
.word 0x9ada
.word 0xa6ec
.word 0xbb28
.word 0x4ff4
.word 0xe83c
.word 0xe008
.word 0x2c12
.word 0xed3e
.word 0xb5ff
.word 0xbd15
.word 0x8526
.word 0x9716
.word 0x5d38
.word 0x4fa9
.word 0xe770
.word 0x123a
.word 0x22ce
.word 0x6e8c
.word 0x1392
.word 0xa55d
.word 0xaafc
.word 0x333b
.word 0xf243
.word 0x9da6
.word 0x7dd4
.word 0x7c67
.word 0x0fcd
.word 0xca30
.word 0x8ab8
.word 0x6d75
.word 0x1a8c
.word 0x028a
.word 0xa1e1
.word 0xebfd
.word 0x6574
.word 0x9b36
.word 0xf8db
.word 0x214e
.word 0x6889
.word 0xf32c
.word 0xa805
.word 0xfde6
.word 0x3e66
.word 0xea57
.word 0x2f13
.word 0xb2fc
.word 0x28b9
.word 0x6414
.word 0xed8d
.word 0x36f8
.word 0x07c4
.word 0xcab8
.word 0xaa4f
.word 0xc3f7
.word 0xe4dc
.word 0x8809
.word 0x0c09
.word 0x584b
.word 0x6aeb
.word 0x8fc2
.word 0x23bf
.word 0x37f7
.word 0x69ef
.word 0xd211
.word 0xe049
.word 0x6634
.word 0x537a
.word 0xca1a
.word 0x97d1
.word 0x30f1
.word 0xc033
.word 0xf474
.word 0x835a
.word 0xa44c
.word 0xeb52
.word 0x50a9
.word 0x4035
.word 0x131c
.word 0x3526
.word 0xe2b8
.word 0x518c
.word 0x946a
.word 0x9f90
.word 0x3295
.word 0x99d9
.word 0x81f1
.word 0x5287
.word 0xcea5
.word 0xe46e
.word 0xf9a3
.word 0x1994
.word 0xc545
.word 0x5ded
.word 0x5f25
.word 0xe455
.word 0x2c42
.word 0x17cf
.word 0xd750
.word 0x45fd
.word 0x9b5f
.word 0x87df
.word 0xceb1
.word 0xf4d0
.word 0xafd5
.word 0x07be
.word 0x7108
.word 0x4da9
.word 0x87cc
.word 0x525f
.word 0x32ca
.word 0xce76
.word 0x49e5
.word 0x0c8a
.word 0x48a0
.word 0x9cb8
.word 0x9cb3
.word 0x395b
.word 0x2ee8
.word 0xfd06
.word 0x2e3b
.word 0xc3c2
.word 0x2131
.word 0xdd89
.word 0x2e79
.word 0xf802
.word 0xa5c2
.word 0x4b7f
.word 0xd0db
.word 0x0734
.word 0xff12
.word 0xfcba
.word 0xcec6
.word 0x88c4
.word 0xba4e
.word 0xc520
.word 0xe40f
.word 0xf2f1
.word 0x24d8
.word 0x222b
.word 0x5181
.word 0x254f
.word 0xcfc5
.word 0xb469
.word 0x5b5c
.word 0xe047
.word 0x135c
.word 0xbcfb
.word 0xc9d2
.word 0x4a93
.word 0x899c
.word 0xa418
.word 0x6889
.word 0x6bc5
.word 0x90b4
.word 0x7588
.word 0x891e
.word 0xb2bf
.word 0xc98b
.word 0x5f2c
.word 0x7f9f
.word 0x6f39
.word 0x9d38
.word 0x3673
.word 0x240e
.word 0x5840
.word 0xb489
.word 0xf2e4
.word 0x53e2
.word 0x06b4
.word 0x7d7e
.word 0x2c99
.word 0x6d87
.word 0x77c8
.word 0xabcd
.word 0xa6bf
.word 0xd6dc
.word 0x8c83
.word 0xb45d
.word 0xc119
.word 0x77b2
.word 0x8a43
.word 0x52cd
.word 0x077d
.word 0x3d51
.word 0x9b37
.word 0x04ed
.word 0xa154
.word 0x96f5
.word 0x4de2
.word 0x8c41
.word 0xdf1c
.word 0xf84b
.word 0x0f9d
.word 0x7184
.word 0xb5e7
.word 0x5cf7
.word 0xb914
.word 0x7c21
.word 0x3bdb
.word 0xbd0f
.word 0x03c6
.word 0x3db9
.word 0x2ab1
.word 0x9b9f
.word 0x0a87
.word 0x85a2
.word 0x6439
.word 0x7d24
.word 0xd0ff
.word 0xeb64
.word 0x6bd3
.word 0x6814
.word 0xbb2a
.word 0x4a3c
.word 0xe6f5
.word 0x6b53
.word 0x14d8
.word 0x3f9b
.word 0x21aa
.word 0x15bd
.word 0x872d
.word 0xada5
.word 0x8b0f
.word 0xfca0
.word 0xa821
.word 0x3bb5
.word 0x39d6
.word 0x3641
.word 0x6aff
.word 0xd3d6
.word 0x60c5
.word 0xe055
.word 0xa7e7
.word 0x2249
.word 0xdd35
.word 0x9c87
.word 0x9d4d
.word 0x1d04
.word 0xae96
.word 0x0df7
.word 0x6d7a
.word 0x782f
.word 0x78e8
.word 0x5cb6
.word 0x9c09
.word 0x2fa7
.word 0x0141
.word 0xb44d
.word 0x9469
.word 0x007e
.word 0xb54b
.word 0xc736
.word 0x235f
.word 0xec76
.word 0x24c5
.word 0x495f
.word 0xf883
.word 0xbb8b
.word 0x8000
.word 0x72ac
.word 0x2bc1
.word 0x7768
.word 0x2262
.word 0x7e74
.word 0xb4d7
.word 0xefef
.word 0x03e4
.word 0x2f01
.word 0xf0db
.word 0x33b4
.word 0x4596
.word 0x4812
.word 0x22b4
.word 0x1c80
.word 0xaa18
.word 0x115a
.word 0xee9e
.word 0xc3d0
.word 0x1920
.word 0xd701
.word 0xdda9
.word 0x0756
.word 0x1ef8
.word 0x6b20
.word 0xde39
.word 0x0a75
.word 0x69ff
.word 0xa147
.word 0xc185
.word 0xb2c7
.word 0x4c26
.word 0xd1f9
.word 0xbc1a
.word 0x2a98
.word 0x3f72
.word 0x572c
.word 0xe957
.word 0x616a
.word 0x5e7f
.word 0x14cc
.word 0xc4f0
.word 0x8871
.word 0xe8f9
.word 0xed37
.word 0xaf6e
.word 0x9616
.word 0xc023
.word 0x49c0
.word 0x6fab
.word 0xc577
.word 0xed52
.word 0x952e
.word 0xae58
.word 0x14e3
.word 0x1b70
.word 0xc13c
.word 0x7a79
.word 0xc660
.word 0x1a7c
.word 0xc319
.word 0xc2e6
.word 0xdf27
.word 0x5c07
.word 0x11e7
.word 0xdeca
.word 0xac25
.word 0x7ab6
.word 0x293e
.word 0x0626
.word 0x397a
.word 0xadc5
.word 0x0ba8
.word 0xd84c
.word 0xdbfb
.word 0x5780
.word 0xbc25
.word 0xd466
.word 0xa6b2
.word 0x7ac9
.word 0xc3a6
.word 0xe1ef
.word 0xf65a
.word 0x3d97
.word 0xad94
.word 0xc837
.word 0xe8e6
.word 0x6c74
.word 0x8a49
.word 0xb6e1
.word 0xe0f9
.word 0xf7fc
.word 0x6f93
.word 0xbc66
.word 0x036d
.word 0x7063
.word 0xf436
.word 0x5092
.word 0xbbcf
.word 0x90ed
.word 0xb669
.word 0xcb04
.word 0x38df
.word 0xb176
.word 0xd556
.word 0xecb0
.word 0xec13
.word 0x52ea
.word 0x759c
.word 0x525e
.word 0x0c12
.word 0x98cb
.word 0x3fce
.word 0x032b
.word 0x143b
.word 0xcab0
.word 0xdef4
.word 0xe905
.word 0x421e
.word 0xd2c2
.word 0x8507
.word 0x5230
.word 0x18ff
.word 0xc140
.word 0x6677
.word 0x6ec6
.word 0xdc59
.word 0x49fa
.word 0x3aa7
.word 0xd231
.word 0x1956
.word 0x42d8
.word 0xbd6d
.word 0xf9b1
.word 0x1d5a
.word 0x2852
.word 0x3194
.word 0xc0db
.word 0x7b77
.word 0x9af7
.word 0xd95c
.word 0xe715
.word 0x89f8
.word 0xdbe8
.word 0x7df7
.word 0x951d
.word 0xe1d9
.word 0x525c
.word 0xeb0c
.word 0xd382
.word 0xe24b
.word 0x0c1c
.word 0x7236
.word 0x0e27
.word 0x2e33
.word 0x3606
.word 0x6684
.word 0x97c5
.word 0x2ca9
.word 0xa68d
.word 0xa1f8
.word 0x2567
.word 0x857b
.word 0x5135
.word 0xff0a
.word 0x4fee
.word 0xa9aa
.word 0xd419
.word 0xdf24
.word 0x148d
.word 0x49e9
.word 0xee67
.word 0xa726
.word 0x554c
.word 0xdc23
.word 0x02e0
.word 0x3ee2
.word 0x5887
.word 0x1df4
.word 0x975b
.word 0x919e
.word 0x456e
.word 0x892d
.word 0xda41
.word 0x1197
.word 0xab85
.word 0xe353
.word 0x1810
.word 0x317a
.word 0xfa23
.word 0xb21f
.word 0x47db
.word 0xebeb
.word 0x07f5
.word 0xbffd
.word 0x7cc6
.word 0x3a01
.word 0x8d7a
.word 0x9a8f
.word 0x748c
.word 0x9fc6
.word 0xa986
.word 0x1529
.word 0x0efb
.word 0x9fb9
.word 0x5cc2
.word 0xc554
.word 0xcd74
.word 0x414d
.word 0x0b28
.word 0x864d
.word 0x596e
.word 0x926a
.word 0x0089
.word 0xf585
.word 0xfcf2
.word 0x22e9
.word 0xe809
.word 0xf621
.word 0x271e
.word 0x871a
.word 0x54a0
.word 0x2e7a
.word 0xeca4
.word 0xd740
.word 0x3a99
.word 0x889c
.word 0x844a
.word 0x3011
.word 0x7415
.word 0xb2c9
.word 0xc96a
.word 0x3238
.word 0x3e87
.word 0x9ff5
.word 0xba72
.word 0x81d5
.word 0xba37
.word 0x0549
.word 0xfc63
.word 0x46fa
.word 0x6ec0
.word 0xdea3
.word 0x5653
.word 0xad2e
.word 0xc294
.word 0xe812
.word 0x32ed
.word 0x66ec
.word 0x8576
.word 0x275c
.word 0x21ee
.word 0x2623
.word 0x67fd
.word 0x617a
.word 0x56a8
.word 0x25b5
.word 0x7e15
.word 0x9f19
.word 0x2781
.word 0xa0fa
.word 0xc37f
.word 0xb019
.word 0x9173
.word 0x573c
.word 0x934e
.word 0xa70f
.word 0xb38c
.word 0x0e3b
.word 0x316b
.word 0x5ac4
.word 0x506d
.word 0x0da8
.word 0x4110
.word 0xe4b6
.word 0x50cc
.word 0xa2ac
.word 0x4d4e
.word 0x2294
.word 0x3df4
.word 0x9c60
.word 0x4289
.word 0x37c5
.word 0xc842
.word 0xd055
.word 0xf2f9
.word 0x09e0
.word 0x44a8
.word 0x960c
.word 0x9129
.word 0xc432
.word 0x272c
.word 0x4a7c
.word 0x3a79
.word 0x553d
.word 0x8e68
.word 0xce91
.word 0x699d
.word 0xee36
.word 0xb809
.word 0x05a9
.word 0x801e
.word 0x8684
.word 0x8852
.word 0x5718
.word 0x45d7
.word 0x5846
.word 0x0698
.word 0x31a3
.word 0x6077
.word 0x61cc
.word 0xdcc6
.word 0x8406
.word 0xe004
.word 0xe51a
.word 0xdbd9
.word 0x4470
.word 0xb554
.word 0xe86a
.word 0x7663
.word 0xe904
.word 0x3593
.word 0xb7a9
.word 0x430a
.word 0xef58
.word 0x99c2
.word 0x5ff7
.word 0x7f07
.word 0x57f7
.word 0x7f34
.word 0x332a
.word 0x89aa
.word 0x26e1
.word 0x6711
.word 0x484a
.word 0x64d3
.word 0xe308
.word 0x39d5
.word 0xfa14
.word 0x3878
.word 0x1bd3
.word 0xbcd0
.word 0x6778
.word 0xd023
.word 0xdf9d
.word 0x1ea6
.word 0xf11d
.word 0x1a73
.word 0x4235
.word 0x70ce
.word 0xbeda
.word 0xac99
.word 0xde5d
.word 0x2915
.word 0x393d
.word 0x3cdb
.word 0x4e4d
.word 0xa01a
.word 0x9007
.word 0x2512
.word 0xb32f
.word 0x95d1
.word 0x36ac
.word 0xe72e
.word 0x31a2
.word 0xa703
.word 0x61d4
.word 0xa5ae
.word 0x713a
.word 0xddca
.word 0x8bde
.word 0xa62a
.word 0x1ffd
.word 0x1f18
.word 0xf35a
.word 0xd7cc
.word 0x6be5
.word 0xbc2f
.word 0x1b8d
.word 0x46d1
.word 0x8b62
.word 0xe428
.word 0x49f0
.word 0xa70a
.word 0x35d7
.word 0x2d6e
.word 0x09af
.word 0xd05f
.word 0x271b
.word 0x1041
.word 0xa72b
.word 0x3e49
.word 0xa1f8
.word 0x6b36
.word 0xb77a
.word 0x9055
.word 0xe7ad
.word 0xffb4
.word 0x8fe4
.word 0x09a5
.word 0xc16d
.word 0xf177
.word 0xca67
.word 0x1170
.word 0xfddf
.word 0x4b0f
.word 0xc532
.word 0xb380
.word 0xea9f
.word 0x7a5f
.word 0x232b
.word 0x1eb1
.word 0xddba
.word 0xd020
.word 0x4b6a
.word 0x2577
.word 0xaf33
.word 0x015e
.word 0xe7be
.word 0xc157
.word 0x3a82
.word 0xa8f8
.word 0x6425
.word 0x8c6a
.word 0xe112
.word 0xc222
.word 0x7756
.word 0x46df
.word 0x07c1
.word 0x2fe4
.word 0x9439
.word 0x5278
.word 0x9461
.word 0x369b
.word 0x776c
.word 0x380a
.word 0x763b
.word 0xff75
.word 0x9dbe
.word 0x23ff
.word 0x1c89
.word 0x19f7
.word 0xcab5
.word 0x62d5
.word 0xfafa
.word 0xf478
.word 0x830a
.word 0xe89f
.word 0x0a30
.word 0x66a5
.word 0x9329
.word 0xce81
.word 0x4843
.word 0x28fe
.word 0x88b4
.word 0xce37
.word 0x333d
.word 0x5855
.word 0x35ff
.word 0xc88d
.word 0x519d
.word 0xf754
.word 0x2f94
.word 0x40e5
.word 0xa9d7
.word 0x6af6
.word 0x52ae
.word 0xdbb6
.word 0x48d1
.word 0xfc0a
.word 0x3cc0
.word 0xe709
.word 0xbf65
.word 0x58b6
.word 0xcfed
.word 0xd2fd
.word 0xa2e3
.word 0x10f0
.word 0xb18f
.word 0xb042
.word 0x088e
.word 0x1b04
.word 0xcdb3
.word 0xb89f
.word 0x101d
.word 0x5113
.word 0xd299
.word 0xc56f
.word 0x583a
.word 0xef90
.word 0xb136
.word 0xd71d
.word 0x8504
.word 0x18c3
.word 0x21b4
.word 0x91ae
.word 0xc08e
.word 0x5048
.word 0x1cee
.word 0xbb36
.word 0x355f
.word 0x008f
.word 0x61f7
.word 0xc05f
.word 0x95f2
.word 0xf75c
.word 0xf292
.word 0x2fe7
.word 0x9336
.word 0xe546
.word 0x96b9
.word 0x3b20
.word 0x690e
.word 0xe03a
.word 0x5619
.word 0x3d71
.word 0x52d0
.word 0xe2f7
.word 0x0292
.word 0x2fd2
.word 0x0fc7
.word 0x4792
.word 0xabba
.word 0x3152
.word 0x64b3
.word 0x51f1
.word 0x2858
.word 0x0792
.word 0x9a46
.word 0xa552
.word 0x94eb
.word 0x9749
.word 0xfda7
.word 0xcdc3
.word 0xcc23
.word 0x6cc0
.word 0x5df1
.word 0xb6a9
.word 0xf465
.word 0x3755
.word 0x8fb2
.word 0x323c
.word 0xf149
.word 0x4bfa
.word 0xeb6e
.word 0x7607
.word 0xed1d
.word 0x1fb5
.word 0xce1c
.word 0x9b6b
.word 0xd861
.word 0xce20
.word 0x18a6
.word 0x1e1b
.word 0xe44b
.word 0x98e9
.word 0xad6c
.word 0x629f
.word 0x0643
.word 0x6151
.word 0xf5bf
.word 0x2ad3
.word 0x7a65
.word 0x2eaf
.word 0x5e68
.word 0x2266
.word 0x3e04
.word 0xadec
.word 0xd720
.word 0x565e
.word 0x9324
.word 0xac06
.word 0x5518
.word 0xb791
.word 0x82fe
.word 0x9f8f
.word 0x5070
.word 0x9b2c
.word 0x537e
.word 0x1d2d
.word 0x45c2
.word 0x3c2e
.word 0x15c5
.word 0x611a
.word 0x3397
.word 0x36eb
.word 0x1ba9
.word 0xcca4
.word 0x20ee
.word 0x0b8b
.word 0x7b32
.word 0x5fac
.word 0x93ba
.word 0xa08b
.word 0x8f1d
.word 0x4328
.word 0x1a62
.word 0xc039
.word 0x765b
.word 0x43a3
.word 0xc441
.word 0x963a
.word 0x9191
.word 0x4eba
.word 0xa526
.word 0x3505
.word 0x0998
.word 0xf89f
.word 0x57d4
.word 0x1168
.word 0x46fc
.word 0xf798
.word 0x7581
.word 0x8500
.word 0x787e
.word 0xa97f
.word 0x2158
.word 0x4ec3
.word 0x1094
.word 0x8b41
.word 0x7df9
.word 0x0c77
.word 0x45e7
.word 0xc161
.word 0x33f6
.word 0xc63a
.word 0x91d2
.word 0x9375
.word 0xf056
.word 0x65fb
.word 0x33e7
.word 0xeca6
.word 0xe213
.word 0x36fd
.word 0xae6b
.word 0xdb32
.word 0x409e
.word 0x6a59
.word 0x46d7
.word 0x14eb
.word 0xc058
.word 0x987b
.word 0x8857
.word 0x6eb6
.word 0x2019
.word 0x37a1
.word 0xc14d
.word 0x640f
.word 0xa1ab
.word 0x2661
.word 0x83cd
.word 0x9783
.word 0x854d
.word 0x2623
.word 0x2620
.word 0x4832
.word 0x9633
.word 0x5da1
.word 0x4244
.word 0xe055
.word 0xa002
.word 0xd36c
.word 0x3868
.word 0x6ab4
.word 0xf357
.word 0xf668
.word 0xa872
.word 0x152c
.word 0xe43f
.word 0x184c
.word 0xfa7b
.word 0xb531
.word 0x4cbe
.word 0xee25
.word 0xd850
.word 0x4148
.word 0x064a
.word 0x11d2
.word 0xb0f1
.word 0x548b
.word 0x734f
.word 0x7f87
.word 0x3513
.word 0xae27
.word 0xf7ab
.word 0x184d
.word 0xdca0
.word 0xb3df
.word 0x7a31
.word 0x237f
.word 0x6133
.word 0xe988
.word 0xea28
.word 0xc94c
.word 0x429f
.word 0x7c8d
.word 0xb7cb
.word 0x9739
.word 0x4167
.word 0xbb6a
.word 0x54c9
.word 0xfe9e
.word 0xe445
.word 0x9a33
.word 0xbac5
.word 0xd526
.word 0xf6a6
.word 0x300d
.word 0xe5d5
.word 0xd352
.word 0x062a
.word 0x38b1
.word 0x5704
.word 0x17f5
.word 0xe526
.word 0x93ef
.word 0x93d2
.word 0xa3b7
.word 0x2a24
.word 0xc226
.word 0xa1b1
.word 0xda94
.word 0xaf60
.word 0x6ece
.word 0x8f88
.word 0x075c
.word 0x134a
.word 0xe2f1
.word 0xec31
.word 0xd832
.word 0x3809
.word 0x8dac
.word 0x4dfd
.word 0xdd0f
.word 0xc5f4
.word 0x83b0
.word 0xca2d
.word 0x0c3f
.word 0xa319
.word 0xfbc5
.word 0x7f79
.word 0x3ee1
.word 0x82b8
.word 0xd143
.word 0x0e8b
.word 0xb069
.word 0x53c7
.word 0x0399
.word 0x1982
.word 0x8520
.word 0xcd6e
.word 0x36c9
.word 0xcb72
.word 0x41a0
.word 0xeb8a
.word 0x30e8
.word 0x4ee0
.word 0x4e5a
.word 0x6a2b
.word 0x5da1
.word 0x5449
.word 0x7912
.word 0x4d18
.word 0x4cb0
.word 0x909a
.word 0x7460
.word 0x5b48
.word 0x3169
.word 0x3cb7
.word 0x532f
.word 0x9e69
.word 0x6330
.word 0x93f6
.word 0x103f
.word 0xe45c
.word 0xdd01
.word 0x56a3
.word 0x0aa5
.word 0x3fb5
.word 0xc0e8
.word 0x4a7c
.word 0x8048
.word 0x873d
.word 0xcd87
.word 0xb634
.word 0x1964
.word 0xd571
.word 0xed95
.word 0xe7f2
.word 0x5d08
.word 0x0702
.word 0xab5b
.word 0xaed1
.word 0x3a9a
.word 0x4154
.word 0xb738
.word 0xde60
.word 0x8250
.word 0x6802
.word 0x631c
.word 0xd121
.word 0x6ab6
.word 0xa757
.word 0x270f
.word 0xe20c
.word 0x0b2d
.word 0xecd5
.word 0x1ea9
.word 0xf20c
.word 0xe368
.word 0x6ab0
.word 0x8999
.word 0xe57e
.word 0x53ef
.word 0x1751
.word 0x4920
.word 0x24b7
.word 0x209e
.word 0x2dd5
.word 0x6795
.word 0x1b7d
.word 0xf426
.word 0xab8d
.word 0x8ee1
.word 0xba8b
.word 0xdc88
.word 0xd27e
.word 0x8e03
.word 0xf60f
.word 0xca9f
.word 0xabe1
.word 0xd98b
.word 0x472d
.word 0x1295
.word 0x7ea2
.word 0x0721
.word 0x2a7c
.word 0xef6a
.word 0x5be3
.word 0x53fd
.word 0x9f86
.word 0xfd72
.word 0x9378
.word 0x1e6e
.word 0xaa4a
.word 0xbed6
.word 0x3d6a
.word 0x6955
.word 0xd4bc
.word 0x1811
.word 0xb376
.word 0x5da9
.word 0xa841
.word 0xd372
.word 0x148e
.word 0xc6f3
.word 0x3835
.word 0x1e9e
.word 0xc255
.word 0x91d1
.word 0x9868
.word 0x090d
.word 0xe4a5
.word 0x5375
.word 0x609a
.word 0x0a8a
.word 0xe40a
.word 0xc326
.word 0x2d05
.word 0x7ab6
.word 0xef46
.word 0x3dbc
.word 0x1ed1
.word 0x1784
.word 0x7acd
.word 0x3f25
.word 0x599f
.word 0x82bc
.word 0xb949
.word 0xeee5
.word 0x8601
.word 0xc07a
.word 0x2815
.word 0x908f
.word 0x50ff
.word 0xbbae
.word 0x04c4
.word 0x114f
.word 0xe992
.word 0xc09b
.word 0xd199
.word 0x8063
.word 0x8529
.word 0x015b
.word 0xd40e
.word 0x929b
.word 0xdc29
.word 0x1257
.word 0x9750
.word 0x1cde
.word 0xaa67
.word 0x6ed1
.word 0x6bbf
.word 0x9aa6
.word 0x30ae
.word 0xf15d
.word 0xdf70
.word 0xad80
.word 0xb33e
.word 0x5e61
.word 0x4cad
.word 0x9690
.word 0xfa49
.word 0xd89b
.word 0x4b71
.word 0xbf09
.word 0xd275
.word 0x6b99
.word 0x3aef
.word 0x31b7
.word 0x8c5f
.word 0x8340
.word 0xbd0a
.word 0x1c77
.word 0x7c14
.word 0x7147
.word 0x39dc
.word 0x54bb
.word 0x7999
.word 0xebbc
.word 0x5a32
.word 0xd109
.word 0x6162
.word 0x8a7c
.word 0x8c0c
.word 0x2c7b
.word 0x94dc
.word 0x4cbd
.word 0x8320
.word 0x273f
.word 0x77e5
.word 0x1286
.word 0xb556
.word 0x2316
.word 0xf151
.word 0x2132
.word 0xdc4b
.word 0xaad6
.word 0xef65
.word 0xa3f3
.word 0x77cf
.word 0xe5ea
.word 0xe15e
.word 0x254b
.word 0x4869
.word 0x24cf
.word 0x3de9
.word 0x1994
.word 0xd5d0
.word 0x5b97
.word 0xf9aa
.word 0x5377
.word 0xea72
.word 0xa268
.word 0x13b7
.word 0x8e76
.word 0x13f0
.word 0xb2fc
.word 0x0b1b
.word 0xe764
.word 0x259d
.word 0x6d20
.word 0x6556
.word 0x5ee9
.word 0xb404
.word 0x5537
.word 0x2adb
.word 0x5a01
.word 0x9b61
.word 0x11b7
.word 0x668f
.word 0x237d
.word 0x7a25
.word 0xeda9
.word 0xa94e
.word 0x687e
.word 0x3175
.word 0x592b
.word 0x8866
.word 0xb9ff
.word 0x68a9
.word 0x67ee
.word 0x1b1c
.word 0x0c4a
.word 0x08cf
.word 0x4fba
.word 0x7f25
.word 0x3b7f
.word 0xc128
.word 0xede8
.word 0x532c
.word 0x8213
.word 0x85a8
.word 0x3fe5
.word 0x3d51
.word 0x034c
.word 0x0978
.word 0xeab4
.word 0x65a5
.word 0x43c8
.word 0x4975
.word 0xb46b
.word 0xf7b1
.word 0xacf5
.word 0x03b0
.word 0x0ab2
.word 0xa3ef
.word 0x0b99
.word 0x38ee
.word 0x7949
.word 0x1d4d
.word 0x1249
.word 0xb028
.word 0x3681
.word 0x9faf
.word 0xd6f4
.word 0x750a
.word 0x99c0
.word 0x656c
.word 0x4f57
.word 0x5575
.word 0x9bff
.word 0x2ece
.word 0xdd88
.word 0x63ff
.word 0x5e4d
.word 0xc094
.word 0xbf6e
.word 0x7571
.word 0xa44c
.word 0x6271
.word 0x9c45
.word 0xa546
.word 0x54b1
.word 0x628d
.word 0xfd1d
.word 0xd230
.word 0xfac7
.word 0x8f01
.word 0xcf5a
.word 0x1e94
.word 0x46eb
.word 0xbd5d
.word 0xe333
.word 0x6f0b
.word 0x8a0e
.word 0x4624
.word 0x6f35
.word 0xf0e1
.word 0x3f38
.word 0x854c
.word 0x8cbf
.word 0x9098
.word 0x7e02
.word 0x5bc1
.word 0xb885
.word 0x8064
.word 0x8919
.word 0xade1
.word 0x5410
.word 0xb7af
.word 0x42c0
.word 0xe2ff
.word 0x263a
.word 0x6f94
.word 0xb04c
.word 0x67e2
.word 0xd6b5
.word 0xa766
.word 0x7fa7
.word 0x2d45
.word 0x7283
.word 0xa128
.word 0x7fd0
.word 0x2757
.word 0xec7c
.word 0x6414
.word 0x2257
.word 0xcf3a
.word 0x99cd
.word 0x3a16
.word 0x01e4
.word 0xa086
.word 0xb276
.word 0x3050
.word 0x55af
.word 0x9bc5
.word 0xd4ca
.word 0x9b97
.word 0x8007
.word 0xc4f7
.word 0x82f1
.word 0x8ff2
.word 0x84ce
.word 0xa40d
.word 0xa066
.word 0x6820
.word 0x88f9
.word 0xc770
.word 0xf77b
.word 0x4310
.word 0x5912
.word 0x3d7a
.word 0xb6d3
.word 0x8369
.word 0xe4b8
.word 0x1bf9
.word 0xede5
.word 0x4f02
.word 0xbf1c
.word 0xfab1
.word 0x137d
.word 0x1169
.word 0x9f83
.word 0x75d9
.word 0x7f3c
.word 0xf75e
.word 0xe1c8
.word 0xac9b
.word 0xf015
.word 0x7456
.word 0x03d9
.word 0xc596
.word 0x07d0
.word 0xbdfb
.word 0x2a38
.word 0x685d
.word 0xca8a
.word 0x4ea9
.word 0x9d7a
.word 0x41f8
.word 0x2131
.word 0x65f0
.word 0x46c9
.word 0x8060
.word 0x5a0a
.word 0x8417
.word 0x3663
.word 0x5a05
.word 0xa72c
.word 0xf195
.word 0x1f1b
.word 0x874a
.word 0x9d04
.word 0x3798
.word 0xdad5
.word 0xc405
.word 0xb5d1
.word 0xa480
.word 0xe00d
.word 0x5001
.word 0xcc28
.word 0xcb63
.word 0xd34e
.word 0x717e
.word 0xa570
.word 0x0289
.word 0xf5bd
.word 0xeeae
.word 0x6464
.word 0xe3ef
.word 0xad8e
.word 0x9538
.word 0x1396
.word 0xcdc5
.word 0x088b
.word 0xb5b7
.word 0x1fe8
.word 0x62f2
.word 0x3492
.word 0xa33a
.word 0xd913
.word 0x098e
.word 0x0416
.word 0x37c3
.word 0xf722
.word 0x6b65
.word 0x709b
.word 0x4dca
.word 0x13f6
.word 0xf878
.word 0x143c
.word 0x46b9
.word 0x29c2
.word 0x617d
.word 0xaf27
.word 0x8770
.word 0x1b8e
.word 0x1d5c
.word 0xa41d
.word 0xf7c1
.word 0x2fb6
.word 0xe6b2
.word 0x7af5
.word 0x83f2
.word 0x8d6a
.word 0x3c50
.word 0x5e18
.word 0x9c40
.word 0xc32e
.word 0xdfbb
.word 0x9e04
.word 0xb658
.word 0x4359
.word 0x57ab
.word 0x2dcb
.word 0xc8de
.word 0xe298
.word 0x6d8f
.word 0x2394
.word 0xd1e9
.word 0x596a
.word 0xb105
.word 0x3c17
.word 0x4f83
.word 0xc6a3
.word 0xf564
.word 0x5722
.word 0xc72b
.word 0x29ec
.word 0xce34
.word 0xf719
.word 0x4254
.word 0xe93f
.word 0x18b2
.word 0xc46f
.word 0xcce6
.word 0x4f6e
.word 0x7050
.word 0x0830
.word 0xf6ba
.word 0x089b
.word 0xba31
.word 0x3479
.word 0x5320
.word 0xa6be
.word 0x9bae
.word 0x5afd
.word 0xfc5b
.word 0x1d25
.word 0xfed6
.word 0xb380
.word 0x0e21
.word 0x48ed
.word 0x91e7
.word 0x195d
.word 0x291d
.word 0x638c
.word 0x47d9
.word 0x8c01
.word 0xf16f
.word 0x9049
.word 0xd5d2
.word 0xaf6f
.word 0x8f29
.word 0x55c0
.word 0x37b0
.word 0x49bd
.word 0x2fd2
.word 0x1a60
.word 0x2b85
.word 0xc794
.word 0x81e5
.word 0xadef
.word 0xb314
.word 0xb6b2
.word 0x3a51
.word 0xc003
.word 0x9557
.word 0x4c69
.word 0x93f8
.word 0x6889
.word 0xddfa
.word 0xde1f
.word 0xc632
.word 0x9e3f
.word 0x57df
.word 0x69ce
.word 0x9649
.word 0xc03c
.word 0x179a
.word 0x0c83
.word 0xc6fd
.word 0x0f65
.word 0xf3f5
.word 0x8ae1
.word 0x9fff
.word 0x30f7
.word 0x056b
.word 0xcb9e
.word 0x6c78
.word 0xad02
.word 0x2caf
.word 0x5903
.word 0xff81
.word 0x73ea
.word 0x8b24
.word 0xe56e
.word 0x2cab
.word 0x53e7
.word 0x0664
.word 0xc2d1
.word 0x4b77
.word 0x8484
.word 0xcabc
.word 0x6632
.word 0xb9dc
.word 0x1d21
.word 0xc3ac
.word 0xee2a
.word 0x55c6
.word 0x9e73
.word 0x2669
.word 0x9969
.word 0x0593
.word 0x6600
.word 0xe75d
.word 0x4a2f
.word 0x3097
.word 0x3ba6
.word 0x42a4
.word 0x09d2
.word 0x4497
.word 0xc814
.word 0x348e
.word 0x803d
.word 0x304f
.word 0x184d
.word 0x0022
.word 0x806d
.word 0xe8ee
.word 0x1e2a
.word 0xad97
.word 0x7cf4
.word 0xe697
.word 0x2fd6
.word 0x85db
.word 0x0a77
.word 0xa5e0
.word 0x8452
.word 0x960e
.word 0x6732
.word 0x2754
.word 0xbbf1
.word 0x3306
.word 0xf271
.word 0x6ef3
.word 0x55db
.word 0x71ca
.word 0xae17
.word 0x04af
.word 0x378c
.word 0xac19
.word 0xc31a
.word 0x75ef
.word 0x2b54
.word 0x02e3
.word 0xfc02
.word 0xd20e
.word 0x5ed7
.word 0xd4cd
.word 0x476f
.word 0x2edb
.word 0xe28c
.word 0x4baf
.word 0x3a92
.word 0x2318
.word 0x2b40
.word 0xcf17
.word 0x8bb0
.word 0x4cfd
.word 0x9492
.word 0x8fc5
.word 0x95a5
.word 0xcab4
.word 0xd977
.word 0xfe2f
.word 0xd85d
.word 0xc1dc
.word 0x9db5
.word 0x52fd
.word 0x775b
.word 0xda09
.word 0xe36a
.word 0x058c
.word 0xb934
.word 0xc141
.word 0x9784
.word 0x566d
.word 0x8b13
.word 0xa77e
.word 0x0448
.word 0xc7e5
.word 0xfb34
.word 0xbf30
.word 0x5ece
.word 0x9e6c
.word 0xbd6b
.word 0xc2ba
.word 0x3781
.word 0x6630
.word 0xa79d
.word 0x6df3
.word 0x0ca2
.word 0x6e92
.word 0x3643
.word 0x00a5
.word 0xb8c3
.word 0x47a6
.word 0x09ec
.word 0xbf0f
.word 0xfc4e
.word 0x48b5
.word 0x64ba
.word 0x7364
.word 0x00fe
.word 0x0cbc
.word 0xace2
.word 0xe84b
.word 0xcb63
.word 0xf0ec
.word 0xef2f
.word 0x6e60
.word 0xcb60
.word 0x972a
.word 0x5b7d
.word 0x5aaf
.word 0x51af
.word 0x688f
.word 0xc340
.word 0x843e
.word 0x1459
.word 0x0ce7
.word 0x20fc
.word 0xc982
.word 0xac40
.word 0xf334
.word 0x0ccd
.word 0x88e7
.word 0x1697
.word 0xcf2a
.word 0x47df
.word 0x274a
.word 0x3467
.word 0x15b2
.word 0x34f4
.word 0x8d80
.word 0x4c0a
.word 0x8169
.word 0x5be3
.word 0xa8cf
.word 0x87b1
.word 0x9021
.word 0xe716
.word 0xe772
.word 0x71e0
.word 0x065d
.word 0x2709
.word 0xbf18
.word 0x7eef
.word 0x68d6
.word 0x0fd0
.word 0x2863
.word 0x8189
.word 0x81fb
.word 0xb58f
.word 0x1e6b
.word 0x342e
.word 0xdf6b
.word 0xd601
.word 0x223a
.word 0xb5b3
.word 0x557b
.word 0x51f4
.word 0xb94f
.word 0x05be
.word 0x78b4
.word 0xaaca
.word 0xea1e
.word 0x894d
.word 0x2454
.word 0x86f8
.word 0xc38d
.word 0x8b2f
.word 0xf7ca
.word 0x3388
.word 0xd276
.word 0xb887
.word 0xd33d
.word 0x1f98
.word 0xae29
.word 0xa24e
.word 0x5e04
.word 0x5edb
.word 0x6ee9
.word 0x3ecf
.word 0x832c
.word 0x2715
.word 0x2e6d
.word 0x642b
.word 0xf1f7
.word 0x55a1
.word 0x8f5f
.word 0x54d5
.word 0x9959
.word 0xe8ed
.word 0x35de
.word 0x2d15
.word 0x327c
.word 0x83fb
.word 0x4afd
.word 0x7687
.word 0xb63c
.word 0xeedf
.word 0xf843
.word 0x989b
.word 0xe4a9
.word 0x9446
.word 0xf02b
.word 0x5f15
.word 0xbe8a
.word 0x04eb
.word 0xe8a4
.word 0x7f8d
.word 0x0bd6
.word 0x7121
.word 0x1691
.word 0x0bed
.word 0xd43a
.word 0x344e
.word 0xb848
.word 0xfdf8
.word 0xe999
.word 0x476d
.word 0x8e14
.word 0xb3bf
.word 0x5b85
.word 0xcb89
.word 0x5cb5
.word 0x6e2c
.word 0x01c9
.word 0x8147
.word 0x6bdd
.word 0xd479
.word 0xf6e1
.word 0x525a
.word 0x07b3
.word 0x6db7
.word 0x177d
.word 0xc80e
.word 0x0052
.word 0x274b
.word 0x8804
.word 0x94c1
.word 0x2b48
.word 0xd46a
.word 0x2d0d
.word 0x0963
.word 0xe119
.word 0xa8a3
.word 0x33e6
.word 0x9efb
.word 0x7cbc
.word 0xbe53
.word 0x870f
.word 0x6e23
.word 0xdf1b
.word 0x9330
.word 0x5cbe
.word 0xb989
.word 0xed96
.word 0x87c1
.word 0xa75b
.word 0x636e
.word 0x0f7e
.word 0x61e2
.word 0xa403
.word 0x7229
.word 0xb09c
.word 0xca43
.word 0x5107
.word 0x91a2
.word 0xc2a9
.word 0xcfe7
.word 0xef6c
.word 0x91da
.word 0x39d6
.word 0x61a7
.word 0x866a
.word 0xe560
.word 0x8d43
.word 0xd6af
.word 0x61ef
.word 0x24db
.word 0x3b8a
.word 0x67fe
.word 0x8c1c
.word 0x8985
.word 0x4234
.word 0xb2e8
.word 0x5bc4
.word 0x75ab
.word 0xa840
.word 0x3896
.word 0xe3f2
.word 0xe930
.word 0xf5a1
.word 0xdf82
.word 0x8163
.word 0x0e0a
.word 0xb4be
.word 0x6ffd
.word 0x5006
.word 0xafc2
.word 0xf7f2
.word 0x16ab
.word 0xb580
.word 0xbbf6
.word 0xd20c
.word 0xe604
.word 0xd6ac
.word 0xc6d8
.word 0xdccf
.word 0x54d3
.word 0x1c15
.word 0x87ae
.word 0xb471
.word 0xb9b8
.word 0xb77d
.word 0x5952
.word 0x781d
.word 0xd2a8
.word 0x1858
.word 0xbcb1
.word 0x4e73
.word 0x426a
.word 0x764f
.word 0xd34e
.word 0xdd05
.word 0x0d19
.word 0x4bbf
.word 0xe6bf
.word 0xd2da
.word 0x1da7
.word 0xd63a
.word 0xe02c
.word 0x5eec
.word 0xbf56
.word 0x9a03
.word 0xd0d5
.word 0xb4ac
.word 0x243f
.word 0xdb93
.word 0x6a8b
.word 0x8e7b
.word 0xe2ce
.word 0x2619
.word 0x8534
.word 0xa731
.word 0x7342
.word 0xc8f3
.word 0x9c4a
.word 0x4098
.word 0xb32f
.word 0x5339
.word 0x505a
.word 0x9def
.word 0x64fd
.word 0x1e31
.word 0xe287
.word 0x876a
.word 0xab68
.word 0xc4d9
.word 0xbb07
.word 0xcaae
.word 0x9300
.word 0xa363
.word 0xe6a2
.word 0xb758
.word 0x87a9
.word 0x5cb2
.word 0x9238
.word 0xa175
.word 0xda1a
.word 0x57e0
.word 0x933a
.word 0x6109
.word 0x4160
.word 0x3eb9
.word 0xe02e
.word 0xd48a
.word 0x555a
.word 0x7f3f
.word 0x142d
.word 0x5a64
.word 0x133d
.word 0xcd27
.word 0xf067
.word 0x5775
.word 0x5e0f
.word 0x9d58
.word 0xd59b
.word 0xb490
.word 0x7a2e
.word 0xab71
.word 0x4ca2
.word 0x5dfc
.word 0x91c8
.word 0x7541
.word 0x80e3
.word 0xc2f4
.word 0x3062
.word 0xbd4f
.word 0xc0de
.word 0x5827
.word 0xc854
.word 0x0952
.word 0x00a4
.word 0x1738
.word 0x2f49
.word 0x24b7
.word 0x575b
.word 0xfc3d
.word 0x1fc2
.word 0x9d20
.word 0x80bc
.word 0x8641
.word 0xb492
.word 0x45e2
.word 0x5c96
.word 0x3bc4
.word 0xf061
.word 0xb284
.word 0x6c4b
.word 0x2338
.word 0x392b
.word 0xc145
.word 0x5950
.word 0x4984
.word 0xd7c0
.word 0x0e95
.word 0x6eb0
.word 0x3f82
.word 0x7843
.word 0x7c98
.word 0x1a87
.word 0x9983
.word 0xaead
.word 0xb1a9
.word 0x7189
.word 0x6fc8
.word 0x6e4a
.word 0x99d2
.word 0xaa7b
.word 0xde09
.word 0x9139
.word 0xe057
.word 0xa1b6
.word 0x85f0
.word 0x55ee
.word 0x7b2a
.word 0x54a9
.word 0x0a9c
.word 0xdbb2
.word 0x1e76
.word 0x6856
.word 0x9421
.word 0xa81f
.word 0xc417
.word 0xa3d2
.word 0x5004
.word 0x26a6
.word 0x2d1e
.word 0x71c7
.word 0xefc1
.word 0x220b
.word 0x5950
.word 0x61f4
.word 0x2548
.word 0x4de6
.word 0x10a5
.word 0xa7a9
.word 0x2979
.word 0xbd22
.word 0x5ccb
.word 0x9a4e
.word 0x3aae
.word 0x6c80
.word 0x0ba2
.word 0x35db
.word 0x1630
.word 0xb612
.word 0x2fc0
.word 0x995f
.word 0x82be
.word 0xdec2
.word 0xa0ed
.word 0x877c
.word 0xc70b
.word 0x87cb
.word 0x76a6
.word 0xe8e7
.word 0x313e
.word 0x3d3c
.word 0x929c
.word 0x47ea
.word 0x9172
.word 0xeb7b
.word 0x1534
.word 0x54e4
.word 0xba36
.word 0x64be
.word 0xe506
.word 0x61c5
.word 0x060c
.word 0xdd91
.word 0x2d61
.word 0xe694
.word 0xd0ec
.word 0x6f55
.word 0xdbc3
.word 0xfeec
.word 0xf9c1
.word 0x98bd
.word 0x2263
.word 0xea79
.word 0x65e8
.word 0xb952
.word 0xf7a9
.word 0x8b7d
.word 0x7db6
.word 0x97ee
.word 0x97b2
.word 0xea4f
.word 0xadf1
.word 0xdc42
.word 0xfdcf
.word 0xb2d8
.word 0xe554
.word 0x9552
.word 0x6e05
.word 0xb317
.word 0x1a0d
.word 0xb3f5
.word 0xf08d
.word 0x5f9c
.word 0xc540
.word 0x8d58
.word 0xcc53
.word 0x4e0e
.word 0x6084
.word 0x5a7a
.word 0x1179
.word 0xbba7
.word 0xee63
.word 0xbab0
.word 0x13d3
.word 0x07b5
.word 0x72dc
.word 0x2c20
.word 0xe66b
.word 0x331a
.word 0x75e3
.word 0x9748
.word 0xe5fc
.word 0x69ca
.word 0x83dd
.word 0xc376
.word 0x2f78
.word 0x7251
.word 0xac26
.word 0xdf4f
.word 0x2684
.word 0x3e4d
.word 0x058e
.word 0xfb4b
.word 0xf1f9
.word 0x61ee
.word 0x26d5
.word 0x8d36
.word 0xfa64
.word 0x927b
.word 0xab35
.word 0xeeae
.word 0x6e85
.word 0x2dce
.word 0xb6d6
.word 0xdca9
.word 0xc2d1
.word 0xb0d5
.word 0x6a59
.word 0xf7ee
.word 0x2af1
.word 0x4011
.word 0x6f50
.word 0x4799
.word 0x2243
.word 0x2319
.word 0x73c3
.word 0xb39a
.word 0xe756
.word 0x4516
.word 0xa4ab
.word 0x8935
.word 0xfd70
.word 0xb646
.word 0x3977
.word 0xfa81
.word 0xa90a
.word 0x287b
.word 0xe98c
.word 0x9deb
.word 0x7551
.word 0x739c
.word 0x70bf
.word 0xeab2
.word 0xb1a5
.word 0x1221
.word 0x10db
.word 0xbe6a
.word 0xef1b
.word 0xa698
.word 0x0b20
.word 0xdb7b
.word 0x85fd
.word 0x7124
.word 0x2cc0
.word 0x67a2
.word 0x0d47
.word 0xdafb
.word 0x3d61
.word 0x6a6d
.word 0xe529
.word 0xede6
.word 0x8fa0
.word 0x53c1
.word 0xb18a
.word 0xd9c3
.word 0x788a
.word 0x7256
.word 0xd681
.word 0x7304
.word 0xcf24
.word 0x7d37
.word 0xffdc
.word 0xb02f
.word 0x70e2
.word 0x0d44
.word 0x9b9b
.word 0x2c5e
.word 0xbc31
.word 0x20b2
.word 0x5b73
.word 0xa8bf
.word 0x17ef
.word 0x9788
.word 0xb64e
.word 0x8613
.word 0x6af0
.word 0xb822
.word 0x66c8
.word 0x4d30
.word 0xa179
.word 0xabaf
.word 0xeab2
.word 0x2981
.word 0x2dc7
.word 0xfeb5
.word 0x0490
.word 0x6983
.word 0x8187
.word 0x228a
.word 0x3a1d
.word 0x0248
.word 0x965d
.word 0xeeda
.word 0x58c4
.word 0x09f6
.word 0x695f
.word 0x1a26
.word 0xea26
.word 0x3b47
.word 0x7a98
.word 0xc341
.word 0xc499
.word 0x7608
.word 0x4d88
.word 0xecd3
.word 0x7da5
.word 0x3f9c
.word 0xeba1
.word 0xf8d9
.word 0xed87
.word 0x3c79
.word 0x60cb
.word 0x3321
.word 0xb4b0
.word 0xb9a7
.word 0x3cdf
.word 0x49d0
.word 0xb544
.word 0x2646
.word 0x142c
.word 0xcbdd
.word 0x959e
.word 0x9507
.word 0x00f7
.word 0xaf95
.word 0x3ec9
.word 0x3eb0
.word 0x1df5
.word 0xce17
.word 0x6006
.word 0xfd9b
.word 0x0bd1
.word 0x66d8
.word 0xed4b
.word 0xd035
.word 0x6eab
.word 0x981e
.word 0x9ac0
.word 0x5c81
.word 0x6e94
.word 0xe987
.word 0x6342
.word 0x6794
.word 0x3915
.word 0xc482
.word 0x05e2
.word 0x5e19
.word 0x7ea8
.word 0xf4d2
.word 0x8465
.word 0xcecd
.word 0xf23b
.word 0x2c10
.word 0xa5c4
.word 0xec02
.word 0xcdb2
.word 0x8027
.word 0x73ab
.word 0x101d
.word 0x4b64
.word 0xebd8
.word 0xbcfc
.word 0x341a
.word 0x2e9b
.word 0xc936
.word 0x934b
.word 0x7705
.word 0x3816
.word 0x5d29
.word 0xce61
.word 0x9e81
.word 0xb488
.word 0x4bed
.word 0x87bb
.word 0x8f43
.word 0xec19
.word 0x1c92
.word 0x9d0b
.word 0xd696
.word 0xb2e2
.word 0xbf7b
.word 0x32b4
.word 0x23d6
.word 0xd973
.word 0x04e1
.word 0x2c50
.word 0xc8f7
.word 0xbb4f
.word 0x2250
.word 0xb62b
.word 0x3efe
.word 0xb46c
.word 0x3027
.word 0xbfc7
.word 0x9e84
.word 0xa3b6
.word 0xad1b
.word 0x7858
.word 0x2a39
.word 0x6d8b
.word 0xfab2
.word 0xd847
.word 0xc45c
.word 0x7b3e
.word 0xdcca
.word 0x19b2
.word 0x7345
.word 0x3a96
.word 0xfe11
.word 0x3ae8
.word 0xe3de
.word 0x984e
.word 0x6b8c
.word 0x7def
.word 0xe423
.word 0x8b95
.word 0x1613
.word 0xe900
.word 0xe8a8
.word 0x8c8d
.word 0x53d1
.word 0xc708
.word 0x8812
.word 0x16ce
.word 0x5dc6
.word 0x2727
.word 0xfe9a
.word 0x4a90
.word 0x2a2b
.word 0xed6f
.word 0x3140
.word 0x3036
.word 0x45a9
.word 0x5054
.word 0x3230
.word 0xefef
.word 0xe3ff
.word 0x95c8
.word 0xbe01
.word 0xe50f
.word 0xbf0d
.word 0xe004
.word 0xbf0e
.word 0x24aa
.word 0xbcaf
.word 0xe005
.word 0xbd0e
.word 0xe003
.word 0xbb04
.word 0xec01
.word 0xbb05
.word 0xe600
.word 0xbb01
.word 0xbb02
.word 0xe057
.word 0xee6d
.word 0xe77c
.word 0xe98a
.word 0xbca0
.word 0xe109
.word 0xb909
.word 0xb8ab
.word 0xe108
.word 0xb90a
.word 0xe806
.word 0xbd00
.word 0xe293
.word 0xe604
.word 0x2ec0
.word 0xe105
.word 0x2ed0
.word 0x24bb
.word 0xb303
.word 0x7c00
.word 0x3000
.word 0xf0d1
.word 0x27ee
.word 0x27ff
.word 0x27aa
.word 0x27bb
.word 0x27cc
.word 0x9005
.word 0x0da0
.word 0x1dba
.word 0x25c0
.word 0x33fd
.word 0xf7d1
.word 0x3fe0
.word 0xf7c1
.word 0x9005
.word 0x160c
.word 0x9005
.word 0x060a
.word 0x95c8
.word 0x060b
.word 0xf431
.word 0x940c
.word 0x0a53
.word 0xe101
.word 0xbf07
.word 0x95e8
.word 0xcfbd
.word 0xe403
.word 0xb90c
.word 0xd08b
.word 0xeb24
.word 0xe443
.word 0xe031
.word 0xc000
.word 0x995f
.word 0xc00c
.word 0xd08d
.word 0xf7e1
.word 0xb3a2
.word 0xe6b0
.word 0x27ab
.word 0xbba2
.word 0x952a
.word 0xf409
.word 0xcfd4
.word 0xb94c
.word 0xd07a
.word 0xcff2
.word 0xb10c
.word 0x3001
.word 0xf041
.word 0x3004
.word 0xf769
.word 0xe006
.word 0xb90c
.word 0xd071
.word 0xd079
.word 0xf7f1
.word 0xcfdc
.word 0x3443
.word 0xf411
.word 0xe145
.word 0xe02a
.word 0xe0a0
.word 0xe0b3

3ed2:   67 d0           set_TCNT1_0xe17b_and_rest_TOV1_flag();
3ed4:   00 c0           goto Label_0x3ed6;

; Referenced from offset 0x3ed4 by rjmp
; Referenced from offset 0x3edc by brne
; Referenced from offset 0x3eee by brne
Label_0x3ed6:
3ed6:   5f 99           skipif (!IO_BIT[UCSRA,7])           ; 0x80 = 128
3ed8:   06 c0           goto Label_0x3ee6;
3eda:   6c d0           get_TOV1_flag();
3edc:   e1 f7           if (c1 != c2) goto Label_0x3ed6;

; Referenced from offset 0x3efa by brne
Label_0x3ede:
3ede:   05 e1           r16 = 21;                           ; 0x15
3ee0:   0c b9           IO[UDR] = r16;
3ee2:   5f d0           set_TCNT1_0xe17b_and_rest_TOV1_flag();
3ee4:   d7 cf           goto Label_0x3e94;

; Referenced from offset 0x3ed8 by rjmp
Label_0x3ee6:
3ee6:   5d d0           set_TCNT1_0xe17b_and_rest_TOV1_flag();
3ee8:   0c b1           r16 = IO[UDR];
3eea:   0d 93           Memory[[r26:r27]++] = r16;
3eec:   a4 38           cmp(r26, 0x84);                     ; 132
3eee:   99 f7           if (c1 != c2) goto Label_0x3ed6;
3ef0:   02 e8           r16 = 130;                          ; 0x82
3ef2:   e2 e0           r30 = 2;                            ; 0x02
3ef4:   f3 e0           r31 = 3;                            ; 0x03
3ef6:   67 d0           Function_0x3fc6();
3ef8:   ab 2b           r26 |= r27;
3efa:   89 f7           if (c1 != c2) goto Label_0x3ede;
3efc:   00 91 00 03     r16 = Memory[0x0300];               ; 768
3f00:   03 17           cmp(r16, r19);
3f02:   51 f0           if (c1 == c2) goto Label_0x3f18;
3f04:   03 95           r16++;
3f06:   03 13           skipif (r16 == r19)
3f08:   04 c0           goto Label_0x3f12;
3f0a:   06 e0           r16 = 6;                            ; 0x06
3f0c:   0c b9           IO[UDR] = r16;
3f0e:   49 d0           set_TCNT1_0xe17b_and_rest_TOV1_flag();
3f10:   c1 cf           goto Label_0x3e94;

; Referenced from offset 0x3f08 by rjmp
Label_0x3f12:
3f12:   08 e1           r16 = 24;                           ; 0x18
3f14:   0c b9           IO[UDR] = r16;
3f16:   b3 cf           goto Label_0x3e7e;

; Referenced from offset 0x3f02 by breq
Label_0x3f18:
3f18:   ee 27           r30 = 0x00;                         ; 0
3f1a:   f0 91 00 03     r31 = Memory[0x0300];               ; 768
3f1e:   fa 95           r31--;
3f20:   f6 95           r31 >>= 1;                          ; _BV(7) = 0, Carry = _BV(0) (logical shift)
3f22:   e7 95           r30 >>= 1;                          ; _BV(7) = Carry, Carry = _BV(0) (rotate right)
3f24:   ef 01           [r29:r28] = [r31:r30];
3f26:   03 e0           r16 = 3;                            ; 0x03
3f28:   07 bf           IO[SPMCR] = r16;
3f2a:   e8 95           spm

; Referenced from offset 0x3f30 by rjmp
Label_0x3f2c:
3f2c:   07 b7           r16 = IO[SPMCR];
3f2e:   00 fd           skipif (!bit(r16,0))
3f30:   fd cf           goto Label_0x3f2c;
3f32:   a2 e0           r26 = 2;                            ; 0x02
3f34:   b3 e0           r27 = 3;                            ; 0x03
3f36:   10 e8           r17 = 128;                          ; 0x80

; Referenced from offset 0x3f72 by brne
Label_0x3f38:
3f38:   0c 91           r16 = Memory[r26:r27];
3f3a:   02 bb           IO[PORTD] = r16;
3f3c:   08 27           r16 ^= r24;
3f3e:   bb 20           (r11 == 0) || (r11 < 0);            ; test r11
3f40:   39 f4           if (c1 != c2) goto Label_0x3f50;
3f42:   e0 2e           r14 = r16;
3f44:   05 27           r16 ^= r21;
3f46:   01 54           r16 -= 65;                          ; 0x41, no carry
3f48:   09 27           r16 ^= r25;
3f4a:   9e 2d           r25 = r14;
3f4c:   b3 94           r11++;
3f4e:   0f c0           goto Label_0x3f6e;

; Referenced from offset 0x3f40 by brne
Label_0x3f50:
3f50:   b1 fc           skipif (!bit(r11,1))
3f52:   07 c0           goto Label_0x3f62;
3f54:   e0 2e           r14 = r16;
3f56:   06 27           r16 ^= r22;
3f58:   02 95           r16 = ((r16 & 0xf0) >> 4) | ((r16 & 0x0f) << 4); ; swap nibbles
3f5a:   0c 25           r16 ^= r12;
3f5c:   ce 2c           r12 = r14;
3f5e:   b3 94           r11++;
3f60:   06 c0           goto Label_0x3f6e;

; Referenced from offset 0x3f52 by rjmp
Label_0x3f62:
3f62:   e0 2e           r14 = r16;
3f64:   07 27           r16 ^= r23;
3f66:   00 95           com     r16
3f68:   0d 25           r16 ^= r13;
3f6a:   de 2c           r13 = r14;
3f6c:   bb 24           r11 = 0x00;                         ; 0

; Referenced from offset 0x3f4e by rjmp
; Referenced from offset 0x3f60 by rjmp
Label_0x3f6e:
3f6e:   0d 93           Memory[[r26:r27]++] = r16;
3f70:   1a 95           r17--;
3f72:   11 f7           if (c1 != c2) goto Label_0x3f38;
3f74:   01 e0           r16 = 1;                            ; 0x01
3f76:   10 e4           r17 = 64;                           ; 0x40
3f78:   a2 e0           r26 = 2;                            ; 0x02
3f7a:   b3 e0           r27 = 3;                            ; 0x03

; Referenced from offset 0x3f88 by brne
Label_0x3f7c:
3f7c:   0d 90           r0 = Memory[[r26:r27]++];
3f7e:   1d 90           r1 = Memory[[r26:r27]++];
3f80:   07 bf           IO[SPMCR] = r16;
3f82:   e8 95           spm
3f84:   32 96           [r31:r30] += 0x02;                  ; 2
3f86:   1a 95           r17--;
3f88:   c9 f7           if (c1 != c2) goto Label_0x3f7c;
3f8a:   fe 01           [r31:r30] = [r29:r28];
3f8c:   05 e0           r16 = 5;                            ; 0x05
3f8e:   07 bf           IO[SPMCR] = r16;
3f90:   e8 95           spm

; Referenced from offset 0x3f96 by rjmp
Label_0x3f92:
3f92:   07 b7           r16 = IO[SPMCR];
3f94:   00 fd           skipif (!bit(r16,0))
3f96:   fd cf           goto Label_0x3f92;
3f98:   33 95           r19++;
3f9a:   06 e0           r16 = 6;                            ; 0x06
3f9c:   0c b9           IO[UDR] = r16;
3f9e:   01 d0           set_TCNT1_0xe17b_and_rest_TOV1_flag();
3fa0:   79 cf           goto Label_0x3e94;

; Referenced from offset 0x3ed2 by rcall
; Referenced from offset 0x3ee2 by rcall
; Referenced from offset 0x3ee6 by rcall
; Referenced from offset 0x3f0e by rcall
; Referenced from offset 0x3f9e by rcall
set_TCNT1_0xe17b_and_rest_TOV1_flag:
3fa2:   0f 93           push    r16
3fa4:   01 ee           r16 = 225;                          ; 0xe1
3fa6:   0d bd           IO[TCNT1H] = r16;
3fa8:   0b e7           r16 = 123;                          ; 0x7b
3faa:   0c bd           IO[TCNT1L] = r16;
3fac:   04 e0           r16 = 4;                            ; 0x04
3fae:   08 bf           IO[TIFR] = r16;
3fb0:   0f 91           pop     r16
3fb2:   08 95           return;


; Referenced from offset 0x3eda by rcall
get_TOV1_flag:
3fb4:   0f 93           push    r16
3fb6:   1f 93           push    r17
3fb8:   08 b7           r16 = IO[TIFR];
3fba:   14 e0           r17 = 4;                            ; 0x04
3fbc:   01 23           r16 &= r17;
3fbe:   01 27           r16 ^= r17;
3fc0:   1f 91           pop     r17
3fc2:   0f 91           pop     r16
3fc4:   08 95           return;


; Referenced from offset 0x3ef6 by rcall
Function_0x3fc6:
3fc6:   0f 93           push    r16
3fc8:   1f 93           push    r17
3fca:   cf 93           push    r28
3fcc:   df 93           push    r29
3fce:   a0 e0           r26 = 0;                            ; 0x00
3fd0:   b0 e0           r27 = 0;                            ; 0x00
3fd2:   c1 e2           r28 = 33;                           ; 0x21
3fd4:   d0 e1           r29 = 16;                           ; 0x10

; Referenced from offset 0x3fec by brne
Label_0x3fd6:
3fd6:   11 91           r17 = Memory[[r30:r31]++];
3fd8:   b1 27           r27 ^= r17;
3fda:   18 e0           r17 = 8;                            ; 0x08

; Referenced from offset 0x3fe8 by brne
Label_0x3fdc:
3fdc:   aa 0f           r26 *= 2;
3fde:   bb 1f           r27 += r27;                         ; With carry
3fe0:   10 f4           if (!Carry) goto Label_0x3fe6;
3fe2:   ac 27           r26 ^= r28;
3fe4:   bd 27           r27 ^= r29;

; Referenced from offset 0x3fe0 by brcc
Label_0x3fe6:
3fe6:   1a 95           r17--;
3fe8:   c9 f7           if (c1 != c2) goto Label_0x3fdc;
3fea:   0a 95           r16--;
3fec:   a1 f7           if (c1 != c2) goto Label_0x3fd6;
3fee:   df 91           pop     r29
3ff0:   cf 91           pop     r28
3ff2:   1f 91           pop     r17
3ff4:   0f 91           pop     r16
3ff6:   08 95           return;

; Inline PGM data: 1 string starting at 0x3ff8 (authors_initials)
String_0x3ff8_authors_initials_0:    ; Address 0x3ff8 (16376)
.ascii "c(E)PT"
.byte 0x01
.byte 0xab
.byte 0x00


}

